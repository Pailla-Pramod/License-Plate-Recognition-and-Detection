{
  "cells": [
    {
      "cell_type": "code",
      "execution_count": 2,
      "id": "396d7da2-01b3-4c48-aaa6-5852c8c248cb",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "396d7da2-01b3-4c48-aaa6-5852c8c248cb",
        "outputId": "bac5dfda-9cc8-4a59-e1de-2438bbad6d1f"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Collecting ultralytics\n",
            "  Downloading ultralytics-8.3.146-py3-none-any.whl.metadata (37 kB)\n",
            "Requirement already satisfied: opencv-python in /usr/local/lib/python3.11/dist-packages (4.11.0.86)\n",
            "Requirement already satisfied: pandas in /usr/local/lib/python3.11/dist-packages (2.2.2)\n",
            "Requirement already satisfied: matplotlib in /usr/local/lib/python3.11/dist-packages (3.10.0)\n",
            "Requirement already satisfied: numpy>=1.23.0 in /usr/local/lib/python3.11/dist-packages (from ultralytics) (2.0.2)\n",
            "Requirement already satisfied: pillow>=7.1.2 in /usr/local/lib/python3.11/dist-packages (from ultralytics) (11.2.1)\n",
            "Requirement already satisfied: pyyaml>=5.3.1 in /usr/local/lib/python3.11/dist-packages (from ultralytics) (6.0.2)\n",
            "Requirement already satisfied: requests>=2.23.0 in /usr/local/lib/python3.11/dist-packages (from ultralytics) (2.32.3)\n",
            "Requirement already satisfied: scipy>=1.4.1 in /usr/local/lib/python3.11/dist-packages (from ultralytics) (1.15.3)\n",
            "Requirement already satisfied: torch>=1.8.0 in /usr/local/lib/python3.11/dist-packages (from ultralytics) (2.6.0+cu124)\n",
            "Requirement already satisfied: torchvision>=0.9.0 in /usr/local/lib/python3.11/dist-packages (from ultralytics) (0.21.0+cu124)\n",
            "Requirement already satisfied: tqdm>=4.64.0 in /usr/local/lib/python3.11/dist-packages (from ultralytics) (4.67.1)\n",
            "Requirement already satisfied: psutil in /usr/local/lib/python3.11/dist-packages (from ultralytics) (5.9.5)\n",
            "Requirement already satisfied: py-cpuinfo in /usr/local/lib/python3.11/dist-packages (from ultralytics) (9.0.0)\n",
            "Collecting ultralytics-thop>=2.0.0 (from ultralytics)\n",
            "  Downloading ultralytics_thop-2.0.14-py3-none-any.whl.metadata (9.4 kB)\n",
            "Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.11/dist-packages (from pandas) (2.9.0.post0)\n",
            "Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.11/dist-packages (from pandas) (2025.2)\n",
            "Requirement already satisfied: tzdata>=2022.7 in /usr/local/lib/python3.11/dist-packages (from pandas) (2025.2)\n",
            "Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.11/dist-packages (from matplotlib) (1.3.2)\n",
            "Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.11/dist-packages (from matplotlib) (0.12.1)\n",
            "Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.11/dist-packages (from matplotlib) (4.58.0)\n",
            "Requirement already satisfied: kiwisolver>=1.3.1 in /usr/local/lib/python3.11/dist-packages (from matplotlib) (1.4.8)\n",
            "Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.11/dist-packages (from matplotlib) (24.2)\n",
            "Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.11/dist-packages (from matplotlib) (3.2.3)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.11/dist-packages (from python-dateutil>=2.8.2->pandas) (1.17.0)\n",
            "Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.11/dist-packages (from requests>=2.23.0->ultralytics) (3.4.2)\n",
            "Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.11/dist-packages (from requests>=2.23.0->ultralytics) (3.10)\n",
            "Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.11/dist-packages (from requests>=2.23.0->ultralytics) (2.4.0)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.11/dist-packages (from requests>=2.23.0->ultralytics) (2025.4.26)\n",
            "Requirement already satisfied: filelock in /usr/local/lib/python3.11/dist-packages (from torch>=1.8.0->ultralytics) (3.18.0)\n",
            "Requirement already satisfied: typing-extensions>=4.10.0 in /usr/local/lib/python3.11/dist-packages (from torch>=1.8.0->ultralytics) (4.13.2)\n",
            "Requirement already satisfied: networkx in /usr/local/lib/python3.11/dist-packages (from torch>=1.8.0->ultralytics) (3.4.2)\n",
            "Requirement already satisfied: jinja2 in /usr/local/lib/python3.11/dist-packages (from torch>=1.8.0->ultralytics) (3.1.6)\n",
            "Requirement already satisfied: fsspec in /usr/local/lib/python3.11/dist-packages (from torch>=1.8.0->ultralytics) (2025.3.2)\n",
            "Collecting nvidia-cuda-nvrtc-cu12==12.4.127 (from torch>=1.8.0->ultralytics)\n",
            "  Downloading nvidia_cuda_nvrtc_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl.metadata (1.5 kB)\n",
            "Collecting nvidia-cuda-runtime-cu12==12.4.127 (from torch>=1.8.0->ultralytics)\n",
            "  Downloading nvidia_cuda_runtime_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl.metadata (1.5 kB)\n",
            "Collecting nvidia-cuda-cupti-cu12==12.4.127 (from torch>=1.8.0->ultralytics)\n",
            "  Downloading nvidia_cuda_cupti_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl.metadata (1.6 kB)\n",
            "Collecting nvidia-cudnn-cu12==9.1.0.70 (from torch>=1.8.0->ultralytics)\n",
            "  Downloading nvidia_cudnn_cu12-9.1.0.70-py3-none-manylinux2014_x86_64.whl.metadata (1.6 kB)\n",
            "Collecting nvidia-cublas-cu12==12.4.5.8 (from torch>=1.8.0->ultralytics)\n",
            "  Downloading nvidia_cublas_cu12-12.4.5.8-py3-none-manylinux2014_x86_64.whl.metadata (1.5 kB)\n",
            "Collecting nvidia-cufft-cu12==11.2.1.3 (from torch>=1.8.0->ultralytics)\n",
            "  Downloading nvidia_cufft_cu12-11.2.1.3-py3-none-manylinux2014_x86_64.whl.metadata (1.5 kB)\n",
            "Collecting nvidia-curand-cu12==10.3.5.147 (from torch>=1.8.0->ultralytics)\n",
            "  Downloading nvidia_curand_cu12-10.3.5.147-py3-none-manylinux2014_x86_64.whl.metadata (1.5 kB)\n",
            "Collecting nvidia-cusolver-cu12==11.6.1.9 (from torch>=1.8.0->ultralytics)\n",
            "  Downloading nvidia_cusolver_cu12-11.6.1.9-py3-none-manylinux2014_x86_64.whl.metadata (1.6 kB)\n",
            "Collecting nvidia-cusparse-cu12==12.3.1.170 (from torch>=1.8.0->ultralytics)\n",
            "  Downloading nvidia_cusparse_cu12-12.3.1.170-py3-none-manylinux2014_x86_64.whl.metadata (1.6 kB)\n",
            "Requirement already satisfied: nvidia-cusparselt-cu12==0.6.2 in /usr/local/lib/python3.11/dist-packages (from torch>=1.8.0->ultralytics) (0.6.2)\n",
            "Requirement already satisfied: nvidia-nccl-cu12==2.21.5 in /usr/local/lib/python3.11/dist-packages (from torch>=1.8.0->ultralytics) (2.21.5)\n",
            "Requirement already satisfied: nvidia-nvtx-cu12==12.4.127 in /usr/local/lib/python3.11/dist-packages (from torch>=1.8.0->ultralytics) (12.4.127)\n",
            "Collecting nvidia-nvjitlink-cu12==12.4.127 (from torch>=1.8.0->ultralytics)\n",
            "  Downloading nvidia_nvjitlink_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl.metadata (1.5 kB)\n",
            "Requirement already satisfied: triton==3.2.0 in /usr/local/lib/python3.11/dist-packages (from torch>=1.8.0->ultralytics) (3.2.0)\n",
            "Requirement already satisfied: sympy==1.13.1 in /usr/local/lib/python3.11/dist-packages (from torch>=1.8.0->ultralytics) (1.13.1)\n",
            "Requirement already satisfied: mpmath<1.4,>=1.1.0 in /usr/local/lib/python3.11/dist-packages (from sympy==1.13.1->torch>=1.8.0->ultralytics) (1.3.0)\n",
            "Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.11/dist-packages (from jinja2->torch>=1.8.0->ultralytics) (3.0.2)\n",
            "Downloading ultralytics-8.3.146-py3-none-any.whl (1.0 MB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.0/1.0 MB\u001b[0m \u001b[31m25.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading nvidia_cublas_cu12-12.4.5.8-py3-none-manylinux2014_x86_64.whl (363.4 MB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m363.4/363.4 MB\u001b[0m \u001b[31m4.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading nvidia_cuda_cupti_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl (13.8 MB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m13.8/13.8 MB\u001b[0m \u001b[31m127.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading nvidia_cuda_nvrtc_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl (24.6 MB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m24.6/24.6 MB\u001b[0m \u001b[31m98.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading nvidia_cuda_runtime_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl (883 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m883.7/883.7 kB\u001b[0m \u001b[31m53.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading nvidia_cudnn_cu12-9.1.0.70-py3-none-manylinux2014_x86_64.whl (664.8 MB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m664.8/664.8 MB\u001b[0m \u001b[31m2.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading nvidia_cufft_cu12-11.2.1.3-py3-none-manylinux2014_x86_64.whl (211.5 MB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m211.5/211.5 MB\u001b[0m \u001b[31m6.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading nvidia_curand_cu12-10.3.5.147-py3-none-manylinux2014_x86_64.whl (56.3 MB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m56.3/56.3 MB\u001b[0m \u001b[31m13.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading nvidia_cusolver_cu12-11.6.1.9-py3-none-manylinux2014_x86_64.whl (127.9 MB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m127.9/127.9 MB\u001b[0m \u001b[31m7.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading nvidia_cusparse_cu12-12.3.1.170-py3-none-manylinux2014_x86_64.whl (207.5 MB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m207.5/207.5 MB\u001b[0m \u001b[31m6.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading nvidia_nvjitlink_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl (21.1 MB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m21.1/21.1 MB\u001b[0m \u001b[31m108.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading ultralytics_thop-2.0.14-py3-none-any.whl (26 kB)\n",
            "Installing collected packages: nvidia-nvjitlink-cu12, nvidia-curand-cu12, nvidia-cufft-cu12, nvidia-cuda-runtime-cu12, nvidia-cuda-nvrtc-cu12, nvidia-cuda-cupti-cu12, nvidia-cublas-cu12, nvidia-cusparse-cu12, nvidia-cudnn-cu12, nvidia-cusolver-cu12, ultralytics-thop, ultralytics\n",
            "  Attempting uninstall: nvidia-nvjitlink-cu12\n",
            "    Found existing installation: nvidia-nvjitlink-cu12 12.5.82\n",
            "    Uninstalling nvidia-nvjitlink-cu12-12.5.82:\n",
            "      Successfully uninstalled nvidia-nvjitlink-cu12-12.5.82\n",
            "  Attempting uninstall: nvidia-curand-cu12\n",
            "    Found existing installation: nvidia-curand-cu12 10.3.6.82\n",
            "    Uninstalling nvidia-curand-cu12-10.3.6.82:\n",
            "      Successfully uninstalled nvidia-curand-cu12-10.3.6.82\n",
            "  Attempting uninstall: nvidia-cufft-cu12\n",
            "    Found existing installation: nvidia-cufft-cu12 11.2.3.61\n",
            "    Uninstalling nvidia-cufft-cu12-11.2.3.61:\n",
            "      Successfully uninstalled nvidia-cufft-cu12-11.2.3.61\n",
            "  Attempting uninstall: nvidia-cuda-runtime-cu12\n",
            "    Found existing installation: nvidia-cuda-runtime-cu12 12.5.82\n",
            "    Uninstalling nvidia-cuda-runtime-cu12-12.5.82:\n",
            "      Successfully uninstalled nvidia-cuda-runtime-cu12-12.5.82\n",
            "  Attempting uninstall: nvidia-cuda-nvrtc-cu12\n",
            "    Found existing installation: nvidia-cuda-nvrtc-cu12 12.5.82\n",
            "    Uninstalling nvidia-cuda-nvrtc-cu12-12.5.82:\n",
            "      Successfully uninstalled nvidia-cuda-nvrtc-cu12-12.5.82\n",
            "  Attempting uninstall: nvidia-cuda-cupti-cu12\n",
            "    Found existing installation: nvidia-cuda-cupti-cu12 12.5.82\n",
            "    Uninstalling nvidia-cuda-cupti-cu12-12.5.82:\n",
            "      Successfully uninstalled nvidia-cuda-cupti-cu12-12.5.82\n",
            "  Attempting uninstall: nvidia-cublas-cu12\n",
            "    Found existing installation: nvidia-cublas-cu12 12.5.3.2\n",
            "    Uninstalling nvidia-cublas-cu12-12.5.3.2:\n",
            "      Successfully uninstalled nvidia-cublas-cu12-12.5.3.2\n",
            "  Attempting uninstall: nvidia-cusparse-cu12\n",
            "    Found existing installation: nvidia-cusparse-cu12 12.5.1.3\n",
            "    Uninstalling nvidia-cusparse-cu12-12.5.1.3:\n",
            "      Successfully uninstalled nvidia-cusparse-cu12-12.5.1.3\n",
            "  Attempting uninstall: nvidia-cudnn-cu12\n",
            "    Found existing installation: nvidia-cudnn-cu12 9.3.0.75\n",
            "    Uninstalling nvidia-cudnn-cu12-9.3.0.75:\n",
            "      Successfully uninstalled nvidia-cudnn-cu12-9.3.0.75\n",
            "  Attempting uninstall: nvidia-cusolver-cu12\n",
            "    Found existing installation: nvidia-cusolver-cu12 11.6.3.83\n",
            "    Uninstalling nvidia-cusolver-cu12-11.6.3.83:\n",
            "      Successfully uninstalled nvidia-cusolver-cu12-11.6.3.83\n",
            "Successfully installed nvidia-cublas-cu12-12.4.5.8 nvidia-cuda-cupti-cu12-12.4.127 nvidia-cuda-nvrtc-cu12-12.4.127 nvidia-cuda-runtime-cu12-12.4.127 nvidia-cudnn-cu12-9.1.0.70 nvidia-cufft-cu12-11.2.1.3 nvidia-curand-cu12-10.3.5.147 nvidia-cusolver-cu12-11.6.1.9 nvidia-cusparse-cu12-12.3.1.170 nvidia-nvjitlink-cu12-12.4.127 ultralytics-8.3.146 ultralytics-thop-2.0.14\n"
          ]
        }
      ],
      "source": [
        "!pip install ultralytics opencv-python pandas matplotlib"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 3,
      "id": "Bldu6jR-Ed0s",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Bldu6jR-Ed0s",
        "outputId": "24b6bda5-19bf-41e7-fda3-9e00cd12e652"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mounted at /content/drive\n"
          ]
        }
      ],
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/drive')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 4,
      "id": "42ca4fa7-cf6c-422f-b672-bc01b0bc6430",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "42ca4fa7-cf6c-422f-b672-bc01b0bc6430",
        "outputId": "9fac3f5f-b7bb-430f-9700-a17886488e49"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "All files extracted successfully!\n"
          ]
        }
      ],
      "source": [
        "import shutil\n",
        "import os\n",
        "\n",
        "# Unzip the main assignment file\n",
        "shutil.unpack_archive(\"/content/drive/MyDrive/DATA SCIENTIST_ASSIGNMENT-20250530T142631Z-1-001.zip\", \"DATA_SCIENTIST_ASSIGNMENT\")\n",
        "\n",
        "# Unzip sub-archives inside it\n",
        "shutil.unpack_archive(\"/content/DATA_SCIENTIST_ASSIGNMENT/DATA SCIENTIST_ASSIGNMENT/Licplatesdetection_train.zip\", \"Licplatesdetection_train\")\n",
        "shutil.unpack_archive(\"/content/DATA_SCIENTIST_ASSIGNMENT/DATA SCIENTIST_ASSIGNMENT/Licplatesrecognition_train.zip\", \"Licplatesrecognition_train\")\n",
        "shutil.unpack_archive(\"/content/DATA_SCIENTIST_ASSIGNMENT/DATA SCIENTIST_ASSIGNMENT/test.zip\", \"test\")\n",
        "\n",
        "print(\"All files extracted successfully!\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 5,
      "id": "af574ee5-1c76-4874-b727-01c3521feb5f",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 315
        },
        "id": "af574ee5-1c76-4874-b727-01c3521feb5f",
        "outputId": "f6e10bc1-ce6f-4023-8776-5a803e0230c5"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "import cv2\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "def display_image(image_path):\n",
        "    img = cv2.imread(image_path)\n",
        "    img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\n",
        "    plt.imshow(img)\n",
        "    plt.axis(\"off\")\n",
        "    plt.show()\n",
        "\n",
        "# Show a sample car image\n",
        "display_image(\"/content/Licplatesdetection_train/license_plates_detection_train/1.jpg\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 6,
      "id": "c0cbac14-dc2e-4d20-9eb7-ede561c2ceff",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "c0cbac14-dc2e-4d20-9eb7-ede561c2ceff",
        "outputId": "8ca1f3eb-4d83-49ce-cc01-7c930e132850"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Folder structure created!\n"
          ]
        }
      ],
      "source": [
        "import os\n",
        "folders = [\n",
        "    \"dataset/train/images\", \"dataset/train/labels\",\n",
        "    \"dataset/val/images\", \"dataset/val/labels\",\n",
        "    \"dataset/test/images\", \"dataset/test/labels\",\n",
        "    \"dataset/ocr_data/plates\"\n",
        "]\n",
        "\n",
        "for folder in folders:\n",
        "    os.makedirs(folder, exist_ok=True)\n",
        "\n",
        "print(\"Folder structure created!\")\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 7,
      "id": "5c7e92bf-f6cc-4758-ad49-88133c1b6437",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5c7e92bf-f6cc-4758-ad49-88133c1b6437",
        "outputId": "38f7e4d9-5d91-4127-c862-bb07c9df4d35"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Files moved and overwritten if necessary.\n"
          ]
        }
      ],
      "source": [
        "import os\n",
        "import shutil\n",
        "\n",
        "def move_with_overwrite(src_dir, dst_dir):\n",
        "    for file in os.listdir(src_dir):\n",
        "        src_path = os.path.join(src_dir, file)\n",
        "        dst_path = os.path.join(dst_dir, file)\n",
        "        if os.path.exists(dst_path):\n",
        "            os.remove(dst_path)  # Delete existing file\n",
        "        shutil.move(src_path, dst_path)\n",
        "\n",
        "move_with_overwrite(\"/content/Licplatesdetection_train/license_plates_detection_train\", \"/content/dataset/train/images\")\n",
        "move_with_overwrite(\"/content/Licplatesrecognition_train/license_plates_recognition_train\", \"/content/dataset/ocr_data/plates\")\n",
        "\n",
        "print(\"Files moved and overwritten if necessary.\")\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 8,
      "id": "3181291b-c063-423e-827d-6a0b5b8686a6",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "3181291b-c063-423e-827d-6a0b5b8686a6",
        "outputId": "481e7b08-0919-4cf5-b983-fa62e4f889c0"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "YOLO labels created for object detection.\n"
          ]
        }
      ],
      "source": [
        "import pandas as pd\n",
        "\n",
        "def convert_to_yolo(xmin, ymin, xmax, ymax, width, height):\n",
        "    x_center = (xmin + xmax) / 2 / width\n",
        "    y_center = (ymin + ymax) / 2 / height\n",
        "    w = (xmax - xmin) / width\n",
        "    h = (ymax - ymin) / height\n",
        "    return x_center, y_center, w, h\n",
        "\n",
        "# Load detection annotations\n",
        "detection_df = pd.read_csv(\"/content/DATA_SCIENTIST_ASSIGNMENT/DATA SCIENTIST_ASSIGNMENT/Licplatesdetection_train.csv\")\n",
        "\n",
        "# Convert and save in YOLO format\n",
        "for _, row in detection_df.iterrows():\n",
        "    img_width, img_height = 640, 480  # use actual dimensions if available\n",
        "    x_center, y_center, w, h = convert_to_yolo(row[\"xmin\"], row[\"ymin\"], row[\"xmax\"], row[\"ymax\"], img_width, img_height)\n",
        "\n",
        "    label_path = f\"/content/dataset/train/labels/{row['img_id'].replace('.jpg', '.txt')}\"\n",
        "    with open(label_path, \"w\") as f:\n",
        "        f.write(f\"0 {x_center} {y_center} {w} {h}\\n\")\n",
        "\n",
        "print(\"YOLO labels created for object detection.\")\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 9,
      "id": "6c06f0c3",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "6c06f0c3",
        "outputId": "fdb7fdff-fbed-4d72-80ff-e352422e80c5"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "YOLO label files successfully created.\n"
          ]
        }
      ],
      "source": [
        "\n",
        "import os\n",
        "import pandas as pd\n",
        "import cv2\n",
        "\n",
        "# Load the CSV file\n",
        "csv_path = \"/content/DATA_SCIENTIST_ASSIGNMENT/DATA SCIENTIST_ASSIGNMENT/Licplatesdetection_train.csv\"\n",
        "df = pd.read_csv(csv_path)\n",
        "\n",
        "# Define paths\n",
        "image_folder = \"/content/dataset/train/images\"\n",
        "label_folder = \"/content/dataset/train/labels\"\n",
        "os.makedirs(label_folder, exist_ok=True)\n",
        "\n",
        "# Function to convert bounding box to YOLO format\n",
        "def convert_to_yolo(size, box):\n",
        "    dw = 1. / size[0]\n",
        "    dh = 1. / size[1]\n",
        "    x = (box[0] + box[2]) / 2.0\n",
        "    y = (box[1] + box[3]) / 2.0\n",
        "    w = box[2] - box[0]\n",
        "    h = box[3] - box[1]\n",
        "    x = x * dw\n",
        "    w = w * dw\n",
        "    y = y * dh\n",
        "    h = h * dh\n",
        "    return (x, y, w, h)\n",
        "\n",
        "# Iterate through each row and write YOLO label\n",
        "for index, row in df.iterrows():\n",
        "    img_path = os.path.join(image_folder, row['img_id'])\n",
        "\n",
        "    # Read image to get dimensions\n",
        "    img = cv2.imread(img_path)\n",
        "    if img is None:\n",
        "        print(f\"Could not load image {img_path}, skipping.\")\n",
        "        continue\n",
        "\n",
        "    h, w, _ = img.shape\n",
        "\n",
        "    # Correct box format: (xmin, ymin, xmax, ymax)\n",
        "    bbox = (row['xmin'], row['ymin'], row['xmax'], row['ymax'])\n",
        "    yolo_bbox = convert_to_yolo((w, h), bbox)\n",
        "\n",
        "    # Create label file\n",
        "    label_file = os.path.splitext(row['img_id'])[0] + \".txt\"\n",
        "    label_path = os.path.join(label_folder, label_file)\n",
        "    with open(label_path, 'w') as f:\n",
        "        f.write(f\"0 {' '.join(map(str, yolo_bbox))}\\n\")\n",
        "\n",
        "print(\"YOLO label files successfully created.\")\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 10,
      "id": "9P2SRtLMXFG4",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "9P2SRtLMXFG4",
        "outputId": "f0783182-53c3-46a2-d37d-610426d70327"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Fixed annotations in 0 lines.\n",
            "Skipped 0 files with no valid data.\n"
          ]
        }
      ],
      "source": [
        "import os\n",
        "import glob\n",
        "import cv2\n",
        "\n",
        "label_dir = \"/content/dataset/train/labels\"\n",
        "image_dir = \"/content/dataset/train/images\"\n",
        "label_files = glob.glob(os.path.join(label_dir, \"*.txt\"))\n",
        "\n",
        "fixed_count = 0\n",
        "skipped_count = 0\n",
        "\n",
        "for label_path in label_files:\n",
        "    base_name = os.path.splitext(os.path.basename(label_path))[0]\n",
        "    image_path_jpg = os.path.join(image_dir, base_name + \".jpg\")\n",
        "    image_path_png = os.path.join(image_dir, base_name + \".png\")\n",
        "\n",
        "    # Handle both jpg and png images\n",
        "    if os.path.exists(image_path_jpg):\n",
        "        img_path = image_path_jpg\n",
        "    elif os.path.exists(image_path_png):\n",
        "        img_path = image_path_png\n",
        "    else:\n",
        "        print(f\"[!] No image found for {base_name}\")\n",
        "        continue\n",
        "\n",
        "    img = cv2.imread(img_path)\n",
        "    if img is None:\n",
        "        print(f\"[!] Failed to load image: {img_path}\")\n",
        "        continue\n",
        "\n",
        "    height, width = img.shape[:2]\n",
        "\n",
        "    with open(label_path, \"r\") as f:\n",
        "        lines = f.readlines()\n",
        "\n",
        "    new_lines = []\n",
        "    for line in lines:\n",
        "        parts = line.strip().split()\n",
        "        if len(parts) != 5:\n",
        "            continue\n",
        "        cls, x, y, w, h = parts\n",
        "        try:\n",
        "            x, y, w, h = map(float, (x, y, w, h))\n",
        "        except:\n",
        "            continue\n",
        "\n",
        "        # If values are out of [0, 1], assume they are pixel values and normalize\n",
        "        if any(v > 1.0 for v in [x, y, w, h]):\n",
        "            x /= width\n",
        "            y /= height\n",
        "            w /= width\n",
        "            h /= height\n",
        "            fixed_count += 1\n",
        "\n",
        "        # Keep values within bounds\n",
        "        x = min(max(x, 0.0), 1.0)\n",
        "        y = min(max(y, 0.0), 1.0)\n",
        "        w = min(max(w, 0.0), 1.0)\n",
        "        h = min(max(h, 0.0), 1.0)\n",
        "\n",
        "        new_lines.append(f\"{cls} {x:.6f} {y:.6f} {w:.6f} {h:.6f}\\n\")\n",
        "\n",
        "    if new_lines:\n",
        "        with open(label_path, \"w\") as f:\n",
        "            f.writelines(new_lines)\n",
        "    else:\n",
        "        skipped_count += 1\n",
        "\n",
        "print(f\"Fixed annotations in {fixed_count} lines.\")\n",
        "print(f\"Skipped {skipped_count} files with no valid data.\")\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 11,
      "id": "7fb478a0-fb96-4e38-a0dc-da7f4df35973",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7fb478a0-fb96-4e38-a0dc-da7f4df35973",
        "outputId": "75673cd7-63aa-4bde-a44a-6c19c718ebf9"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "OCR labels saved.\n"
          ]
        }
      ],
      "source": [
        "# Load OCR annotations\n",
        "ocr_df = pd.read_csv(\"/content/DATA_SCIENTIST_ASSIGNMENT/DATA SCIENTIST_ASSIGNMENT/Licplatesrecognition_train.csv\")\n",
        "\n",
        "# Save to dataset for OCR use\n",
        "ocr_df.to_csv(\"/content/dataset/ocr_data/labels.csv\", index=False)\n",
        "print(\"OCR labels saved.\")\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 12,
      "id": "f0627529-1648-4eb5-9cb7-d2dd1ab34dcf",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "f0627529-1648-4eb5-9cb7-d2dd1ab34dcf",
        "outputId": "6ae65ee8-1210-4747-bf07-a2daaa5eb303"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Detection CSV rows: 900, OCR CSV rows: 900\n"
          ]
        }
      ],
      "source": [
        "# Load annotation files\n",
        "detection_df = pd.read_csv(\"/content/DATA_SCIENTIST_ASSIGNMENT/DATA SCIENTIST_ASSIGNMENT/Licplatesdetection_train.csv\")\n",
        "ocr_df = pd.read_csv(\"/content/DATA_SCIENTIST_ASSIGNMENT/DATA SCIENTIST_ASSIGNMENT/Licplatesrecognition_train.csv\")\n",
        "\n",
        "# Remove duplicates\n",
        "detection_df.drop_duplicates(inplace=True)\n",
        "ocr_df.drop_duplicates(inplace=True)\n",
        "\n",
        "# Drop rows with missing values\n",
        "detection_df.dropna(inplace=True)\n",
        "ocr_df.dropna(inplace=True)\n",
        "\n",
        "# Filter: Only allow .jpg files with labels\n",
        "detection_df = detection_df[detection_df[\"img_id\"].str.endswith(\".jpg\")]\n",
        "ocr_df = ocr_df[ocr_df[\"img_id\"].str.endswith(\".jpg\")]\n",
        "\n",
        "print(f\"Detection CSV rows: {len(detection_df)}, OCR CSV rows: {len(ocr_df)}\")\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 13,
      "id": "684093b3-5349-4d8c-9f81-81178d4dd13d",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "684093b3-5349-4d8c-9f81-81178d4dd13d",
        "outputId": "fb4562f0-0625-4547-ba59-b4c9564efab2"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Available columns: ['img_id', 'text']\n",
            "    img_id      text\n",
            "0    0.jpg  117T3989\n",
            "1    1.jpg  128T8086\n",
            "2   10.jpg   94T3458\n",
            "3  100.jpg  133T6719\n",
            "4  101.jpg   68T5979\n"
          ]
        }
      ],
      "source": [
        "import pandas as pd\n",
        "\n",
        "ocr_df = pd.read_csv(\"/content/DATA_SCIENTIST_ASSIGNMENT/DATA SCIENTIST_ASSIGNMENT/Licplatesrecognition_train.csv\")\n",
        "print(\"Available columns:\", ocr_df.columns.tolist())\n",
        "print(ocr_df.head())\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 14,
      "id": "6fe72e8b-a133-4c62-b8f3-a415a7437ecf",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "6fe72e8b-a133-4c62-b8f3-a415a7437ecf",
        "outputId": "75212c6e-cb26-46e6-881c-107b9b9f4619"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Cleared validation folders.\n",
            "Moved 180 images to validation set.\n"
          ]
        }
      ],
      "source": [
        "import os\n",
        "\n",
        "# Paths for validation folders\n",
        "val_img_folder = \"/content/dataset/val/images\"\n",
        "val_label_folder = \"/content/dataset/val/labels\"\n",
        "\n",
        "# Function to clear folder contents\n",
        "def clear_folder(folder_path):\n",
        "    for f in os.listdir(folder_path):\n",
        "        file_path = os.path.join(folder_path, f)\n",
        "        if os.path.isfile(file_path):\n",
        "            os.remove(file_path)\n",
        "\n",
        "# Clear validation folders before moving new files\n",
        "clear_folder(val_img_folder)\n",
        "clear_folder(val_label_folder)\n",
        "\n",
        "print(\"Cleared validation folders.\")\n",
        "\n",
        "# Now move 20% of images from training to validation\n",
        "train_images=os.listdir(\"/content/dataset/train/images\")\n",
        "val_count = int(0.2 * len(train_images))\n",
        "\n",
        "for img in train_images[:val_count]:\n",
        "    shutil.move(f\"/content/dataset/train/images/{img}\", val_img_folder)\n",
        "    shutil.move(f\"/content/dataset/train/labels/{img.replace('.jpg', '.txt')}\", val_label_folder)\n",
        "\n",
        "print(f\"Moved {val_count} images to validation set.\")\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 15,
      "id": "9rlbQUMqduR-",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "9rlbQUMqduR-",
        "outputId": "19e461c3-47ff-4171-8548-be4c38e0dee9"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Fixed annotations in 0 lines.\n",
            "Skipped 0 files with no valid data.\n"
          ]
        }
      ],
      "source": [
        "import os\n",
        "import glob\n",
        "import cv2\n",
        "\n",
        "label_dir = \"/content/dataset/val/labels\"\n",
        "image_dir = \"/content/dataset/val/images\"\n",
        "label_files = glob.glob(os.path.join(label_dir, \"*.txt\"))\n",
        "\n",
        "fixed_count = 0\n",
        "skipped_count = 0\n",
        "\n",
        "for label_path in label_files:\n",
        "    base_name = os.path.splitext(os.path.basename(label_path))[0]\n",
        "    image_path_jpg = os.path.join(image_dir, base_name + \".jpg\")\n",
        "    image_path_png = os.path.join(image_dir, base_name + \".png\")\n",
        "\n",
        "    # Handle both jpg and png images\n",
        "    if os.path.exists(image_path_jpg):\n",
        "        img_path = image_path_jpg\n",
        "    elif os.path.exists(image_path_png):\n",
        "        img_path = image_path_png\n",
        "    else:\n",
        "        print(f\"[!] No image found for {base_name}\")\n",
        "        continue\n",
        "\n",
        "    img = cv2.imread(img_path)\n",
        "    if img is None:\n",
        "        print(f\"[!] Failed to load image: {img_path}\")\n",
        "        continue\n",
        "\n",
        "    height, width = img.shape[:2]\n",
        "\n",
        "    with open(label_path, \"r\") as f:\n",
        "        lines = f.readlines()\n",
        "\n",
        "    new_lines = []\n",
        "    for line in lines:\n",
        "        parts = line.strip().split()\n",
        "        if len(parts) != 5:\n",
        "            continue\n",
        "        cls, x, y, w, h = parts\n",
        "        try:\n",
        "            x, y, w, h = map(float, (x, y, w, h))\n",
        "        except:\n",
        "            continue\n",
        "\n",
        "        # If values are out of [0, 1], assume they are pixel values and normalize\n",
        "        if any(v > 1.0 for v in [x, y, w, h]):\n",
        "            x /= width\n",
        "            y /= height\n",
        "            w /= width\n",
        "            h /= height\n",
        "            fixed_count += 1\n",
        "\n",
        "        # Keep values within bounds\n",
        "        x = min(max(x, 0.0), 1.0)\n",
        "        y = min(max(y, 0.0), 1.0)\n",
        "        w = min(max(w, 0.0), 1.0)\n",
        "        h = min(max(h, 0.0), 1.0)\n",
        "\n",
        "        new_lines.append(f\"{cls} {x:.6f} {y:.6f} {w:.6f} {h:.6f}\\n\")\n",
        "\n",
        "    if new_lines:\n",
        "        with open(label_path, \"w\") as f:\n",
        "            f.writelines(new_lines)\n",
        "    else:\n",
        "        skipped_count += 1\n",
        "\n",
        "print(f\"Fixed annotations in {fixed_count} lines.\")\n",
        "print(f\"Skipped {skipped_count} files with no valid data.\")\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 16,
      "id": "3151f9ce-e47f-4dac-80de-acb648ca4a69",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "3151f9ce-e47f-4dac-80de-acb648ca4a69",
        "outputId": "430ed87c-4e2c-4b7b-8dd0-eccf87a90e48"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Creating new Ultralytics Settings v0.0.6 file ✅ \n",
            "View Ultralytics Settings with 'yolo settings' or at '/root/.config/Ultralytics/settings.json'\n",
            "Update Settings with 'yolo settings key=value', i.e. 'yolo settings runs_dir=path/to/dir'. For help see https://docs.ultralytics.com/quickstart/#ultralytics-settings.\n",
            "Downloading https://github.com/ultralytics/assets/releases/download/v8.3.0/yolov8n.pt to 'yolov8n.pt'...\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "100%|██████████| 6.25M/6.25M [00:00<00:00, 119MB/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Ultralytics 8.3.146 🚀 Python-3.11.12 torch-2.6.0+cu124 CUDA:0 (Tesla T4, 15095MiB)\n",
            "\u001b[34m\u001b[1mengine/trainer: \u001b[0magnostic_nms=False, amp=True, augment=False, auto_augment=randaugment, batch=16, bgr=0.0, box=7.5, cache=False, cfg=None, classes=None, close_mosaic=10, cls=0.5, conf=None, copy_paste=0.0, copy_paste_mode=flip, cos_lr=False, cutmix=0.0, data=/content/dataset/config.yaml, degrees=0.0, deterministic=True, device=None, dfl=1.5, dnn=False, dropout=0.0, dynamic=False, embed=None, epochs=150, erasing=0.4, exist_ok=False, fliplr=0.5, flipud=0.0, format=torchscript, fraction=1.0, freeze=None, half=False, hsv_h=0.015, hsv_s=0.7, hsv_v=0.4, imgsz=640, int8=False, iou=0.7, keras=False, kobj=1.0, line_width=None, lr0=0.01, lrf=0.01, mask_ratio=4, max_det=300, mixup=0.0, mode=train, model=yolov8n.pt, momentum=0.937, mosaic=1.0, multi_scale=False, name=train, nbs=64, nms=False, opset=None, optimize=False, optimizer=auto, overlap_mask=True, patience=100, perspective=0.0, plots=True, pose=12.0, pretrained=True, profile=False, project=None, rect=False, resume=False, retina_masks=False, save=True, save_conf=False, save_crop=False, save_dir=runs/detect/train, save_frames=False, save_json=False, save_period=-1, save_txt=False, scale=0.5, seed=0, shear=0.0, show=False, show_boxes=True, show_conf=True, show_labels=True, simplify=True, single_cls=False, source=None, split=val, stream_buffer=False, task=detect, time=None, tracker=botsort.yaml, translate=0.1, val=True, verbose=True, vid_stride=1, visualize=False, warmup_bias_lr=0.1, warmup_epochs=3.0, warmup_momentum=0.8, weight_decay=0.0005, workers=8, workspace=None\n",
            "Downloading https://ultralytics.com/assets/Arial.ttf to '/root/.config/Ultralytics/Arial.ttf'...\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "100%|██████████| 755k/755k [00:00<00:00, 20.9MB/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Overriding model.yaml nc=80 with nc=1\n",
            "\n",
            "                   from  n    params  module                                       arguments                     \n",
            "  0                  -1  1       464  ultralytics.nn.modules.conv.Conv             [3, 16, 3, 2]                 \n",
            "  1                  -1  1      4672  ultralytics.nn.modules.conv.Conv             [16, 32, 3, 2]                \n",
            "  2                  -1  1      7360  ultralytics.nn.modules.block.C2f             [32, 32, 1, True]             \n",
            "  3                  -1  1     18560  ultralytics.nn.modules.conv.Conv             [32, 64, 3, 2]                \n",
            "  4                  -1  2     49664  ultralytics.nn.modules.block.C2f             [64, 64, 2, True]             \n",
            "  5                  -1  1     73984  ultralytics.nn.modules.conv.Conv             [64, 128, 3, 2]               \n",
            "  6                  -1  2    197632  ultralytics.nn.modules.block.C2f             [128, 128, 2, True]           \n",
            "  7                  -1  1    295424  ultralytics.nn.modules.conv.Conv             [128, 256, 3, 2]              \n",
            "  8                  -1  1    460288  ultralytics.nn.modules.block.C2f             [256, 256, 1, True]           \n",
            "  9                  -1  1    164608  ultralytics.nn.modules.block.SPPF            [256, 256, 5]                 \n",
            " 10                  -1  1         0  torch.nn.modules.upsampling.Upsample         [None, 2, 'nearest']          \n",
            " 11             [-1, 6]  1         0  ultralytics.nn.modules.conv.Concat           [1]                           \n",
            " 12                  -1  1    148224  ultralytics.nn.modules.block.C2f             [384, 128, 1]                 \n",
            " 13                  -1  1         0  torch.nn.modules.upsampling.Upsample         [None, 2, 'nearest']          \n",
            " 14             [-1, 4]  1         0  ultralytics.nn.modules.conv.Concat           [1]                           \n",
            " 15                  -1  1     37248  ultralytics.nn.modules.block.C2f             [192, 64, 1]                  \n",
            " 16                  -1  1     36992  ultralytics.nn.modules.conv.Conv             [64, 64, 3, 2]                \n",
            " 17            [-1, 12]  1         0  ultralytics.nn.modules.conv.Concat           [1]                           \n",
            " 18                  -1  1    123648  ultralytics.nn.modules.block.C2f             [192, 128, 1]                 \n",
            " 19                  -1  1    147712  ultralytics.nn.modules.conv.Conv             [128, 128, 3, 2]              \n",
            " 20             [-1, 9]  1         0  ultralytics.nn.modules.conv.Concat           [1]                           \n",
            " 21                  -1  1    493056  ultralytics.nn.modules.block.C2f             [384, 256, 1]                 \n",
            " 22        [15, 18, 21]  1    751507  ultralytics.nn.modules.head.Detect           [1, [64, 128, 256]]           \n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model summary: 129 layers, 3,011,043 parameters, 3,011,027 gradients, 8.2 GFLOPs\n",
            "\n",
            "Transferred 319/355 items from pretrained weights\n",
            "Freezing layer 'model.22.dfl.conv.weight'\n",
            "\u001b[34m\u001b[1mAMP: \u001b[0mrunning Automatic Mixed Precision (AMP) checks...\n",
            "Downloading https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11n.pt to 'yolo11n.pt'...\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "100%|██████████| 5.35M/5.35M [00:00<00:00, 108MB/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\u001b[34m\u001b[1mAMP: \u001b[0mchecks passed ✅\n",
            "\u001b[34m\u001b[1mtrain: \u001b[0mFast image access ✅ (ping: 0.0±0.0 ms, read: 1757.6±1080.9 MB/s, size: 93.5 KB)\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[34m\u001b[1mtrain: \u001b[0mScanning /content/dataset/train/labels... 720 images, 0 backgrounds, 0 corrupt: 100%|██████████| 720/720 [00:00<00:00, 2155.12it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\u001b[34m\u001b[1mtrain: \u001b[0mNew cache created: /content/dataset/train/labels.cache\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\u001b[34m\u001b[1malbumentations: \u001b[0mBlur(p=0.01, blur_limit=(3, 7)), MedianBlur(p=0.01, blur_limit=(3, 7)), ToGray(p=0.01, method='weighted_average', num_output_channels=3), CLAHE(p=0.01, clip_limit=(1.0, 4.0), tile_grid_size=(8, 8))\n",
            "\u001b[34m\u001b[1mval: \u001b[0mFast image access ✅ (ping: 0.0±0.0 ms, read: 300.6±218.3 MB/s, size: 114.1 KB)\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[34m\u001b[1mval: \u001b[0mScanning /content/dataset/val/labels... 180 images, 0 backgrounds, 0 corrupt: 100%|██████████| 180/180 [00:00<00:00, 1964.69it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\u001b[34m\u001b[1mval: \u001b[0mNew cache created: /content/dataset/val/labels.cache\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Plotting labels to runs/detect/train/labels.jpg... \n",
            "\u001b[34m\u001b[1moptimizer:\u001b[0m 'optimizer=auto' found, ignoring 'lr0=0.01' and 'momentum=0.937' and determining best 'optimizer', 'lr0' and 'momentum' automatically... \n",
            "\u001b[34m\u001b[1moptimizer:\u001b[0m AdamW(lr=0.002, momentum=0.9) with parameter groups 57 weight(decay=0.0), 64 weight(decay=0.0005), 63 bias(decay=0.0)\n",
            "Image sizes 640 train, 640 val\n",
            "Using 2 dataloader workers\n",
            "Logging results to \u001b[1mruns/detect/train\u001b[0m\n",
            "Starting training for 150 epochs...\n",
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "      1/150      2.02G      1.223       2.43      1.103         27        640: 100%|██████████| 45/45 [00:15<00:00,  2.97it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:02<00:00,  2.06it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.935     0.0806       0.72      0.394\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "      2/150      2.53G      1.202      1.456      1.034         29        640: 100%|██████████| 45/45 [00:12<00:00,  3.48it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.74it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.954      0.915       0.98      0.651\n",
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "      3/150      2.55G      1.181      1.255      1.016         33        640: 100%|██████████| 45/45 [00:12<00:00,  3.57it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.47it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.822      0.939      0.938      0.618\n",
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "      4/150      2.56G       1.12      1.085      1.021         33        640: 100%|██████████| 45/45 [00:12<00:00,  3.57it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.94it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.937      0.906      0.955      0.662\n",
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "      5/150      2.58G      1.078     0.9401      1.002         29        640: 100%|██████████| 45/45 [00:12<00:00,  3.49it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.90it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.893      0.973      0.979      0.674\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "      6/150       2.6G      1.089     0.8748      1.016         26        640: 100%|██████████| 45/45 [00:12<00:00,  3.52it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.72it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180       0.93      0.961      0.975       0.68\n",
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "      7/150      2.62G      1.087      0.808      1.004         31        640: 100%|██████████| 45/45 [00:12<00:00,  3.57it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.65it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.919      0.906      0.967      0.666\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "      8/150      2.63G      1.055     0.7395     0.9883         22        640: 100%|██████████| 45/45 [00:12<00:00,  3.46it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.86it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.943      0.894      0.955      0.653\n",
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "      9/150      2.65G      1.052     0.7419     0.9989         36        640: 100%|██████████| 45/45 [00:12<00:00,  3.53it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.94it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.972      0.982      0.983       0.66\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     10/150      2.67G      1.034     0.7043     0.9893         23        640: 100%|██████████| 45/45 [00:12<00:00,  3.60it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.38it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.951      0.975       0.99      0.695\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     11/150      2.68G      1.038     0.6913     0.9991         21        640: 100%|██████████| 45/45 [00:12<00:00,  3.59it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:02<00:00,  2.49it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.975      0.978      0.991      0.713\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     12/150       2.7G     0.9935     0.6396     0.9605         22        640: 100%|██████████| 45/45 [00:13<00:00,  3.44it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.72it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.999       0.95      0.986      0.718\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     13/150      2.72G      1.009     0.6565     0.9737         32        640: 100%|██████████| 45/45 [00:12<00:00,  3.61it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.81it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.966      0.983      0.984      0.721\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     14/150      2.73G     0.9976     0.6219     0.9737         29        640: 100%|██████████| 45/45 [00:12<00:00,  3.58it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  4.15it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.972      0.967      0.993      0.713\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     15/150      2.75G     0.9576     0.5854     0.9686         23        640: 100%|██████████| 45/45 [00:12<00:00,  3.51it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  4.13it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.987      0.983      0.994      0.747\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     16/150      2.77G     0.9919     0.6147     0.9664         33        640: 100%|██████████| 45/45 [00:12<00:00,  3.55it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.48it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.983      0.978      0.988      0.702\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     17/150      2.79G     0.9909     0.6128     0.9764         36        640: 100%|██████████| 45/45 [00:12<00:00,  3.67it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.28it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.983      0.983      0.994       0.72\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     18/150       2.8G       0.96     0.6014       0.97         24        640: 100%|██████████| 45/45 [00:12<00:00,  3.66it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.20it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.979      0.961       0.99      0.732\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     19/150      2.82G     0.9509     0.5861     0.9494         24        640: 100%|██████████| 45/45 [00:12<00:00,  3.69it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:02<00:00,  2.79it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.982      0.983      0.992      0.748\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     20/150      2.84G     0.9702     0.5879     0.9759         30        640: 100%|██████████| 45/45 [00:11<00:00,  3.77it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:02<00:00,  2.50it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.972      0.989      0.991      0.737\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     21/150      2.85G     0.9454     0.5773     0.9503         26        640: 100%|██████████| 45/45 [00:11<00:00,  3.87it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:02<00:00,  2.52it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.971      0.994       0.99      0.737\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     22/150      2.87G       0.94     0.5706     0.9557         38        640: 100%|██████████| 45/45 [00:11<00:00,  3.89it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:02<00:00,  2.17it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.972      0.977      0.991      0.747\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     23/150      2.89G     0.9713     0.5822     0.9654         18        640: 100%|██████████| 45/45 [00:12<00:00,  3.75it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:02<00:00,  2.17it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.961       0.95      0.984      0.733\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     24/150       2.9G      0.949     0.5601      0.949         32        640: 100%|██████████| 45/45 [00:14<00:00,  3.16it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.65it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.972      0.981      0.993      0.753\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     25/150      2.92G     0.9222     0.5458     0.9568         27        640: 100%|██████████| 45/45 [00:12<00:00,  3.52it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.83it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.974      0.989      0.993      0.748\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     26/150      2.94G     0.9133     0.5468      0.948         35        640: 100%|██████████| 45/45 [00:12<00:00,  3.52it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.54it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.993      0.989      0.994       0.75\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     27/150      2.96G      0.925     0.5366     0.9559         25        640: 100%|██████████| 45/45 [00:12<00:00,  3.60it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.22it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.965      0.989      0.993      0.732\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     28/150      2.97G     0.8929     0.5366     0.9347         31        640: 100%|██████████| 45/45 [00:12<00:00,  3.55it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.63it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.988      0.994      0.992      0.754\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     29/150      2.99G     0.8983     0.5346     0.9404         29        640: 100%|██████████| 45/45 [00:12<00:00,  3.52it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.90it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.983      0.984      0.993      0.738\n",
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     30/150      3.01G     0.8972     0.5258     0.9373         31        640: 100%|██████████| 45/45 [00:12<00:00,  3.58it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.60it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.982      0.989      0.994      0.749\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     31/150      3.02G      0.895     0.5305      0.946         31        640: 100%|██████████| 45/45 [00:12<00:00,  3.60it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.48it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.988      0.956       0.98      0.736\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     32/150      3.04G     0.9023     0.5226     0.9429         30        640: 100%|██████████| 45/45 [00:13<00:00,  3.44it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  4.06it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.992      0.972      0.992      0.748\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     33/150      3.06G      0.894     0.5183     0.9391         28        640: 100%|██████████| 45/45 [00:12<00:00,  3.49it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.56it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.993      0.978      0.994      0.746\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     34/150      3.07G      0.896     0.5084     0.9348         26        640: 100%|██████████| 45/45 [00:12<00:00,  3.61it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.52it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.972          1      0.994      0.739\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     35/150      3.09G     0.8976     0.5372     0.9408         25        640: 100%|██████████| 45/45 [00:12<00:00,  3.62it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.54it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.983      0.994      0.994      0.761\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     36/150      3.11G     0.8851     0.5168     0.9397         35        640: 100%|██████████| 45/45 [00:14<00:00,  3.11it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.97it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.988      0.989      0.995      0.777\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     37/150      3.13G     0.8844     0.5064     0.9336         29        640: 100%|██████████| 45/45 [00:12<00:00,  3.57it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.98it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.983      0.994      0.994      0.751\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     38/150      3.14G     0.8851     0.5087     0.9437         24        640: 100%|██████████| 45/45 [00:12<00:00,  3.57it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.74it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.977      0.978      0.993      0.748\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     39/150      3.16G     0.8651     0.4923     0.9275         27        640: 100%|██████████| 45/45 [00:12<00:00,  3.52it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.51it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.988      0.983      0.994      0.759\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     40/150      3.18G     0.8758      0.516     0.9324         36        640: 100%|██████████| 45/45 [00:13<00:00,  3.45it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.77it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.985          1      0.994      0.765\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     41/150       3.2G     0.8847     0.5039     0.9318         25        640: 100%|██████████| 45/45 [00:12<00:00,  3.52it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.60it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180       0.99      0.994      0.994      0.733\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     42/150      3.21G     0.8307     0.4878     0.9222         27        640: 100%|██████████| 45/45 [00:12<00:00,  3.58it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.57it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.992          1      0.993      0.764\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     43/150      3.23G     0.8277     0.4932     0.9272         31        640: 100%|██████████| 45/45 [00:12<00:00,  3.46it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.67it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.983       0.99      0.994       0.77\n",
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     44/150      3.25G     0.8636     0.4952     0.9242         24        640: 100%|██████████| 45/45 [00:12<00:00,  3.55it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.25it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.983      0.992      0.994      0.768\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     45/150      3.26G     0.9222     0.5063     0.9401         31        640: 100%|██████████| 45/45 [00:11<00:00,  3.75it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:02<00:00,  2.49it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.981      0.983      0.994      0.746\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     46/150      3.28G      0.852     0.4804     0.9248         35        640: 100%|██████████| 45/45 [00:12<00:00,  3.72it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:02<00:00,  2.39it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.992      0.994      0.995      0.783\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     47/150       3.3G     0.8181      0.474     0.9208         28        640: 100%|██████████| 45/45 [00:11<00:00,  3.81it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:02<00:00,  2.16it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.994          1      0.995      0.763\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     48/150      3.31G     0.8684     0.4979     0.9367         28        640: 100%|██████████| 45/45 [00:14<00:00,  3.16it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:02<00:00,  2.62it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.979      0.989      0.994      0.771\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     49/150      3.33G     0.8312     0.4703     0.9185         24        640: 100%|██████████| 45/45 [00:12<00:00,  3.53it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:02<00:00,  2.94it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180       0.98      0.989      0.989      0.753\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     50/150      3.35G     0.8375     0.4785     0.9321         29        640: 100%|██████████| 45/45 [00:12<00:00,  3.47it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.60it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.989      0.992      0.992      0.761\n",
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     51/150      3.37G     0.8178     0.4664     0.9191         29        640: 100%|██████████| 45/45 [00:12<00:00,  3.48it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.81it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.984      0.998      0.994       0.75\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     52/150      3.38G     0.8141     0.4549     0.9137         28        640: 100%|██████████| 45/45 [00:12<00:00,  3.48it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.89it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.989      0.999      0.995      0.782\n",
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     53/150       3.4G      0.839     0.4715     0.9213         41        640: 100%|██████████| 45/45 [00:12<00:00,  3.49it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.76it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.992          1      0.994      0.776\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     54/150      3.42G     0.8316     0.4682     0.9168         30        640: 100%|██████████| 45/45 [00:12<00:00,  3.56it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.52it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.989      0.983      0.993      0.778\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     55/150      3.43G     0.7967     0.4664     0.9102         36        640: 100%|██████████| 45/45 [00:12<00:00,  3.62it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.45it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.983          1      0.994      0.785\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     56/150      3.45G     0.8001     0.4568      0.919         30        640: 100%|██████████| 45/45 [00:12<00:00,  3.59it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.57it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.994      0.994      0.995      0.778\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     57/150      3.47G     0.8322     0.4636     0.9205         34        640: 100%|██████████| 45/45 [00:12<00:00,  3.52it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.96it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.991      0.994      0.995      0.768\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     58/150      3.48G     0.8087     0.4664       0.92         36        640: 100%|██████████| 45/45 [00:12<00:00,  3.54it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.75it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.995      0.972      0.994      0.777\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     59/150       3.5G     0.8053     0.4515     0.9142         29        640: 100%|██████████| 45/45 [00:12<00:00,  3.58it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.78it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.994      0.988      0.995      0.783\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     60/150      3.52G     0.8198     0.4506     0.9215         34        640: 100%|██████████| 45/45 [00:14<00:00,  3.15it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.96it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.978      0.993      0.995      0.782\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     61/150      3.54G     0.7934     0.4334     0.9061         26        640: 100%|██████████| 45/45 [00:12<00:00,  3.60it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.53it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.989      0.993      0.995      0.772\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     62/150      3.55G      0.777      0.447      0.909         27        640: 100%|██████████| 45/45 [00:12<00:00,  3.52it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.52it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.982          1      0.992      0.744\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     63/150      3.57G     0.7827     0.4436      0.908         22        640: 100%|██████████| 45/45 [00:12<00:00,  3.59it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.74it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.978      0.983      0.994      0.771\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     64/150      3.59G     0.7794     0.4334     0.9005         25        640: 100%|██████████| 45/45 [00:12<00:00,  3.54it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.86it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.994      0.989      0.995      0.789\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     65/150       3.6G     0.7832     0.4391     0.9039         27        640: 100%|██████████| 45/45 [00:12<00:00,  3.60it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.59it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.989          1      0.994      0.773\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     66/150      3.62G     0.7804     0.4492     0.9035         30        640: 100%|██████████| 45/45 [00:12<00:00,  3.47it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.80it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180       0.99      0.994      0.991      0.745\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     67/150      3.64G     0.7708       0.44     0.9094         29        640: 100%|██████████| 45/45 [00:12<00:00,  3.58it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.18it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.994      0.993      0.992      0.781\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     68/150      3.65G     0.7992     0.4459     0.9071         23        640: 100%|██████████| 45/45 [00:11<00:00,  3.77it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:02<00:00,  2.89it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.989      0.999      0.994       0.78\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     69/150      3.67G     0.7735     0.4332     0.9055         29        640: 100%|██████████| 45/45 [00:11<00:00,  3.79it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:02<00:00,  2.78it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.995      0.994      0.995      0.777\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     70/150      3.69G       0.78     0.4404     0.9037         32        640: 100%|██████████| 45/45 [00:11<00:00,  3.84it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:02<00:00,  2.06it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.989      0.992      0.995      0.785\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     71/150      3.71G     0.7568     0.4222     0.9066         35        640: 100%|██████████| 45/45 [00:11<00:00,  3.97it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:03<00:00,  1.97it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.973      0.993      0.994      0.775\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     72/150      3.72G     0.7637     0.4237     0.9068         28        640: 100%|██████████| 45/45 [00:12<00:00,  3.67it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:02<00:00,  2.05it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.986      0.994      0.994      0.777\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     73/150      3.74G     0.7481     0.4243     0.9047         22        640: 100%|██████████| 45/45 [00:13<00:00,  3.34it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  4.01it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.988      0.994      0.995      0.792\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     74/150      3.76G     0.7656     0.4175     0.8915         23        640: 100%|██████████| 45/45 [00:12<00:00,  3.54it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.53it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.989      0.987      0.995      0.786\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     75/150      3.78G     0.7536     0.4183     0.8959         29        640: 100%|██████████| 45/45 [00:12<00:00,  3.58it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  4.03it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.978      0.994      0.993      0.775\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     76/150      3.79G      0.775     0.4322     0.8979         25        640: 100%|██████████| 45/45 [00:12<00:00,  3.55it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.69it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.989      0.989      0.994        0.8\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     77/150      3.81G      0.756     0.4132     0.9023         31        640: 100%|██████████| 45/45 [00:12<00:00,  3.58it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.89it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.993      0.983      0.994      0.782\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     78/150      3.83G     0.7444     0.4188     0.8903         30        640: 100%|██████████| 45/45 [00:13<00:00,  3.34it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.68it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.978       0.98      0.993      0.779\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     79/150      3.84G     0.7201      0.418     0.8945         28        640: 100%|██████████| 45/45 [00:12<00:00,  3.47it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.71it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.978      0.999      0.994      0.791\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     80/150      3.86G     0.7299     0.4132     0.8905         34        640: 100%|██████████| 45/45 [00:13<00:00,  3.45it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.54it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.984      0.994      0.995      0.785\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     81/150      3.88G      0.733     0.4116     0.8916         35        640: 100%|██████████| 45/45 [00:13<00:00,  3.42it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.85it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.973          1      0.994      0.783\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     82/150      3.89G     0.7626     0.4181     0.8999         33        640: 100%|██████████| 45/45 [00:12<00:00,  3.50it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.74it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.989      0.997      0.995      0.792\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     83/150      3.91G     0.7178     0.4009     0.8885         33        640: 100%|██████████| 45/45 [00:12<00:00,  3.56it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.50it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.989          1      0.995      0.774\n",
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     84/150      3.93G     0.7276      0.406     0.8953         31        640: 100%|██████████| 45/45 [00:13<00:00,  3.45it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:02<00:00,  2.77it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.994      0.999      0.995      0.782\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     85/150      3.94G     0.7452     0.4135     0.9002         20        640: 100%|██████████| 45/45 [00:13<00:00,  3.31it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.57it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.978      0.999      0.994      0.768\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     86/150      3.96G     0.7277     0.4095     0.8809         31        640: 100%|██████████| 45/45 [00:12<00:00,  3.54it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.52it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.985          1      0.995      0.779\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     87/150      3.98G     0.7048     0.3957     0.8835         28        640: 100%|██████████| 45/45 [00:13<00:00,  3.37it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:02<00:00,  2.82it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.987          1      0.995      0.797\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     88/150         4G     0.7236     0.4092     0.8995         30        640: 100%|██████████| 45/45 [00:12<00:00,  3.50it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:02<00:00,  2.51it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.983          1      0.995      0.767\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     89/150      4.01G     0.7127     0.4076     0.8877         37        640: 100%|██████████| 45/45 [00:12<00:00,  3.72it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:02<00:00,  2.27it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.994      0.987      0.995      0.785\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     90/150      4.03G     0.7016     0.4001     0.8801         25        640: 100%|██████████| 45/45 [00:12<00:00,  3.68it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:02<00:00,  2.40it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.988      0.994      0.995      0.799\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     91/150      4.05G     0.6911     0.3898     0.8791         29        640: 100%|██████████| 45/45 [00:12<00:00,  3.73it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:02<00:00,  2.57it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.988          1      0.995      0.782\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     92/150      4.06G     0.7032      0.399     0.8923         27        640: 100%|██████████| 45/45 [00:12<00:00,  3.47it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.15it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.994      0.999      0.995      0.798\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     93/150      4.08G     0.7079     0.4001      0.879         24        640: 100%|██████████| 45/45 [00:13<00:00,  3.41it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.30it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.984          1      0.994       0.79\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     94/150       4.1G     0.6875     0.3935     0.8792         25        640: 100%|██████████| 45/45 [00:13<00:00,  3.41it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.73it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.989          1      0.994      0.789\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     95/150      4.12G     0.7045     0.4016     0.8828         34        640: 100%|██████████| 45/45 [00:13<00:00,  3.37it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.31it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.985      0.994      0.995       0.79\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     96/150      4.13G     0.6868     0.3873     0.8741         31        640: 100%|██████████| 45/45 [00:14<00:00,  3.03it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.53it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.994      0.994      0.995      0.787\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     97/150      4.15G     0.6913     0.3899     0.8888         27        640: 100%|██████████| 45/45 [00:13<00:00,  3.44it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.27it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.994      0.999      0.995      0.783\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     98/150      4.17G     0.6705     0.3776      0.875         30        640: 100%|██████████| 45/45 [00:13<00:00,  3.38it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.86it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.989          1      0.995      0.787\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "     99/150      4.18G     0.6659     0.3847     0.8814         37        640: 100%|██████████| 45/45 [00:13<00:00,  3.43it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.95it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.983          1      0.995      0.777\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "    100/150       4.2G     0.6919      0.381     0.8772         28        640: 100%|██████████| 45/45 [00:13<00:00,  3.39it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.70it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.989      0.999      0.995      0.786\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "    101/150      4.22G     0.6783     0.3784     0.8841         30        640: 100%|██████████| 45/45 [00:12<00:00,  3.56it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:02<00:00,  2.87it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.983          1      0.995      0.801\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "    102/150      4.24G     0.6758     0.3755     0.8729         38        640: 100%|██████████| 45/45 [00:12<00:00,  3.66it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:02<00:00,  2.26it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.988      0.994      0.995       0.79\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "    103/150      4.25G     0.6595     0.3753      0.877         30        640: 100%|██████████| 45/45 [00:12<00:00,  3.63it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:02<00:00,  2.31it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.983          1      0.994      0.798\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "    104/150      4.27G     0.6812     0.3825     0.8801         31        640: 100%|██████████| 45/45 [00:12<00:00,  3.68it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:02<00:00,  2.42it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.989          1      0.995      0.801\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "    105/150      4.29G     0.6662     0.3749      0.873         37        640: 100%|██████████| 45/45 [00:12<00:00,  3.58it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:02<00:00,  2.78it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.994          1      0.995      0.786\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "    106/150       4.3G     0.6537     0.3674     0.8695         29        640: 100%|██████████| 45/45 [00:13<00:00,  3.42it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.56it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.992      0.994      0.995      0.796\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "    107/150      4.32G     0.6604     0.3643     0.8663         28        640: 100%|██████████| 45/45 [00:13<00:00,  3.39it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.55it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.989      0.999      0.995      0.789\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "    108/150      4.34G     0.6641     0.3662     0.8779         28        640: 100%|██████████| 45/45 [00:14<00:00,  3.05it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.99it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.994          1      0.995      0.798\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "    109/150      4.36G     0.6533     0.3616     0.8777         30        640: 100%|██████████| 45/45 [00:13<00:00,  3.44it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.65it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.994      0.999      0.994      0.803\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "    110/150      4.37G     0.6387     0.3534     0.8685         31        640: 100%|██████████| 45/45 [00:13<00:00,  3.44it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.92it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.994          1      0.995      0.801\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "    111/150      4.39G     0.6322     0.3503     0.8741         33        640: 100%|██████████| 45/45 [00:12<00:00,  3.47it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.77it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.994      0.993      0.995      0.794\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "    112/150      4.41G     0.6403     0.3563     0.8736         24        640: 100%|██████████| 45/45 [00:12<00:00,  3.49it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.74it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.978      0.998      0.994      0.794\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "    113/150      4.42G     0.6566       0.36     0.8715         25        640: 100%|██████████| 45/45 [00:13<00:00,  3.42it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.43it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.988      0.994      0.995      0.784\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "    114/150      4.44G     0.6491     0.3662     0.8743         25        640: 100%|██████████| 45/45 [00:12<00:00,  3.47it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.51it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.988          1      0.995      0.792\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "    115/150      4.46G     0.6406     0.3634     0.8814         24        640: 100%|██████████| 45/45 [00:13<00:00,  3.43it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.29it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.994          1      0.995      0.795\n",
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "    116/150      4.47G     0.6164     0.3502     0.8688         31        640: 100%|██████████| 45/45 [00:13<00:00,  3.46it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.63it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.984          1      0.995      0.802\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "    117/150      4.49G     0.6203     0.3518     0.8669         36        640: 100%|██████████| 45/45 [00:12<00:00,  3.47it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.31it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180       0.99      0.994      0.995      0.813\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "    118/150      4.51G     0.6322     0.3556     0.8762         35        640: 100%|██████████| 45/45 [00:12<00:00,  3.60it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:02<00:00,  2.73it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.993      0.989      0.995      0.804\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "    119/150      4.53G     0.6517     0.3585     0.8775         29        640: 100%|██████████| 45/45 [00:12<00:00,  3.69it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:02<00:00,  2.26it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180       0.99          1      0.995      0.788\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "    120/150      4.54G     0.6166     0.3433     0.8657         23        640: 100%|██████████| 45/45 [00:15<00:00,  2.95it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.84it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.984          1      0.995      0.804\n",
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "    121/150      4.56G     0.6177     0.3462     0.8614         29        640: 100%|██████████| 45/45 [00:13<00:00,  3.42it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.66it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.978          1      0.994      0.793\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "    122/150      4.58G     0.6128      0.345     0.8663         23        640: 100%|██████████| 45/45 [00:12<00:00,  3.50it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.66it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.991      0.994      0.995      0.805\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "    123/150      4.59G     0.6031     0.3384     0.8638         28        640: 100%|██████████| 45/45 [00:13<00:00,  3.42it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.74it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.988          1      0.994      0.798\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "    124/150      4.61G     0.6107     0.3345      0.865         24        640: 100%|██████████| 45/45 [00:13<00:00,  3.41it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.55it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.994      0.994      0.995      0.798\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "    125/150      4.63G     0.6206     0.3431     0.8665         26        640: 100%|██████████| 45/45 [00:13<00:00,  3.41it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.73it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.978      0.998      0.995      0.799\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "    126/150      4.64G      0.596     0.3302     0.8628         29        640: 100%|██████████| 45/45 [00:13<00:00,  3.45it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.56it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.983          1      0.995      0.806\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "    127/150      4.66G     0.5984     0.3359     0.8613         28        640: 100%|██████████| 45/45 [00:13<00:00,  3.43it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.87it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.983          1      0.995      0.814\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "    128/150      4.68G     0.5883      0.338     0.8654         27        640: 100%|██████████| 45/45 [00:13<00:00,  3.38it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.85it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.982          1      0.995      0.806\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "    129/150       4.7G     0.5759     0.3228     0.8515         24        640: 100%|██████████| 45/45 [00:12<00:00,  3.48it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  4.04it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.983          1      0.995      0.816\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "    130/150      4.71G     0.6005      0.332     0.8575         29        640: 100%|██████████| 45/45 [00:12<00:00,  3.51it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.84it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.994      0.993      0.995      0.807\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "    131/150      4.73G     0.5882     0.3263     0.8644         27        640: 100%|██████████| 45/45 [00:13<00:00,  3.46it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.56it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.982          1      0.994      0.819\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "    132/150      4.75G     0.5878     0.3269      0.864         29        640: 100%|██████████| 45/45 [00:14<00:00,  3.08it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.15it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.989          1      0.994      0.812\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "    133/150      4.76G     0.5915     0.3308     0.8582         24        640: 100%|██████████| 45/45 [00:12<00:00,  3.50it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:02<00:00,  2.84it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.994      0.998      0.995      0.798\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "    134/150      4.78G     0.5803     0.3312     0.8649         31        640: 100%|██████████| 45/45 [00:12<00:00,  3.74it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:02<00:00,  2.15it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.989          1      0.995      0.794\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "    135/150       4.8G     0.5943     0.3266     0.8562         28        640: 100%|██████████| 45/45 [00:12<00:00,  3.70it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:02<00:00,  2.17it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.992          1      0.995      0.803\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "    136/150      4.82G     0.5616     0.3212     0.8535         35        640: 100%|██████████| 45/45 [00:12<00:00,  3.64it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:02<00:00,  2.73it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.988          1      0.994      0.808\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "    137/150      4.83G     0.5797     0.3221     0.8656         27        640: 100%|██████████| 45/45 [00:13<00:00,  3.41it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.62it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.989          1      0.994       0.81\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "    138/150      4.85G     0.5642     0.3196     0.8513         25        640: 100%|██████████| 45/45 [00:13<00:00,  3.40it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.83it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.988          1      0.994      0.808\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "    139/150      4.87G     0.5546     0.3173     0.8515         33        640: 100%|██████████| 45/45 [00:13<00:00,  3.37it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  4.01it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.988          1      0.994      0.808\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "    140/150      4.88G      0.575      0.323     0.8516         27        640: 100%|██████████| 45/45 [00:13<00:00,  3.45it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.63it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.994      0.993      0.994      0.805\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Closing dataloader mosaic\n",
            "\u001b[34m\u001b[1malbumentations: \u001b[0mBlur(p=0.01, blur_limit=(3, 7)), MedianBlur(p=0.01, blur_limit=(3, 7)), ToGray(p=0.01, method='weighted_average', num_output_channels=3), CLAHE(p=0.01, clip_limit=(1.0, 4.0), tile_grid_size=(8, 8))\n",
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "    141/150       4.9G     0.5259     0.2845     0.8372         16        640: 100%|██████████| 45/45 [00:14<00:00,  3.18it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.45it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.977          1      0.994      0.792\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "    142/150      4.92G     0.5213     0.2851     0.8315         16        640: 100%|██████████| 45/45 [00:12<00:00,  3.48it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.85it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.987      0.994      0.994      0.793\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "    143/150      4.94G     0.5097     0.2747     0.8332         16        640: 100%|██████████| 45/45 [00:14<00:00,  3.17it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.64it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.989      0.994      0.994      0.797\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "    144/150      4.95G     0.4963     0.2733     0.8291         16        640: 100%|██████████| 45/45 [00:12<00:00,  3.62it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  4.04it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.989      0.994      0.994      0.797\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "    145/150      4.97G     0.4975     0.2702     0.8222         16        640: 100%|██████████| 45/45 [00:12<00:00,  3.56it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.82it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.987      0.994      0.994      0.798\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "    146/150      4.99G     0.5032     0.2773      0.826         16        640: 100%|██████████| 45/45 [00:12<00:00,  3.56it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.71it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.988      0.994      0.994      0.799\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "    147/150         5G     0.4874     0.2679     0.8283         16        640: 100%|██████████| 45/45 [00:12<00:00,  3.62it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.93it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.988      0.994      0.995      0.803\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "    148/150      5.02G     0.4997     0.2695     0.8327         16        640: 100%|██████████| 45/45 [00:12<00:00,  3.62it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.83it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.988      0.994      0.994      0.809\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "    149/150      5.04G     0.4792     0.2684     0.8291         16        640: 100%|██████████| 45/45 [00:12<00:00,  3.61it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.80it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.988      0.994      0.995      0.807\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "    150/150      5.05G     0.4828     0.2635     0.8312         16        640: 100%|██████████| 45/45 [00:12<00:00,  3.64it/s]\n",
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:01<00:00,  3.70it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.988      0.994      0.995       0.81\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "150 epochs completed in 0.629 hours.\n",
            "Optimizer stripped from runs/detect/train/weights/last.pt, 6.2MB\n",
            "Optimizer stripped from runs/detect/train/weights/best.pt, 6.2MB\n",
            "\n",
            "Validating runs/detect/train/weights/best.pt...\n",
            "Ultralytics 8.3.146 🚀 Python-3.11.12 torch-2.6.0+cu124 CUDA:0 (Tesla T4, 15095MiB)\n",
            "Model summary (fused): 72 layers, 3,005,843 parameters, 0 gradients, 8.1 GFLOPs\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 6/6 [00:03<00:00,  1.55it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   all        180        180      0.982          1      0.994      0.819\n",
            "Speed: 0.3ms preprocess, 2.4ms inference, 0.0ms loss, 6.2ms postprocess per image\n",
            "Results saved to \u001b[1mruns/detect/train\u001b[0m\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "ultralytics.utils.metrics.DetMetrics object with attributes:\n",
              "\n",
              "ap_class_index: array([0])\n",
              "box: ultralytics.utils.metrics.Metric object\n",
              "confusion_matrix: <ultralytics.utils.metrics.ConfusionMatrix object at 0x7d29504648d0>\n",
              "curves: ['Precision-Recall(B)', 'F1-Confidence(B)', 'Precision-Confidence(B)', 'Recall-Confidence(B)']\n",
              "curves_results: [[array([          0,    0.001001,    0.002002,    0.003003,    0.004004,    0.005005,    0.006006,    0.007007,    0.008008,    0.009009,     0.01001,    0.011011,    0.012012,    0.013013,    0.014014,    0.015015,    0.016016,    0.017017,    0.018018,    0.019019,     0.02002,    0.021021,    0.022022,    0.023023,\n",
              "          0.024024,    0.025025,    0.026026,    0.027027,    0.028028,    0.029029,     0.03003,    0.031031,    0.032032,    0.033033,    0.034034,    0.035035,    0.036036,    0.037037,    0.038038,    0.039039,     0.04004,    0.041041,    0.042042,    0.043043,    0.044044,    0.045045,    0.046046,    0.047047,\n",
              "          0.048048,    0.049049,     0.05005,    0.051051,    0.052052,    0.053053,    0.054054,    0.055055,    0.056056,    0.057057,    0.058058,    0.059059,     0.06006,    0.061061,    0.062062,    0.063063,    0.064064,    0.065065,    0.066066,    0.067067,    0.068068,    0.069069,     0.07007,    0.071071,\n",
              "          0.072072,    0.073073,    0.074074,    0.075075,    0.076076,    0.077077,    0.078078,    0.079079,     0.08008,    0.081081,    0.082082,    0.083083,    0.084084,    0.085085,    0.086086,    0.087087,    0.088088,    0.089089,     0.09009,    0.091091,    0.092092,    0.093093,    0.094094,    0.095095,\n",
              "          0.096096,    0.097097,    0.098098,    0.099099,      0.1001,      0.1011,      0.1021,      0.1031,      0.1041,     0.10511,     0.10611,     0.10711,     0.10811,     0.10911,     0.11011,     0.11111,     0.11211,     0.11311,     0.11411,     0.11512,     0.11612,     0.11712,     0.11812,     0.11912,\n",
              "           0.12012,     0.12112,     0.12212,     0.12312,     0.12412,     0.12513,     0.12613,     0.12713,     0.12813,     0.12913,     0.13013,     0.13113,     0.13213,     0.13313,     0.13413,     0.13514,     0.13614,     0.13714,     0.13814,     0.13914,     0.14014,     0.14114,     0.14214,     0.14314,\n",
              "           0.14414,     0.14515,     0.14615,     0.14715,     0.14815,     0.14915,     0.15015,     0.15115,     0.15215,     0.15315,     0.15415,     0.15516,     0.15616,     0.15716,     0.15816,     0.15916,     0.16016,     0.16116,     0.16216,     0.16316,     0.16416,     0.16517,     0.16617,     0.16717,\n",
              "           0.16817,     0.16917,     0.17017,     0.17117,     0.17217,     0.17317,     0.17417,     0.17518,     0.17618,     0.17718,     0.17818,     0.17918,     0.18018,     0.18118,     0.18218,     0.18318,     0.18418,     0.18519,     0.18619,     0.18719,     0.18819,     0.18919,     0.19019,     0.19119,\n",
              "           0.19219,     0.19319,     0.19419,      0.1952,      0.1962,      0.1972,      0.1982,      0.1992,      0.2002,      0.2012,      0.2022,      0.2032,      0.2042,     0.20521,     0.20621,     0.20721,     0.20821,     0.20921,     0.21021,     0.21121,     0.21221,     0.21321,     0.21421,     0.21522,\n",
              "           0.21622,     0.21722,     0.21822,     0.21922,     0.22022,     0.22122,     0.22222,     0.22322,     0.22422,     0.22523,     0.22623,     0.22723,     0.22823,     0.22923,     0.23023,     0.23123,     0.23223,     0.23323,     0.23423,     0.23524,     0.23624,     0.23724,     0.23824,     0.23924,\n",
              "           0.24024,     0.24124,     0.24224,     0.24324,     0.24424,     0.24525,     0.24625,     0.24725,     0.24825,     0.24925,     0.25025,     0.25125,     0.25225,     0.25325,     0.25425,     0.25526,     0.25626,     0.25726,     0.25826,     0.25926,     0.26026,     0.26126,     0.26226,     0.26326,\n",
              "           0.26426,     0.26527,     0.26627,     0.26727,     0.26827,     0.26927,     0.27027,     0.27127,     0.27227,     0.27327,     0.27427,     0.27528,     0.27628,     0.27728,     0.27828,     0.27928,     0.28028,     0.28128,     0.28228,     0.28328,     0.28428,     0.28529,     0.28629,     0.28729,\n",
              "           0.28829,     0.28929,     0.29029,     0.29129,     0.29229,     0.29329,     0.29429,      0.2953,      0.2963,      0.2973,      0.2983,      0.2993,      0.3003,      0.3013,      0.3023,      0.3033,      0.3043,     0.30531,     0.30631,     0.30731,     0.30831,     0.30931,     0.31031,     0.31131,\n",
              "           0.31231,     0.31331,     0.31431,     0.31532,     0.31632,     0.31732,     0.31832,     0.31932,     0.32032,     0.32132,     0.32232,     0.32332,     0.32432,     0.32533,     0.32633,     0.32733,     0.32833,     0.32933,     0.33033,     0.33133,     0.33233,     0.33333,     0.33433,     0.33534,\n",
              "           0.33634,     0.33734,     0.33834,     0.33934,     0.34034,     0.34134,     0.34234,     0.34334,     0.34434,     0.34535,     0.34635,     0.34735,     0.34835,     0.34935,     0.35035,     0.35135,     0.35235,     0.35335,     0.35435,     0.35536,     0.35636,     0.35736,     0.35836,     0.35936,\n",
              "           0.36036,     0.36136,     0.36236,     0.36336,     0.36436,     0.36537,     0.36637,     0.36737,     0.36837,     0.36937,     0.37037,     0.37137,     0.37237,     0.37337,     0.37437,     0.37538,     0.37638,     0.37738,     0.37838,     0.37938,     0.38038,     0.38138,     0.38238,     0.38338,\n",
              "           0.38438,     0.38539,     0.38639,     0.38739,     0.38839,     0.38939,     0.39039,     0.39139,     0.39239,     0.39339,     0.39439,      0.3954,      0.3964,      0.3974,      0.3984,      0.3994,      0.4004,      0.4014,      0.4024,      0.4034,      0.4044,     0.40541,     0.40641,     0.40741,\n",
              "           0.40841,     0.40941,     0.41041,     0.41141,     0.41241,     0.41341,     0.41441,     0.41542,     0.41642,     0.41742,     0.41842,     0.41942,     0.42042,     0.42142,     0.42242,     0.42342,     0.42442,     0.42543,     0.42643,     0.42743,     0.42843,     0.42943,     0.43043,     0.43143,\n",
              "           0.43243,     0.43343,     0.43443,     0.43544,     0.43644,     0.43744,     0.43844,     0.43944,     0.44044,     0.44144,     0.44244,     0.44344,     0.44444,     0.44545,     0.44645,     0.44745,     0.44845,     0.44945,     0.45045,     0.45145,     0.45245,     0.45345,     0.45445,     0.45546,\n",
              "           0.45646,     0.45746,     0.45846,     0.45946,     0.46046,     0.46146,     0.46246,     0.46346,     0.46446,     0.46547,     0.46647,     0.46747,     0.46847,     0.46947,     0.47047,     0.47147,     0.47247,     0.47347,     0.47447,     0.47548,     0.47648,     0.47748,     0.47848,     0.47948,\n",
              "           0.48048,     0.48148,     0.48248,     0.48348,     0.48448,     0.48549,     0.48649,     0.48749,     0.48849,     0.48949,     0.49049,     0.49149,     0.49249,     0.49349,     0.49449,      0.4955,      0.4965,      0.4975,      0.4985,      0.4995,      0.5005,      0.5015,      0.5025,      0.5035,\n",
              "            0.5045,     0.50551,     0.50651,     0.50751,     0.50851,     0.50951,     0.51051,     0.51151,     0.51251,     0.51351,     0.51451,     0.51552,     0.51652,     0.51752,     0.51852,     0.51952,     0.52052,     0.52152,     0.52252,     0.52352,     0.52452,     0.52553,     0.52653,     0.52753,\n",
              "           0.52853,     0.52953,     0.53053,     0.53153,     0.53253,     0.53353,     0.53453,     0.53554,     0.53654,     0.53754,     0.53854,     0.53954,     0.54054,     0.54154,     0.54254,     0.54354,     0.54454,     0.54555,     0.54655,     0.54755,     0.54855,     0.54955,     0.55055,     0.55155,\n",
              "           0.55255,     0.55355,     0.55455,     0.55556,     0.55656,     0.55756,     0.55856,     0.55956,     0.56056,     0.56156,     0.56256,     0.56356,     0.56456,     0.56557,     0.56657,     0.56757,     0.56857,     0.56957,     0.57057,     0.57157,     0.57257,     0.57357,     0.57457,     0.57558,\n",
              "           0.57658,     0.57758,     0.57858,     0.57958,     0.58058,     0.58158,     0.58258,     0.58358,     0.58458,     0.58559,     0.58659,     0.58759,     0.58859,     0.58959,     0.59059,     0.59159,     0.59259,     0.59359,     0.59459,      0.5956,      0.5966,      0.5976,      0.5986,      0.5996,\n",
              "            0.6006,      0.6016,      0.6026,      0.6036,      0.6046,     0.60561,     0.60661,     0.60761,     0.60861,     0.60961,     0.61061,     0.61161,     0.61261,     0.61361,     0.61461,     0.61562,     0.61662,     0.61762,     0.61862,     0.61962,     0.62062,     0.62162,     0.62262,     0.62362,\n",
              "           0.62462,     0.62563,     0.62663,     0.62763,     0.62863,     0.62963,     0.63063,     0.63163,     0.63263,     0.63363,     0.63463,     0.63564,     0.63664,     0.63764,     0.63864,     0.63964,     0.64064,     0.64164,     0.64264,     0.64364,     0.64464,     0.64565,     0.64665,     0.64765,\n",
              "           0.64865,     0.64965,     0.65065,     0.65165,     0.65265,     0.65365,     0.65465,     0.65566,     0.65666,     0.65766,     0.65866,     0.65966,     0.66066,     0.66166,     0.66266,     0.66366,     0.66466,     0.66567,     0.66667,     0.66767,     0.66867,     0.66967,     0.67067,     0.67167,\n",
              "           0.67267,     0.67367,     0.67467,     0.67568,     0.67668,     0.67768,     0.67868,     0.67968,     0.68068,     0.68168,     0.68268,     0.68368,     0.68468,     0.68569,     0.68669,     0.68769,     0.68869,     0.68969,     0.69069,     0.69169,     0.69269,     0.69369,     0.69469,      0.6957,\n",
              "            0.6967,      0.6977,      0.6987,      0.6997,      0.7007,      0.7017,      0.7027,      0.7037,      0.7047,     0.70571,     0.70671,     0.70771,     0.70871,     0.70971,     0.71071,     0.71171,     0.71271,     0.71371,     0.71471,     0.71572,     0.71672,     0.71772,     0.71872,     0.71972,\n",
              "           0.72072,     0.72172,     0.72272,     0.72372,     0.72472,     0.72573,     0.72673,     0.72773,     0.72873,     0.72973,     0.73073,     0.73173,     0.73273,     0.73373,     0.73473,     0.73574,     0.73674,     0.73774,     0.73874,     0.73974,     0.74074,     0.74174,     0.74274,     0.74374,\n",
              "           0.74474,     0.74575,     0.74675,     0.74775,     0.74875,     0.74975,     0.75075,     0.75175,     0.75275,     0.75375,     0.75475,     0.75576,     0.75676,     0.75776,     0.75876,     0.75976,     0.76076,     0.76176,     0.76276,     0.76376,     0.76476,     0.76577,     0.76677,     0.76777,\n",
              "           0.76877,     0.76977,     0.77077,     0.77177,     0.77277,     0.77377,     0.77477,     0.77578,     0.77678,     0.77778,     0.77878,     0.77978,     0.78078,     0.78178,     0.78278,     0.78378,     0.78478,     0.78579,     0.78679,     0.78779,     0.78879,     0.78979,     0.79079,     0.79179,\n",
              "           0.79279,     0.79379,     0.79479,      0.7958,      0.7968,      0.7978,      0.7988,      0.7998,      0.8008,      0.8018,      0.8028,      0.8038,      0.8048,     0.80581,     0.80681,     0.80781,     0.80881,     0.80981,     0.81081,     0.81181,     0.81281,     0.81381,     0.81481,     0.81582,\n",
              "           0.81682,     0.81782,     0.81882,     0.81982,     0.82082,     0.82182,     0.82282,     0.82382,     0.82482,     0.82583,     0.82683,     0.82783,     0.82883,     0.82983,     0.83083,     0.83183,     0.83283,     0.83383,     0.83483,     0.83584,     0.83684,     0.83784,     0.83884,     0.83984,\n",
              "           0.84084,     0.84184,     0.84284,     0.84384,     0.84484,     0.84585,     0.84685,     0.84785,     0.84885,     0.84985,     0.85085,     0.85185,     0.85285,     0.85385,     0.85485,     0.85586,     0.85686,     0.85786,     0.85886,     0.85986,     0.86086,     0.86186,     0.86286,     0.86386,\n",
              "           0.86486,     0.86587,     0.86687,     0.86787,     0.86887,     0.86987,     0.87087,     0.87187,     0.87287,     0.87387,     0.87487,     0.87588,     0.87688,     0.87788,     0.87888,     0.87988,     0.88088,     0.88188,     0.88288,     0.88388,     0.88488,     0.88589,     0.88689,     0.88789,\n",
              "           0.88889,     0.88989,     0.89089,     0.89189,     0.89289,     0.89389,     0.89489,      0.8959,      0.8969,      0.8979,      0.8989,      0.8999,      0.9009,      0.9019,      0.9029,      0.9039,      0.9049,     0.90591,     0.90691,     0.90791,     0.90891,     0.90991,     0.91091,     0.91191,\n",
              "           0.91291,     0.91391,     0.91491,     0.91592,     0.91692,     0.91792,     0.91892,     0.91992,     0.92092,     0.92192,     0.92292,     0.92392,     0.92492,     0.92593,     0.92693,     0.92793,     0.92893,     0.92993,     0.93093,     0.93193,     0.93293,     0.93393,     0.93493,     0.93594,\n",
              "           0.93694,     0.93794,     0.93894,     0.93994,     0.94094,     0.94194,     0.94294,     0.94394,     0.94494,     0.94595,     0.94695,     0.94795,     0.94895,     0.94995,     0.95095,     0.95195,     0.95295,     0.95395,     0.95495,     0.95596,     0.95696,     0.95796,     0.95896,     0.95996,\n",
              "           0.96096,     0.96196,     0.96296,     0.96396,     0.96496,     0.96597,     0.96697,     0.96797,     0.96897,     0.96997,     0.97097,     0.97197,     0.97297,     0.97397,     0.97497,     0.97598,     0.97698,     0.97798,     0.97898,     0.97998,     0.98098,     0.98198,     0.98298,     0.98398,\n",
              "           0.98498,     0.98599,     0.98699,     0.98799,     0.98899,     0.98999,     0.99099,     0.99199,     0.99299,     0.99399,     0.99499,       0.996,       0.997,       0.998,       0.999,           1]), array([[          1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,\n",
              "                  1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,\n",
              "                  1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,\n",
              "                  1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,\n",
              "                  1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,\n",
              "                  1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,\n",
              "                  1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,\n",
              "                  1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,\n",
              "                  1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,\n",
              "                  1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,\n",
              "                  1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,\n",
              "                  1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,\n",
              "                  1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,\n",
              "                  1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,\n",
              "                  1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,\n",
              "                  1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,\n",
              "                  1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,\n",
              "                  1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,\n",
              "                  1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,\n",
              "                  1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,\n",
              "                  1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,\n",
              "                  1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,\n",
              "                  1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,\n",
              "                  1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,\n",
              "                  1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,\n",
              "                  1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,\n",
              "                  1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,\n",
              "                  1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,\n",
              "                  1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,\n",
              "                  1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,\n",
              "                  1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,\n",
              "                  1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,\n",
              "                  1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,\n",
              "                  1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,\n",
              "                  1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,\n",
              "                  1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,\n",
              "                  1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,\n",
              "                  1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,     0.99438,     0.99438,\n",
              "            0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,\n",
              "            0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,\n",
              "            0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,\n",
              "            0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,\n",
              "            0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.99438,     0.98895,     0.98895,     0.98895,     0.98895,     0.98895,     0.98895,\n",
              "            0.98895,     0.98895,     0.98895,     0.98895,     0.98895,     0.98361,     0.98361,     0.98361,     0.98361,     0.98361,           0]]), 'Recall', 'Precision'], [array([          0,    0.001001,    0.002002,    0.003003,    0.004004,    0.005005,    0.006006,    0.007007,    0.008008,    0.009009,     0.01001,    0.011011,    0.012012,    0.013013,    0.014014,    0.015015,    0.016016,    0.017017,    0.018018,    0.019019,     0.02002,    0.021021,    0.022022,    0.023023,\n",
              "          0.024024,    0.025025,    0.026026,    0.027027,    0.028028,    0.029029,     0.03003,    0.031031,    0.032032,    0.033033,    0.034034,    0.035035,    0.036036,    0.037037,    0.038038,    0.039039,     0.04004,    0.041041,    0.042042,    0.043043,    0.044044,    0.045045,    0.046046,    0.047047,\n",
              "          0.048048,    0.049049,     0.05005,    0.051051,    0.052052,    0.053053,    0.054054,    0.055055,    0.056056,    0.057057,    0.058058,    0.059059,     0.06006,    0.061061,    0.062062,    0.063063,    0.064064,    0.065065,    0.066066,    0.067067,    0.068068,    0.069069,     0.07007,    0.071071,\n",
              "          0.072072,    0.073073,    0.074074,    0.075075,    0.076076,    0.077077,    0.078078,    0.079079,     0.08008,    0.081081,    0.082082,    0.083083,    0.084084,    0.085085,    0.086086,    0.087087,    0.088088,    0.089089,     0.09009,    0.091091,    0.092092,    0.093093,    0.094094,    0.095095,\n",
              "          0.096096,    0.097097,    0.098098,    0.099099,      0.1001,      0.1011,      0.1021,      0.1031,      0.1041,     0.10511,     0.10611,     0.10711,     0.10811,     0.10911,     0.11011,     0.11111,     0.11211,     0.11311,     0.11411,     0.11512,     0.11612,     0.11712,     0.11812,     0.11912,\n",
              "           0.12012,     0.12112,     0.12212,     0.12312,     0.12412,     0.12513,     0.12613,     0.12713,     0.12813,     0.12913,     0.13013,     0.13113,     0.13213,     0.13313,     0.13413,     0.13514,     0.13614,     0.13714,     0.13814,     0.13914,     0.14014,     0.14114,     0.14214,     0.14314,\n",
              "           0.14414,     0.14515,     0.14615,     0.14715,     0.14815,     0.14915,     0.15015,     0.15115,     0.15215,     0.15315,     0.15415,     0.15516,     0.15616,     0.15716,     0.15816,     0.15916,     0.16016,     0.16116,     0.16216,     0.16316,     0.16416,     0.16517,     0.16617,     0.16717,\n",
              "           0.16817,     0.16917,     0.17017,     0.17117,     0.17217,     0.17317,     0.17417,     0.17518,     0.17618,     0.17718,     0.17818,     0.17918,     0.18018,     0.18118,     0.18218,     0.18318,     0.18418,     0.18519,     0.18619,     0.18719,     0.18819,     0.18919,     0.19019,     0.19119,\n",
              "           0.19219,     0.19319,     0.19419,      0.1952,      0.1962,      0.1972,      0.1982,      0.1992,      0.2002,      0.2012,      0.2022,      0.2032,      0.2042,     0.20521,     0.20621,     0.20721,     0.20821,     0.20921,     0.21021,     0.21121,     0.21221,     0.21321,     0.21421,     0.21522,\n",
              "           0.21622,     0.21722,     0.21822,     0.21922,     0.22022,     0.22122,     0.22222,     0.22322,     0.22422,     0.22523,     0.22623,     0.22723,     0.22823,     0.22923,     0.23023,     0.23123,     0.23223,     0.23323,     0.23423,     0.23524,     0.23624,     0.23724,     0.23824,     0.23924,\n",
              "           0.24024,     0.24124,     0.24224,     0.24324,     0.24424,     0.24525,     0.24625,     0.24725,     0.24825,     0.24925,     0.25025,     0.25125,     0.25225,     0.25325,     0.25425,     0.25526,     0.25626,     0.25726,     0.25826,     0.25926,     0.26026,     0.26126,     0.26226,     0.26326,\n",
              "           0.26426,     0.26527,     0.26627,     0.26727,     0.26827,     0.26927,     0.27027,     0.27127,     0.27227,     0.27327,     0.27427,     0.27528,     0.27628,     0.27728,     0.27828,     0.27928,     0.28028,     0.28128,     0.28228,     0.28328,     0.28428,     0.28529,     0.28629,     0.28729,\n",
              "           0.28829,     0.28929,     0.29029,     0.29129,     0.29229,     0.29329,     0.29429,      0.2953,      0.2963,      0.2973,      0.2983,      0.2993,      0.3003,      0.3013,      0.3023,      0.3033,      0.3043,     0.30531,     0.30631,     0.30731,     0.30831,     0.30931,     0.31031,     0.31131,\n",
              "           0.31231,     0.31331,     0.31431,     0.31532,     0.31632,     0.31732,     0.31832,     0.31932,     0.32032,     0.32132,     0.32232,     0.32332,     0.32432,     0.32533,     0.32633,     0.32733,     0.32833,     0.32933,     0.33033,     0.33133,     0.33233,     0.33333,     0.33433,     0.33534,\n",
              "           0.33634,     0.33734,     0.33834,     0.33934,     0.34034,     0.34134,     0.34234,     0.34334,     0.34434,     0.34535,     0.34635,     0.34735,     0.34835,     0.34935,     0.35035,     0.35135,     0.35235,     0.35335,     0.35435,     0.35536,     0.35636,     0.35736,     0.35836,     0.35936,\n",
              "           0.36036,     0.36136,     0.36236,     0.36336,     0.36436,     0.36537,     0.36637,     0.36737,     0.36837,     0.36937,     0.37037,     0.37137,     0.37237,     0.37337,     0.37437,     0.37538,     0.37638,     0.37738,     0.37838,     0.37938,     0.38038,     0.38138,     0.38238,     0.38338,\n",
              "           0.38438,     0.38539,     0.38639,     0.38739,     0.38839,     0.38939,     0.39039,     0.39139,     0.39239,     0.39339,     0.39439,      0.3954,      0.3964,      0.3974,      0.3984,      0.3994,      0.4004,      0.4014,      0.4024,      0.4034,      0.4044,     0.40541,     0.40641,     0.40741,\n",
              "           0.40841,     0.40941,     0.41041,     0.41141,     0.41241,     0.41341,     0.41441,     0.41542,     0.41642,     0.41742,     0.41842,     0.41942,     0.42042,     0.42142,     0.42242,     0.42342,     0.42442,     0.42543,     0.42643,     0.42743,     0.42843,     0.42943,     0.43043,     0.43143,\n",
              "           0.43243,     0.43343,     0.43443,     0.43544,     0.43644,     0.43744,     0.43844,     0.43944,     0.44044,     0.44144,     0.44244,     0.44344,     0.44444,     0.44545,     0.44645,     0.44745,     0.44845,     0.44945,     0.45045,     0.45145,     0.45245,     0.45345,     0.45445,     0.45546,\n",
              "           0.45646,     0.45746,     0.45846,     0.45946,     0.46046,     0.46146,     0.46246,     0.46346,     0.46446,     0.46547,     0.46647,     0.46747,     0.46847,     0.46947,     0.47047,     0.47147,     0.47247,     0.47347,     0.47447,     0.47548,     0.47648,     0.47748,     0.47848,     0.47948,\n",
              "           0.48048,     0.48148,     0.48248,     0.48348,     0.48448,     0.48549,     0.48649,     0.48749,     0.48849,     0.48949,     0.49049,     0.49149,     0.49249,     0.49349,     0.49449,      0.4955,      0.4965,      0.4975,      0.4985,      0.4995,      0.5005,      0.5015,      0.5025,      0.5035,\n",
              "            0.5045,     0.50551,     0.50651,     0.50751,     0.50851,     0.50951,     0.51051,     0.51151,     0.51251,     0.51351,     0.51451,     0.51552,     0.51652,     0.51752,     0.51852,     0.51952,     0.52052,     0.52152,     0.52252,     0.52352,     0.52452,     0.52553,     0.52653,     0.52753,\n",
              "           0.52853,     0.52953,     0.53053,     0.53153,     0.53253,     0.53353,     0.53453,     0.53554,     0.53654,     0.53754,     0.53854,     0.53954,     0.54054,     0.54154,     0.54254,     0.54354,     0.54454,     0.54555,     0.54655,     0.54755,     0.54855,     0.54955,     0.55055,     0.55155,\n",
              "           0.55255,     0.55355,     0.55455,     0.55556,     0.55656,     0.55756,     0.55856,     0.55956,     0.56056,     0.56156,     0.56256,     0.56356,     0.56456,     0.56557,     0.56657,     0.56757,     0.56857,     0.56957,     0.57057,     0.57157,     0.57257,     0.57357,     0.57457,     0.57558,\n",
              "           0.57658,     0.57758,     0.57858,     0.57958,     0.58058,     0.58158,     0.58258,     0.58358,     0.58458,     0.58559,     0.58659,     0.58759,     0.58859,     0.58959,     0.59059,     0.59159,     0.59259,     0.59359,     0.59459,      0.5956,      0.5966,      0.5976,      0.5986,      0.5996,\n",
              "            0.6006,      0.6016,      0.6026,      0.6036,      0.6046,     0.60561,     0.60661,     0.60761,     0.60861,     0.60961,     0.61061,     0.61161,     0.61261,     0.61361,     0.61461,     0.61562,     0.61662,     0.61762,     0.61862,     0.61962,     0.62062,     0.62162,     0.62262,     0.62362,\n",
              "           0.62462,     0.62563,     0.62663,     0.62763,     0.62863,     0.62963,     0.63063,     0.63163,     0.63263,     0.63363,     0.63463,     0.63564,     0.63664,     0.63764,     0.63864,     0.63964,     0.64064,     0.64164,     0.64264,     0.64364,     0.64464,     0.64565,     0.64665,     0.64765,\n",
              "           0.64865,     0.64965,     0.65065,     0.65165,     0.65265,     0.65365,     0.65465,     0.65566,     0.65666,     0.65766,     0.65866,     0.65966,     0.66066,     0.66166,     0.66266,     0.66366,     0.66466,     0.66567,     0.66667,     0.66767,     0.66867,     0.66967,     0.67067,     0.67167,\n",
              "           0.67267,     0.67367,     0.67467,     0.67568,     0.67668,     0.67768,     0.67868,     0.67968,     0.68068,     0.68168,     0.68268,     0.68368,     0.68468,     0.68569,     0.68669,     0.68769,     0.68869,     0.68969,     0.69069,     0.69169,     0.69269,     0.69369,     0.69469,      0.6957,\n",
              "            0.6967,      0.6977,      0.6987,      0.6997,      0.7007,      0.7017,      0.7027,      0.7037,      0.7047,     0.70571,     0.70671,     0.70771,     0.70871,     0.70971,     0.71071,     0.71171,     0.71271,     0.71371,     0.71471,     0.71572,     0.71672,     0.71772,     0.71872,     0.71972,\n",
              "           0.72072,     0.72172,     0.72272,     0.72372,     0.72472,     0.72573,     0.72673,     0.72773,     0.72873,     0.72973,     0.73073,     0.73173,     0.73273,     0.73373,     0.73473,     0.73574,     0.73674,     0.73774,     0.73874,     0.73974,     0.74074,     0.74174,     0.74274,     0.74374,\n",
              "           0.74474,     0.74575,     0.74675,     0.74775,     0.74875,     0.74975,     0.75075,     0.75175,     0.75275,     0.75375,     0.75475,     0.75576,     0.75676,     0.75776,     0.75876,     0.75976,     0.76076,     0.76176,     0.76276,     0.76376,     0.76476,     0.76577,     0.76677,     0.76777,\n",
              "           0.76877,     0.76977,     0.77077,     0.77177,     0.77277,     0.77377,     0.77477,     0.77578,     0.77678,     0.77778,     0.77878,     0.77978,     0.78078,     0.78178,     0.78278,     0.78378,     0.78478,     0.78579,     0.78679,     0.78779,     0.78879,     0.78979,     0.79079,     0.79179,\n",
              "           0.79279,     0.79379,     0.79479,      0.7958,      0.7968,      0.7978,      0.7988,      0.7998,      0.8008,      0.8018,      0.8028,      0.8038,      0.8048,     0.80581,     0.80681,     0.80781,     0.80881,     0.80981,     0.81081,     0.81181,     0.81281,     0.81381,     0.81481,     0.81582,\n",
              "           0.81682,     0.81782,     0.81882,     0.81982,     0.82082,     0.82182,     0.82282,     0.82382,     0.82482,     0.82583,     0.82683,     0.82783,     0.82883,     0.82983,     0.83083,     0.83183,     0.83283,     0.83383,     0.83483,     0.83584,     0.83684,     0.83784,     0.83884,     0.83984,\n",
              "           0.84084,     0.84184,     0.84284,     0.84384,     0.84484,     0.84585,     0.84685,     0.84785,     0.84885,     0.84985,     0.85085,     0.85185,     0.85285,     0.85385,     0.85485,     0.85586,     0.85686,     0.85786,     0.85886,     0.85986,     0.86086,     0.86186,     0.86286,     0.86386,\n",
              "           0.86486,     0.86587,     0.86687,     0.86787,     0.86887,     0.86987,     0.87087,     0.87187,     0.87287,     0.87387,     0.87487,     0.87588,     0.87688,     0.87788,     0.87888,     0.87988,     0.88088,     0.88188,     0.88288,     0.88388,     0.88488,     0.88589,     0.88689,     0.88789,\n",
              "           0.88889,     0.88989,     0.89089,     0.89189,     0.89289,     0.89389,     0.89489,      0.8959,      0.8969,      0.8979,      0.8989,      0.8999,      0.9009,      0.9019,      0.9029,      0.9039,      0.9049,     0.90591,     0.90691,     0.90791,     0.90891,     0.90991,     0.91091,     0.91191,\n",
              "           0.91291,     0.91391,     0.91491,     0.91592,     0.91692,     0.91792,     0.91892,     0.91992,     0.92092,     0.92192,     0.92292,     0.92392,     0.92492,     0.92593,     0.92693,     0.92793,     0.92893,     0.92993,     0.93093,     0.93193,     0.93293,     0.93393,     0.93493,     0.93594,\n",
              "           0.93694,     0.93794,     0.93894,     0.93994,     0.94094,     0.94194,     0.94294,     0.94394,     0.94494,     0.94595,     0.94695,     0.94795,     0.94895,     0.94995,     0.95095,     0.95195,     0.95295,     0.95395,     0.95495,     0.95596,     0.95696,     0.95796,     0.95896,     0.95996,\n",
              "           0.96096,     0.96196,     0.96296,     0.96396,     0.96496,     0.96597,     0.96697,     0.96797,     0.96897,     0.96997,     0.97097,     0.97197,     0.97297,     0.97397,     0.97497,     0.97598,     0.97698,     0.97798,     0.97898,     0.97998,     0.98098,     0.98198,     0.98298,     0.98398,\n",
              "           0.98498,     0.98599,     0.98699,     0.98799,     0.98899,     0.98999,     0.99099,     0.99199,     0.99299,     0.99399,     0.99499,       0.996,       0.997,       0.998,       0.999,           1]), array([[    0.88889,     0.88889,     0.91464,     0.93526,     0.93796,     0.94182,     0.94768,     0.94939,     0.95499,     0.95609,     0.95719,     0.96006,     0.96059,     0.96111,     0.96164,     0.96217,     0.96355,     0.96668,     0.96823,     0.96908,     0.96993,     0.97076,     0.97159,\n",
              "            0.97242,     0.97313,     0.97359,     0.97406,     0.97452,     0.97499,     0.97545,     0.97577,     0.97601,     0.97625,     0.97649,     0.97673,     0.97696,      0.9772,     0.97744,     0.97768,     0.97792,     0.97816,     0.97834,     0.97849,     0.97863,     0.97877,     0.97891,\n",
              "            0.97906,      0.9792,     0.97934,     0.97948,     0.97963,     0.97977,     0.97991,     0.98005,      0.9802,     0.98034,     0.98048,     0.98062,     0.98076,     0.98091,     0.98094,     0.98097,     0.98099,     0.98101,     0.98103,     0.98105,     0.98107,     0.98109,     0.98111,\n",
              "            0.98113,     0.98115,     0.98117,     0.98119,     0.98121,     0.98124,     0.98126,     0.98128,      0.9813,     0.98132,     0.98134,     0.98136,     0.98138,      0.9814,     0.98142,     0.98144,     0.98146,     0.98149,     0.98151,     0.98153,     0.98155,     0.98157,     0.98159,\n",
              "            0.98161,     0.98163,     0.98165,     0.98167,     0.98169,     0.98171,     0.98174,     0.98176,     0.98178,      0.9818,     0.98182,     0.98184,     0.98186,     0.98188,      0.9819,     0.98192,     0.98194,     0.98196,     0.98198,     0.98201,     0.98203,     0.98205,     0.98207,\n",
              "            0.98209,     0.98211,     0.98213,     0.98215,     0.98217,     0.98219,     0.98221,     0.98223,     0.98225,     0.98228,      0.9823,     0.98232,     0.98234,     0.98236,     0.98238,      0.9824,     0.98242,     0.98244,     0.98246,     0.98248,      0.9825,     0.98252,     0.98255,\n",
              "            0.98257,     0.98259,     0.98261,     0.98263,     0.98265,     0.98267,     0.98269,     0.98271,     0.98273,     0.98275,     0.98277,     0.98279,     0.98282,     0.98284,     0.98286,     0.98288,      0.9829,     0.98292,     0.98294,     0.98296,     0.98298,       0.983,     0.98302,\n",
              "            0.98304,     0.98306,     0.98308,     0.98311,     0.98313,     0.98315,     0.98317,     0.98319,     0.98321,     0.98323,     0.98325,     0.98327,     0.98329,     0.98331,     0.98333,     0.98335,     0.98338,      0.9834,     0.98342,     0.98344,     0.98346,     0.98348,      0.9835,\n",
              "            0.98352,     0.98354,     0.98356,     0.98358,      0.9836,     0.98362,     0.98363,     0.98365,     0.98366,     0.98367,     0.98369,      0.9837,     0.98371,     0.98373,     0.98374,     0.98375,     0.98377,     0.98378,      0.9838,     0.98381,     0.98382,     0.98384,     0.98385,\n",
              "            0.98386,     0.98388,     0.98389,     0.98391,     0.98392,     0.98393,     0.98395,     0.98396,     0.98397,     0.98399,       0.984,     0.98402,     0.98403,     0.98404,     0.98406,     0.98407,     0.98408,      0.9841,     0.98411,     0.98412,     0.98414,     0.98415,     0.98417,\n",
              "            0.98418,     0.98419,     0.98421,     0.98422,     0.98423,     0.98425,     0.98426,     0.98428,     0.98429,      0.9843,     0.98432,     0.98433,     0.98434,     0.98436,     0.98437,     0.98438,      0.9844,     0.98441,     0.98443,     0.98444,     0.98445,     0.98447,     0.98448,\n",
              "            0.98449,     0.98451,     0.98452,     0.98454,     0.98455,     0.98456,     0.98458,     0.98459,      0.9846,     0.98462,     0.98463,     0.98464,     0.98466,     0.98467,     0.98469,      0.9847,     0.98471,     0.98473,     0.98474,     0.98475,     0.98477,     0.98478,     0.98479,\n",
              "            0.98481,     0.98482,     0.98484,     0.98485,     0.98486,     0.98488,     0.98489,      0.9849,     0.98492,     0.98493,     0.98495,     0.98496,     0.98497,     0.98499,       0.985,     0.98501,     0.98503,     0.98504,     0.98505,     0.98507,     0.98508,      0.9851,     0.98511,\n",
              "            0.98512,     0.98514,     0.98515,     0.98516,     0.98518,     0.98519,      0.9852,     0.98522,     0.98523,     0.98525,     0.98526,     0.98527,     0.98529,      0.9853,     0.98531,     0.98533,     0.98534,     0.98536,     0.98537,     0.98538,      0.9854,     0.98541,     0.98542,\n",
              "            0.98544,     0.98545,     0.98546,     0.98548,     0.98549,     0.98551,     0.98552,     0.98553,     0.98555,     0.98556,     0.98557,     0.98559,      0.9856,     0.98561,     0.98563,     0.98564,     0.98566,     0.98567,     0.98568,      0.9857,     0.98571,     0.98572,     0.98574,\n",
              "            0.98575,     0.98576,     0.98578,     0.98579,     0.98581,     0.98582,     0.98583,     0.98585,     0.98586,     0.98587,     0.98589,      0.9859,     0.98591,     0.98593,     0.98594,     0.98596,     0.98597,     0.98598,       0.986,     0.98601,     0.98602,     0.98604,     0.98605,\n",
              "            0.98606,     0.98608,     0.98609,     0.98611,     0.98612,     0.98613,     0.98615,     0.98616,     0.98617,     0.98619,      0.9862,     0.98621,     0.98623,     0.98624,     0.98626,     0.98627,     0.98628,      0.9863,     0.98634,     0.98639,     0.98645,      0.9865,     0.98656,\n",
              "            0.98661,     0.98667,     0.98672,     0.98678,     0.98683,     0.98689,     0.98694,       0.987,     0.98705,     0.98711,     0.98716,     0.98722,     0.98727,     0.98733,     0.98738,     0.98744,     0.98749,     0.98755,      0.9876,     0.98766,     0.98771,     0.98777,     0.98782,\n",
              "            0.98788,     0.98793,     0.98799,     0.98804,      0.9881,     0.98815,     0.98821,     0.98826,     0.98832,     0.98837,     0.98843,     0.98848,     0.98854,     0.98859,     0.98865,      0.9887,     0.98876,     0.98881,     0.98887,     0.98892,     0.98898,     0.98902,     0.98903,\n",
              "            0.98905,     0.98907,     0.98909,      0.9891,     0.98912,     0.98914,     0.98915,     0.98917,     0.98919,     0.98921,     0.98922,     0.98924,     0.98926,     0.98927,     0.98929,     0.98931,     0.98933,     0.98934,     0.98936,     0.98938,     0.98939,     0.98941,     0.98943,\n",
              "            0.98945,     0.98946,     0.98948,      0.9895,     0.98951,     0.98953,     0.98955,     0.98957,     0.98958,      0.9896,     0.98962,     0.98963,     0.98965,     0.98967,     0.98968,      0.9897,     0.98972,     0.98974,     0.98975,     0.98977,     0.98979,      0.9898,     0.98982,\n",
              "            0.98984,     0.98986,     0.98987,     0.98989,     0.98991,     0.98992,     0.98994,     0.98996,     0.98998,     0.98999,     0.99001,     0.99003,     0.99004,     0.99006,     0.99008,      0.9901,     0.99011,     0.99013,     0.99015,     0.99016,     0.99018,      0.9902,     0.99021,\n",
              "            0.99023,     0.99025,     0.99027,     0.99028,      0.9903,     0.99032,     0.99033,     0.99035,     0.99037,     0.99039,      0.9904,     0.99042,     0.99044,     0.99045,     0.99047,     0.99049,     0.99051,     0.99052,     0.99054,     0.99056,     0.99057,     0.99059,     0.99061,\n",
              "            0.99062,     0.99064,     0.99066,     0.99068,     0.99069,     0.99071,     0.99073,     0.99074,     0.99076,     0.99078,      0.9908,     0.99081,     0.99083,     0.99085,     0.99086,     0.99088,      0.9909,     0.99091,     0.99093,     0.99095,     0.99097,     0.99098,       0.991,\n",
              "            0.99102,     0.99103,     0.99105,     0.99107,     0.99109,      0.9911,     0.99112,     0.99114,     0.99115,     0.99117,     0.99119,      0.9912,     0.99122,     0.99124,     0.99126,     0.99127,     0.99129,     0.99131,     0.99132,     0.99134,     0.99136,     0.99138,     0.99139,\n",
              "            0.99141,     0.99143,     0.99144,     0.99146,     0.99148,     0.99149,     0.99151,     0.99153,     0.99155,     0.99156,     0.99158,      0.9916,     0.99161,     0.99163,     0.99165,     0.99167,     0.99168,      0.9917,     0.99172,     0.99173,     0.99165,     0.99156,     0.99147,\n",
              "            0.99137,     0.99128,     0.99119,     0.99109,       0.991,     0.99091,     0.99081,     0.99072,     0.99063,     0.99053,     0.99044,     0.99035,     0.99025,     0.99016,     0.99006,     0.98997,     0.98988,     0.98978,     0.98969,      0.9896,      0.9895,     0.98941,     0.98931,\n",
              "            0.98922,     0.98913,     0.98903,     0.98896,     0.98906,     0.98917,     0.98927,     0.98937,     0.98947,     0.98958,     0.98968,     0.98978,     0.98988,     0.98998,     0.99009,     0.99019,     0.99029,     0.99039,      0.9905,      0.9906,      0.9907,      0.9908,      0.9909,\n",
              "            0.99101,     0.99111,     0.99121,     0.99131,     0.99141,     0.99151,     0.99162,     0.99168,     0.99165,     0.99162,      0.9916,     0.99157,     0.99154,     0.99151,     0.99148,     0.99145,     0.99143,      0.9914,     0.99137,     0.99134,     0.99131,     0.99128,     0.99126,\n",
              "            0.99123,      0.9912,     0.99117,     0.99114,     0.99111,     0.99109,     0.99106,     0.99103,       0.991,     0.99097,     0.99094,     0.99092,     0.99089,     0.99086,     0.99083,      0.9908,     0.99077,     0.99075,     0.99072,     0.99069,     0.99066,     0.99063,      0.9906,\n",
              "            0.99057,     0.99055,     0.99052,     0.99049,     0.99046,     0.99043,      0.9904,     0.99038,     0.99035,     0.99032,     0.99029,     0.99026,     0.99023,     0.99021,     0.99018,     0.99015,     0.99012,     0.99009,     0.99006,     0.99003,     0.99001,     0.98998,     0.98995,\n",
              "            0.98992,     0.98989,     0.98986,     0.98984,     0.98981,     0.98978,     0.98975,     0.98972,     0.98969,     0.98966,     0.98964,     0.98961,     0.98958,     0.98955,     0.98952,     0.98949,     0.98947,     0.98944,     0.98941,     0.98938,     0.98935,     0.98932,     0.98929,\n",
              "            0.98927,     0.98924,     0.98921,     0.98918,     0.98915,     0.98912,      0.9891,     0.98907,     0.98904,     0.98901,     0.98898,     0.98895,     0.98892,      0.9889,     0.98863,      0.9883,     0.98796,     0.98762,     0.98728,     0.98694,      0.9866,     0.98626,     0.98611,\n",
              "            0.98619,     0.98626,     0.98634,     0.98642,      0.9865,     0.98657,     0.98665,     0.98673,     0.98681,     0.98688,     0.98696,     0.98704,     0.98712,     0.98719,     0.98727,     0.98735,     0.98742,      0.9875,     0.98758,     0.98766,     0.98773,     0.98781,     0.98789,\n",
              "            0.98797,     0.98804,     0.98812,      0.9882,     0.98827,     0.98835,     0.98843,     0.98851,     0.98858,     0.98866,     0.98874,     0.98882,     0.98871,     0.98857,     0.98842,     0.98828,     0.98814,       0.988,     0.98786,     0.98772,     0.98758,     0.98743,     0.98729,\n",
              "            0.98715,     0.98701,     0.98687,     0.98673,     0.98658,     0.98644,      0.9863,     0.98616,     0.98602,     0.98585,     0.98569,     0.98552,     0.98535,     0.98519,     0.98502,     0.98485,     0.98469,     0.98452,     0.98435,     0.98419,     0.98402,     0.98385,     0.98369,\n",
              "            0.98352,     0.98335,     0.98318,     0.98258,     0.98184,     0.98111,     0.98037,     0.97925,     0.97807,     0.97703,     0.97619,     0.97534,     0.97447,     0.97298,     0.97118,     0.96778,     0.96627,     0.96495,     0.96374,     0.96158,     0.95342,     0.95187,     0.94747,\n",
              "            0.94668,      0.9459,     0.94511,     0.94232,     0.93594,     0.93132,      0.9304,     0.92947,      0.9293,     0.92993,     0.93056,     0.93118,     0.92842,     0.92678,     0.92506,     0.92286,     0.92103,     0.91937,     0.91158,     0.90487,     0.90144,     0.88834,     0.88657,\n",
              "            0.88288,     0.87886,     0.87527,     0.87166,     0.85005,     0.83872,     0.82603,     0.82317,     0.81132,      0.7952,     0.78688,     0.77428,      0.7664,     0.75693,     0.73586,     0.72569,     0.71073,     0.68949,     0.66842,     0.64817,     0.63251,     0.61859,     0.60007,\n",
              "            0.56318,     0.55454,      0.5366,     0.48407,     0.45462,     0.43379,     0.39931,     0.37658,      0.3475,      0.3164,     0.30672,     0.29023,     0.26717,     0.24156,     0.23271,     0.21497,      0.2074,     0.20282,     0.18733,     0.16866,     0.15483,     0.12553,    0.092725,\n",
              "           0.087532,    0.081378,     0.07449,    0.069197,     0.06415,    0.061097,    0.058033,    0.054961,    0.042291,    0.036819,    0.029845,    0.021696,    0.020727,    0.019756,    0.018785,    0.017812,    0.016839,    0.015865,     0.01489,    0.013914,    0.012937,    0.011958,           0,\n",
              "                  0,           0,           0,           0,           0,           0,           0,           0,           0,           0,           0,           0,           0,           0,           0,           0,           0,           0,           0,           0,           0,           0,           0,\n",
              "                  0,           0,           0,           0,           0,           0,           0,           0,           0,           0,           0,           0,           0,           0,           0,           0,           0,           0,           0,           0,           0,           0,           0,\n",
              "                  0,           0,           0,           0,           0,           0,           0,           0,           0,           0,           0]]), 'Confidence', 'F1'], [array([          0,    0.001001,    0.002002,    0.003003,    0.004004,    0.005005,    0.006006,    0.007007,    0.008008,    0.009009,     0.01001,    0.011011,    0.012012,    0.013013,    0.014014,    0.015015,    0.016016,    0.017017,    0.018018,    0.019019,     0.02002,    0.021021,    0.022022,    0.023023,\n",
              "          0.024024,    0.025025,    0.026026,    0.027027,    0.028028,    0.029029,     0.03003,    0.031031,    0.032032,    0.033033,    0.034034,    0.035035,    0.036036,    0.037037,    0.038038,    0.039039,     0.04004,    0.041041,    0.042042,    0.043043,    0.044044,    0.045045,    0.046046,    0.047047,\n",
              "          0.048048,    0.049049,     0.05005,    0.051051,    0.052052,    0.053053,    0.054054,    0.055055,    0.056056,    0.057057,    0.058058,    0.059059,     0.06006,    0.061061,    0.062062,    0.063063,    0.064064,    0.065065,    0.066066,    0.067067,    0.068068,    0.069069,     0.07007,    0.071071,\n",
              "          0.072072,    0.073073,    0.074074,    0.075075,    0.076076,    0.077077,    0.078078,    0.079079,     0.08008,    0.081081,    0.082082,    0.083083,    0.084084,    0.085085,    0.086086,    0.087087,    0.088088,    0.089089,     0.09009,    0.091091,    0.092092,    0.093093,    0.094094,    0.095095,\n",
              "          0.096096,    0.097097,    0.098098,    0.099099,      0.1001,      0.1011,      0.1021,      0.1031,      0.1041,     0.10511,     0.10611,     0.10711,     0.10811,     0.10911,     0.11011,     0.11111,     0.11211,     0.11311,     0.11411,     0.11512,     0.11612,     0.11712,     0.11812,     0.11912,\n",
              "           0.12012,     0.12112,     0.12212,     0.12312,     0.12412,     0.12513,     0.12613,     0.12713,     0.12813,     0.12913,     0.13013,     0.13113,     0.13213,     0.13313,     0.13413,     0.13514,     0.13614,     0.13714,     0.13814,     0.13914,     0.14014,     0.14114,     0.14214,     0.14314,\n",
              "           0.14414,     0.14515,     0.14615,     0.14715,     0.14815,     0.14915,     0.15015,     0.15115,     0.15215,     0.15315,     0.15415,     0.15516,     0.15616,     0.15716,     0.15816,     0.15916,     0.16016,     0.16116,     0.16216,     0.16316,     0.16416,     0.16517,     0.16617,     0.16717,\n",
              "           0.16817,     0.16917,     0.17017,     0.17117,     0.17217,     0.17317,     0.17417,     0.17518,     0.17618,     0.17718,     0.17818,     0.17918,     0.18018,     0.18118,     0.18218,     0.18318,     0.18418,     0.18519,     0.18619,     0.18719,     0.18819,     0.18919,     0.19019,     0.19119,\n",
              "           0.19219,     0.19319,     0.19419,      0.1952,      0.1962,      0.1972,      0.1982,      0.1992,      0.2002,      0.2012,      0.2022,      0.2032,      0.2042,     0.20521,     0.20621,     0.20721,     0.20821,     0.20921,     0.21021,     0.21121,     0.21221,     0.21321,     0.21421,     0.21522,\n",
              "           0.21622,     0.21722,     0.21822,     0.21922,     0.22022,     0.22122,     0.22222,     0.22322,     0.22422,     0.22523,     0.22623,     0.22723,     0.22823,     0.22923,     0.23023,     0.23123,     0.23223,     0.23323,     0.23423,     0.23524,     0.23624,     0.23724,     0.23824,     0.23924,\n",
              "           0.24024,     0.24124,     0.24224,     0.24324,     0.24424,     0.24525,     0.24625,     0.24725,     0.24825,     0.24925,     0.25025,     0.25125,     0.25225,     0.25325,     0.25425,     0.25526,     0.25626,     0.25726,     0.25826,     0.25926,     0.26026,     0.26126,     0.26226,     0.26326,\n",
              "           0.26426,     0.26527,     0.26627,     0.26727,     0.26827,     0.26927,     0.27027,     0.27127,     0.27227,     0.27327,     0.27427,     0.27528,     0.27628,     0.27728,     0.27828,     0.27928,     0.28028,     0.28128,     0.28228,     0.28328,     0.28428,     0.28529,     0.28629,     0.28729,\n",
              "           0.28829,     0.28929,     0.29029,     0.29129,     0.29229,     0.29329,     0.29429,      0.2953,      0.2963,      0.2973,      0.2983,      0.2993,      0.3003,      0.3013,      0.3023,      0.3033,      0.3043,     0.30531,     0.30631,     0.30731,     0.30831,     0.30931,     0.31031,     0.31131,\n",
              "           0.31231,     0.31331,     0.31431,     0.31532,     0.31632,     0.31732,     0.31832,     0.31932,     0.32032,     0.32132,     0.32232,     0.32332,     0.32432,     0.32533,     0.32633,     0.32733,     0.32833,     0.32933,     0.33033,     0.33133,     0.33233,     0.33333,     0.33433,     0.33534,\n",
              "           0.33634,     0.33734,     0.33834,     0.33934,     0.34034,     0.34134,     0.34234,     0.34334,     0.34434,     0.34535,     0.34635,     0.34735,     0.34835,     0.34935,     0.35035,     0.35135,     0.35235,     0.35335,     0.35435,     0.35536,     0.35636,     0.35736,     0.35836,     0.35936,\n",
              "           0.36036,     0.36136,     0.36236,     0.36336,     0.36436,     0.36537,     0.36637,     0.36737,     0.36837,     0.36937,     0.37037,     0.37137,     0.37237,     0.37337,     0.37437,     0.37538,     0.37638,     0.37738,     0.37838,     0.37938,     0.38038,     0.38138,     0.38238,     0.38338,\n",
              "           0.38438,     0.38539,     0.38639,     0.38739,     0.38839,     0.38939,     0.39039,     0.39139,     0.39239,     0.39339,     0.39439,      0.3954,      0.3964,      0.3974,      0.3984,      0.3994,      0.4004,      0.4014,      0.4024,      0.4034,      0.4044,     0.40541,     0.40641,     0.40741,\n",
              "           0.40841,     0.40941,     0.41041,     0.41141,     0.41241,     0.41341,     0.41441,     0.41542,     0.41642,     0.41742,     0.41842,     0.41942,     0.42042,     0.42142,     0.42242,     0.42342,     0.42442,     0.42543,     0.42643,     0.42743,     0.42843,     0.42943,     0.43043,     0.43143,\n",
              "           0.43243,     0.43343,     0.43443,     0.43544,     0.43644,     0.43744,     0.43844,     0.43944,     0.44044,     0.44144,     0.44244,     0.44344,     0.44444,     0.44545,     0.44645,     0.44745,     0.44845,     0.44945,     0.45045,     0.45145,     0.45245,     0.45345,     0.45445,     0.45546,\n",
              "           0.45646,     0.45746,     0.45846,     0.45946,     0.46046,     0.46146,     0.46246,     0.46346,     0.46446,     0.46547,     0.46647,     0.46747,     0.46847,     0.46947,     0.47047,     0.47147,     0.47247,     0.47347,     0.47447,     0.47548,     0.47648,     0.47748,     0.47848,     0.47948,\n",
              "           0.48048,     0.48148,     0.48248,     0.48348,     0.48448,     0.48549,     0.48649,     0.48749,     0.48849,     0.48949,     0.49049,     0.49149,     0.49249,     0.49349,     0.49449,      0.4955,      0.4965,      0.4975,      0.4985,      0.4995,      0.5005,      0.5015,      0.5025,      0.5035,\n",
              "            0.5045,     0.50551,     0.50651,     0.50751,     0.50851,     0.50951,     0.51051,     0.51151,     0.51251,     0.51351,     0.51451,     0.51552,     0.51652,     0.51752,     0.51852,     0.51952,     0.52052,     0.52152,     0.52252,     0.52352,     0.52452,     0.52553,     0.52653,     0.52753,\n",
              "           0.52853,     0.52953,     0.53053,     0.53153,     0.53253,     0.53353,     0.53453,     0.53554,     0.53654,     0.53754,     0.53854,     0.53954,     0.54054,     0.54154,     0.54254,     0.54354,     0.54454,     0.54555,     0.54655,     0.54755,     0.54855,     0.54955,     0.55055,     0.55155,\n",
              "           0.55255,     0.55355,     0.55455,     0.55556,     0.55656,     0.55756,     0.55856,     0.55956,     0.56056,     0.56156,     0.56256,     0.56356,     0.56456,     0.56557,     0.56657,     0.56757,     0.56857,     0.56957,     0.57057,     0.57157,     0.57257,     0.57357,     0.57457,     0.57558,\n",
              "           0.57658,     0.57758,     0.57858,     0.57958,     0.58058,     0.58158,     0.58258,     0.58358,     0.58458,     0.58559,     0.58659,     0.58759,     0.58859,     0.58959,     0.59059,     0.59159,     0.59259,     0.59359,     0.59459,      0.5956,      0.5966,      0.5976,      0.5986,      0.5996,\n",
              "            0.6006,      0.6016,      0.6026,      0.6036,      0.6046,     0.60561,     0.60661,     0.60761,     0.60861,     0.60961,     0.61061,     0.61161,     0.61261,     0.61361,     0.61461,     0.61562,     0.61662,     0.61762,     0.61862,     0.61962,     0.62062,     0.62162,     0.62262,     0.62362,\n",
              "           0.62462,     0.62563,     0.62663,     0.62763,     0.62863,     0.62963,     0.63063,     0.63163,     0.63263,     0.63363,     0.63463,     0.63564,     0.63664,     0.63764,     0.63864,     0.63964,     0.64064,     0.64164,     0.64264,     0.64364,     0.64464,     0.64565,     0.64665,     0.64765,\n",
              "           0.64865,     0.64965,     0.65065,     0.65165,     0.65265,     0.65365,     0.65465,     0.65566,     0.65666,     0.65766,     0.65866,     0.65966,     0.66066,     0.66166,     0.66266,     0.66366,     0.66466,     0.66567,     0.66667,     0.66767,     0.66867,     0.66967,     0.67067,     0.67167,\n",
              "           0.67267,     0.67367,     0.67467,     0.67568,     0.67668,     0.67768,     0.67868,     0.67968,     0.68068,     0.68168,     0.68268,     0.68368,     0.68468,     0.68569,     0.68669,     0.68769,     0.68869,     0.68969,     0.69069,     0.69169,     0.69269,     0.69369,     0.69469,      0.6957,\n",
              "            0.6967,      0.6977,      0.6987,      0.6997,      0.7007,      0.7017,      0.7027,      0.7037,      0.7047,     0.70571,     0.70671,     0.70771,     0.70871,     0.70971,     0.71071,     0.71171,     0.71271,     0.71371,     0.71471,     0.71572,     0.71672,     0.71772,     0.71872,     0.71972,\n",
              "           0.72072,     0.72172,     0.72272,     0.72372,     0.72472,     0.72573,     0.72673,     0.72773,     0.72873,     0.72973,     0.73073,     0.73173,     0.73273,     0.73373,     0.73473,     0.73574,     0.73674,     0.73774,     0.73874,     0.73974,     0.74074,     0.74174,     0.74274,     0.74374,\n",
              "           0.74474,     0.74575,     0.74675,     0.74775,     0.74875,     0.74975,     0.75075,     0.75175,     0.75275,     0.75375,     0.75475,     0.75576,     0.75676,     0.75776,     0.75876,     0.75976,     0.76076,     0.76176,     0.76276,     0.76376,     0.76476,     0.76577,     0.76677,     0.76777,\n",
              "           0.76877,     0.76977,     0.77077,     0.77177,     0.77277,     0.77377,     0.77477,     0.77578,     0.77678,     0.77778,     0.77878,     0.77978,     0.78078,     0.78178,     0.78278,     0.78378,     0.78478,     0.78579,     0.78679,     0.78779,     0.78879,     0.78979,     0.79079,     0.79179,\n",
              "           0.79279,     0.79379,     0.79479,      0.7958,      0.7968,      0.7978,      0.7988,      0.7998,      0.8008,      0.8018,      0.8028,      0.8038,      0.8048,     0.80581,     0.80681,     0.80781,     0.80881,     0.80981,     0.81081,     0.81181,     0.81281,     0.81381,     0.81481,     0.81582,\n",
              "           0.81682,     0.81782,     0.81882,     0.81982,     0.82082,     0.82182,     0.82282,     0.82382,     0.82482,     0.82583,     0.82683,     0.82783,     0.82883,     0.82983,     0.83083,     0.83183,     0.83283,     0.83383,     0.83483,     0.83584,     0.83684,     0.83784,     0.83884,     0.83984,\n",
              "           0.84084,     0.84184,     0.84284,     0.84384,     0.84484,     0.84585,     0.84685,     0.84785,     0.84885,     0.84985,     0.85085,     0.85185,     0.85285,     0.85385,     0.85485,     0.85586,     0.85686,     0.85786,     0.85886,     0.85986,     0.86086,     0.86186,     0.86286,     0.86386,\n",
              "           0.86486,     0.86587,     0.86687,     0.86787,     0.86887,     0.86987,     0.87087,     0.87187,     0.87287,     0.87387,     0.87487,     0.87588,     0.87688,     0.87788,     0.87888,     0.87988,     0.88088,     0.88188,     0.88288,     0.88388,     0.88488,     0.88589,     0.88689,     0.88789,\n",
              "           0.88889,     0.88989,     0.89089,     0.89189,     0.89289,     0.89389,     0.89489,      0.8959,      0.8969,      0.8979,      0.8989,      0.8999,      0.9009,      0.9019,      0.9029,      0.9039,      0.9049,     0.90591,     0.90691,     0.90791,     0.90891,     0.90991,     0.91091,     0.91191,\n",
              "           0.91291,     0.91391,     0.91491,     0.91592,     0.91692,     0.91792,     0.91892,     0.91992,     0.92092,     0.92192,     0.92292,     0.92392,     0.92492,     0.92593,     0.92693,     0.92793,     0.92893,     0.92993,     0.93093,     0.93193,     0.93293,     0.93393,     0.93493,     0.93594,\n",
              "           0.93694,     0.93794,     0.93894,     0.93994,     0.94094,     0.94194,     0.94294,     0.94394,     0.94494,     0.94595,     0.94695,     0.94795,     0.94895,     0.94995,     0.95095,     0.95195,     0.95295,     0.95395,     0.95495,     0.95596,     0.95696,     0.95796,     0.95896,     0.95996,\n",
              "           0.96096,     0.96196,     0.96296,     0.96396,     0.96496,     0.96597,     0.96697,     0.96797,     0.96897,     0.96997,     0.97097,     0.97197,     0.97297,     0.97397,     0.97497,     0.97598,     0.97698,     0.97798,     0.97898,     0.97998,     0.98098,     0.98198,     0.98298,     0.98398,\n",
              "           0.98498,     0.98599,     0.98699,     0.98799,     0.98899,     0.98999,     0.99099,     0.99199,     0.99299,     0.99399,     0.99499,       0.996,       0.997,       0.998,       0.999,           1]), array([[        0.8,         0.8,      0.8427,     0.87839,     0.88317,     0.89003,     0.90057,     0.90365,     0.91385,     0.91587,     0.91789,     0.92318,     0.92416,     0.92514,     0.92611,     0.92709,     0.92967,     0.93552,     0.93842,     0.94001,     0.94161,     0.94319,     0.94475,\n",
              "            0.94632,     0.94766,     0.94854,     0.94943,     0.95031,     0.95119,     0.95208,     0.95268,     0.95314,      0.9536,     0.95405,     0.95451,     0.95497,     0.95542,     0.95588,     0.95634,      0.9568,     0.95725,      0.9576,     0.95788,     0.95815,     0.95842,      0.9587,\n",
              "            0.95897,     0.95924,     0.95952,     0.95979,     0.96007,     0.96034,     0.96061,     0.96089,     0.96116,     0.96143,     0.96171,     0.96198,     0.96225,     0.96253,      0.9626,     0.96264,     0.96268,     0.96272,     0.96276,      0.9628,     0.96284,     0.96288,     0.96292,\n",
              "            0.96296,       0.963,     0.96304,     0.96308,     0.96312,     0.96316,      0.9632,     0.96324,     0.96328,     0.96332,     0.96336,      0.9634,     0.96344,     0.96348,     0.96352,     0.96356,      0.9636,     0.96364,     0.96368,     0.96372,     0.96376,      0.9638,     0.96384,\n",
              "            0.96388,     0.96392,     0.96396,     0.96401,     0.96405,     0.96409,     0.96413,     0.96417,     0.96421,     0.96425,     0.96429,     0.96433,     0.96437,     0.96441,     0.96445,     0.96449,     0.96453,     0.96457,     0.96461,     0.96465,     0.96469,     0.96473,     0.96477,\n",
              "            0.96481,     0.96485,     0.96489,     0.96493,     0.96497,     0.96501,     0.96505,     0.96509,     0.96513,     0.96517,     0.96521,     0.96525,     0.96529,     0.96533,     0.96537,     0.96541,     0.96545,     0.96549,     0.96553,     0.96557,     0.96561,     0.96565,     0.96569,\n",
              "            0.96573,     0.96577,     0.96581,     0.96585,     0.96589,     0.96593,     0.96597,     0.96601,     0.96605,     0.96609,     0.96613,     0.96617,     0.96621,     0.96625,     0.96629,     0.96633,     0.96637,     0.96641,     0.96645,     0.96649,     0.96653,     0.96657,     0.96661,\n",
              "            0.96665,     0.96669,     0.96673,     0.96677,     0.96681,     0.96685,     0.96689,     0.96693,     0.96697,     0.96701,     0.96705,     0.96709,     0.96713,     0.96717,     0.96721,     0.96725,     0.96729,     0.96733,     0.96737,     0.96741,     0.96745,     0.96749,     0.96753,\n",
              "            0.96757,     0.96761,     0.96766,      0.9677,     0.96774,     0.96776,     0.96779,     0.96782,     0.96784,     0.96787,      0.9679,     0.96792,     0.96795,     0.96798,       0.968,     0.96803,     0.96806,     0.96808,     0.96811,     0.96814,     0.96816,     0.96819,     0.96822,\n",
              "            0.96824,     0.96827,     0.96829,     0.96832,     0.96835,     0.96837,      0.9684,     0.96843,     0.96845,     0.96848,     0.96851,     0.96853,     0.96856,     0.96859,     0.96861,     0.96864,     0.96867,     0.96869,     0.96872,     0.96875,     0.96877,      0.9688,     0.96883,\n",
              "            0.96885,     0.96888,      0.9689,     0.96893,     0.96896,     0.96898,     0.96901,     0.96904,     0.96906,     0.96909,     0.96912,     0.96914,     0.96917,      0.9692,     0.96922,     0.96925,     0.96928,      0.9693,     0.96933,     0.96936,     0.96938,     0.96941,     0.96944,\n",
              "            0.96946,     0.96949,     0.96951,     0.96954,     0.96957,     0.96959,     0.96962,     0.96965,     0.96967,      0.9697,     0.96973,     0.96975,     0.96978,     0.96981,     0.96983,     0.96986,     0.96989,     0.96991,     0.96994,     0.96997,     0.96999,     0.97002,     0.97005,\n",
              "            0.97007,      0.9701,     0.97013,     0.97015,     0.97018,      0.9702,     0.97023,     0.97026,     0.97028,     0.97031,     0.97034,     0.97036,     0.97039,     0.97042,     0.97044,     0.97047,      0.9705,     0.97052,     0.97055,     0.97058,      0.9706,     0.97063,     0.97066,\n",
              "            0.97068,     0.97071,     0.97074,     0.97076,     0.97079,     0.97081,     0.97084,     0.97087,     0.97089,     0.97092,     0.97095,     0.97097,       0.971,     0.97103,     0.97105,     0.97108,     0.97111,     0.97113,     0.97116,     0.97119,     0.97121,     0.97124,     0.97127,\n",
              "            0.97129,     0.97132,     0.97135,     0.97137,      0.9714,     0.97142,     0.97145,     0.97148,      0.9715,     0.97153,     0.97156,     0.97158,     0.97161,     0.97164,     0.97166,     0.97169,     0.97172,     0.97174,     0.97177,      0.9718,     0.97182,     0.97185,     0.97188,\n",
              "             0.9719,     0.97193,     0.97196,     0.97198,     0.97201,     0.97204,     0.97206,     0.97209,     0.97211,     0.97214,     0.97217,     0.97219,     0.97222,     0.97225,     0.97227,      0.9723,     0.97233,     0.97235,     0.97238,     0.97241,     0.97243,     0.97246,     0.97249,\n",
              "            0.97251,     0.97254,     0.97257,     0.97259,     0.97262,     0.97265,     0.97267,      0.9727,     0.97272,     0.97275,     0.97278,      0.9728,     0.97283,     0.97286,     0.97288,     0.97291,     0.97294,     0.97296,     0.97304,     0.97315,     0.97326,     0.97336,     0.97347,\n",
              "            0.97358,     0.97369,     0.97379,      0.9739,     0.97401,     0.97412,     0.97422,     0.97433,     0.97444,     0.97454,     0.97465,     0.97476,     0.97487,     0.97497,     0.97508,     0.97519,      0.9753,      0.9754,     0.97551,     0.97562,     0.97573,     0.97583,     0.97594,\n",
              "            0.97605,     0.97615,     0.97626,     0.97637,     0.97648,     0.97658,     0.97669,      0.9768,     0.97691,     0.97701,     0.97712,     0.97723,     0.97734,     0.97744,     0.97755,     0.97766,     0.97776,     0.97787,     0.97798,     0.97809,     0.97819,     0.97827,     0.97831,\n",
              "            0.97834,     0.97837,     0.97841,     0.97844,     0.97847,     0.97851,     0.97854,     0.97858,     0.97861,     0.97864,     0.97868,     0.97871,     0.97874,     0.97878,     0.97881,     0.97884,     0.97888,     0.97891,     0.97894,     0.97898,     0.97901,     0.97904,     0.97908,\n",
              "            0.97911,     0.97914,     0.97918,     0.97921,     0.97925,     0.97928,     0.97931,     0.97935,     0.97938,     0.97941,     0.97945,     0.97948,     0.97951,     0.97955,     0.97958,     0.97961,     0.97965,     0.97968,     0.97971,     0.97975,     0.97978,     0.97982,     0.97985,\n",
              "            0.97988,     0.97992,     0.97995,     0.97998,     0.98002,     0.98005,     0.98008,     0.98012,     0.98015,     0.98018,     0.98022,     0.98025,     0.98028,     0.98032,     0.98035,     0.98038,     0.98042,     0.98045,     0.98049,     0.98052,     0.98055,     0.98059,     0.98062,\n",
              "            0.98065,     0.98069,     0.98072,     0.98075,     0.98079,     0.98082,     0.98085,     0.98089,     0.98092,     0.98095,     0.98099,     0.98102,     0.98106,     0.98109,     0.98112,     0.98116,     0.98119,     0.98122,     0.98126,     0.98129,     0.98132,     0.98136,     0.98139,\n",
              "            0.98142,     0.98146,     0.98149,     0.98152,     0.98156,     0.98159,     0.98162,     0.98166,     0.98169,     0.98173,     0.98176,     0.98179,     0.98183,     0.98186,     0.98189,     0.98193,     0.98196,     0.98199,     0.98203,     0.98206,     0.98209,     0.98213,     0.98216,\n",
              "            0.98219,     0.98223,     0.98226,      0.9823,     0.98233,     0.98236,      0.9824,     0.98243,     0.98246,      0.9825,     0.98253,     0.98256,      0.9826,     0.98263,     0.98266,      0.9827,     0.98273,     0.98276,      0.9828,     0.98283,     0.98286,      0.9829,     0.98293,\n",
              "            0.98297,       0.983,     0.98303,     0.98307,      0.9831,     0.98313,     0.98317,      0.9832,     0.98323,     0.98327,      0.9833,     0.98333,     0.98337,      0.9834,     0.98343,     0.98347,      0.9835,     0.98354,     0.98357,      0.9836,      0.9836,      0.9836,      0.9836,\n",
              "            0.98359,     0.98359,     0.98359,     0.98359,     0.98358,     0.98358,     0.98358,     0.98357,     0.98357,     0.98357,     0.98356,     0.98356,     0.98356,     0.98356,     0.98355,     0.98355,     0.98355,     0.98354,     0.98354,     0.98354,     0.98353,     0.98353,     0.98353,\n",
              "            0.98353,     0.98352,     0.98352,     0.98354,     0.98374,     0.98394,     0.98415,     0.98435,     0.98455,     0.98475,     0.98496,     0.98516,     0.98536,     0.98556,     0.98577,     0.98597,     0.98617,     0.98637,     0.98658,     0.98678,     0.98698,     0.98718,     0.98739,\n",
              "            0.98759,     0.98779,       0.988,      0.9882,      0.9884,      0.9886,     0.98881,     0.98895,     0.98895,     0.98895,     0.98895,     0.98895,     0.98895,     0.98895,     0.98895,     0.98895,     0.98894,     0.98894,     0.98894,     0.98894,     0.98894,     0.98894,     0.98894,\n",
              "            0.98894,     0.98894,     0.98894,     0.98894,     0.98894,     0.98894,     0.98894,     0.98894,     0.98894,     0.98893,     0.98893,     0.98893,     0.98893,     0.98893,     0.98893,     0.98893,     0.98893,     0.98893,     0.98893,     0.98893,     0.98893,     0.98893,     0.98893,\n",
              "            0.98893,     0.98893,     0.98892,     0.98892,     0.98892,     0.98892,     0.98892,     0.98892,     0.98892,     0.98892,     0.98892,     0.98892,     0.98892,     0.98892,     0.98892,     0.98892,     0.98892,     0.98892,     0.98891,     0.98891,     0.98891,     0.98891,     0.98891,\n",
              "            0.98891,     0.98891,     0.98891,     0.98891,     0.98891,     0.98891,     0.98891,     0.98891,     0.98891,     0.98891,     0.98891,      0.9889,      0.9889,      0.9889,      0.9889,      0.9889,      0.9889,      0.9889,      0.9889,      0.9889,      0.9889,      0.9889,      0.9889,\n",
              "             0.9889,      0.9889,      0.9889,      0.9889,     0.98889,     0.98889,     0.98889,     0.98889,     0.98889,     0.98889,     0.98889,     0.98889,     0.98889,     0.98889,     0.98888,     0.98888,     0.98887,     0.98886,     0.98885,     0.98885,     0.98884,     0.98883,      0.9889,\n",
              "            0.98905,     0.98921,     0.98937,     0.98952,     0.98968,     0.98983,     0.98999,     0.99015,      0.9903,     0.99046,     0.99061,     0.99077,     0.99093,     0.99108,     0.99124,     0.99139,     0.99155,     0.99171,     0.99186,     0.99202,     0.99217,     0.99233,     0.99249,\n",
              "            0.99264,      0.9928,     0.99295,     0.99311,     0.99327,     0.99342,     0.99358,     0.99373,     0.99389,     0.99405,      0.9942,     0.99436,     0.99438,     0.99438,     0.99438,     0.99438,     0.99437,     0.99437,     0.99437,     0.99437,     0.99437,     0.99437,     0.99436,\n",
              "            0.99436,     0.99436,     0.99436,     0.99436,     0.99436,     0.99436,     0.99435,     0.99435,     0.99435,     0.99435,     0.99435,     0.99434,     0.99434,     0.99434,     0.99434,     0.99434,     0.99434,     0.99433,     0.99433,     0.99433,     0.99433,     0.99433,     0.99432,\n",
              "            0.99432,     0.99432,     0.99432,     0.99431,      0.9943,      0.9943,     0.99429,     0.99427,     0.99426,     0.99425,     0.99424,     0.99423,     0.99422,      0.9942,     0.99418,     0.99414,     0.99412,     0.99411,     0.99409,     0.99407,     0.99397,     0.99395,      0.9939,\n",
              "            0.99389,     0.99388,     0.99387,     0.99384,     0.99376,      0.9937,     0.99369,     0.99368,     0.99437,     0.99581,     0.99725,     0.99869,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,\n",
              "                  1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,\n",
              "                  1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,\n",
              "                  1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,\n",
              "                  1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,\n",
              "                  1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,\n",
              "                  1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1]]), 'Confidence', 'Precision'], [array([          0,    0.001001,    0.002002,    0.003003,    0.004004,    0.005005,    0.006006,    0.007007,    0.008008,    0.009009,     0.01001,    0.011011,    0.012012,    0.013013,    0.014014,    0.015015,    0.016016,    0.017017,    0.018018,    0.019019,     0.02002,    0.021021,    0.022022,    0.023023,\n",
              "          0.024024,    0.025025,    0.026026,    0.027027,    0.028028,    0.029029,     0.03003,    0.031031,    0.032032,    0.033033,    0.034034,    0.035035,    0.036036,    0.037037,    0.038038,    0.039039,     0.04004,    0.041041,    0.042042,    0.043043,    0.044044,    0.045045,    0.046046,    0.047047,\n",
              "          0.048048,    0.049049,     0.05005,    0.051051,    0.052052,    0.053053,    0.054054,    0.055055,    0.056056,    0.057057,    0.058058,    0.059059,     0.06006,    0.061061,    0.062062,    0.063063,    0.064064,    0.065065,    0.066066,    0.067067,    0.068068,    0.069069,     0.07007,    0.071071,\n",
              "          0.072072,    0.073073,    0.074074,    0.075075,    0.076076,    0.077077,    0.078078,    0.079079,     0.08008,    0.081081,    0.082082,    0.083083,    0.084084,    0.085085,    0.086086,    0.087087,    0.088088,    0.089089,     0.09009,    0.091091,    0.092092,    0.093093,    0.094094,    0.095095,\n",
              "          0.096096,    0.097097,    0.098098,    0.099099,      0.1001,      0.1011,      0.1021,      0.1031,      0.1041,     0.10511,     0.10611,     0.10711,     0.10811,     0.10911,     0.11011,     0.11111,     0.11211,     0.11311,     0.11411,     0.11512,     0.11612,     0.11712,     0.11812,     0.11912,\n",
              "           0.12012,     0.12112,     0.12212,     0.12312,     0.12412,     0.12513,     0.12613,     0.12713,     0.12813,     0.12913,     0.13013,     0.13113,     0.13213,     0.13313,     0.13413,     0.13514,     0.13614,     0.13714,     0.13814,     0.13914,     0.14014,     0.14114,     0.14214,     0.14314,\n",
              "           0.14414,     0.14515,     0.14615,     0.14715,     0.14815,     0.14915,     0.15015,     0.15115,     0.15215,     0.15315,     0.15415,     0.15516,     0.15616,     0.15716,     0.15816,     0.15916,     0.16016,     0.16116,     0.16216,     0.16316,     0.16416,     0.16517,     0.16617,     0.16717,\n",
              "           0.16817,     0.16917,     0.17017,     0.17117,     0.17217,     0.17317,     0.17417,     0.17518,     0.17618,     0.17718,     0.17818,     0.17918,     0.18018,     0.18118,     0.18218,     0.18318,     0.18418,     0.18519,     0.18619,     0.18719,     0.18819,     0.18919,     0.19019,     0.19119,\n",
              "           0.19219,     0.19319,     0.19419,      0.1952,      0.1962,      0.1972,      0.1982,      0.1992,      0.2002,      0.2012,      0.2022,      0.2032,      0.2042,     0.20521,     0.20621,     0.20721,     0.20821,     0.20921,     0.21021,     0.21121,     0.21221,     0.21321,     0.21421,     0.21522,\n",
              "           0.21622,     0.21722,     0.21822,     0.21922,     0.22022,     0.22122,     0.22222,     0.22322,     0.22422,     0.22523,     0.22623,     0.22723,     0.22823,     0.22923,     0.23023,     0.23123,     0.23223,     0.23323,     0.23423,     0.23524,     0.23624,     0.23724,     0.23824,     0.23924,\n",
              "           0.24024,     0.24124,     0.24224,     0.24324,     0.24424,     0.24525,     0.24625,     0.24725,     0.24825,     0.24925,     0.25025,     0.25125,     0.25225,     0.25325,     0.25425,     0.25526,     0.25626,     0.25726,     0.25826,     0.25926,     0.26026,     0.26126,     0.26226,     0.26326,\n",
              "           0.26426,     0.26527,     0.26627,     0.26727,     0.26827,     0.26927,     0.27027,     0.27127,     0.27227,     0.27327,     0.27427,     0.27528,     0.27628,     0.27728,     0.27828,     0.27928,     0.28028,     0.28128,     0.28228,     0.28328,     0.28428,     0.28529,     0.28629,     0.28729,\n",
              "           0.28829,     0.28929,     0.29029,     0.29129,     0.29229,     0.29329,     0.29429,      0.2953,      0.2963,      0.2973,      0.2983,      0.2993,      0.3003,      0.3013,      0.3023,      0.3033,      0.3043,     0.30531,     0.30631,     0.30731,     0.30831,     0.30931,     0.31031,     0.31131,\n",
              "           0.31231,     0.31331,     0.31431,     0.31532,     0.31632,     0.31732,     0.31832,     0.31932,     0.32032,     0.32132,     0.32232,     0.32332,     0.32432,     0.32533,     0.32633,     0.32733,     0.32833,     0.32933,     0.33033,     0.33133,     0.33233,     0.33333,     0.33433,     0.33534,\n",
              "           0.33634,     0.33734,     0.33834,     0.33934,     0.34034,     0.34134,     0.34234,     0.34334,     0.34434,     0.34535,     0.34635,     0.34735,     0.34835,     0.34935,     0.35035,     0.35135,     0.35235,     0.35335,     0.35435,     0.35536,     0.35636,     0.35736,     0.35836,     0.35936,\n",
              "           0.36036,     0.36136,     0.36236,     0.36336,     0.36436,     0.36537,     0.36637,     0.36737,     0.36837,     0.36937,     0.37037,     0.37137,     0.37237,     0.37337,     0.37437,     0.37538,     0.37638,     0.37738,     0.37838,     0.37938,     0.38038,     0.38138,     0.38238,     0.38338,\n",
              "           0.38438,     0.38539,     0.38639,     0.38739,     0.38839,     0.38939,     0.39039,     0.39139,     0.39239,     0.39339,     0.39439,      0.3954,      0.3964,      0.3974,      0.3984,      0.3994,      0.4004,      0.4014,      0.4024,      0.4034,      0.4044,     0.40541,     0.40641,     0.40741,\n",
              "           0.40841,     0.40941,     0.41041,     0.41141,     0.41241,     0.41341,     0.41441,     0.41542,     0.41642,     0.41742,     0.41842,     0.41942,     0.42042,     0.42142,     0.42242,     0.42342,     0.42442,     0.42543,     0.42643,     0.42743,     0.42843,     0.42943,     0.43043,     0.43143,\n",
              "           0.43243,     0.43343,     0.43443,     0.43544,     0.43644,     0.43744,     0.43844,     0.43944,     0.44044,     0.44144,     0.44244,     0.44344,     0.44444,     0.44545,     0.44645,     0.44745,     0.44845,     0.44945,     0.45045,     0.45145,     0.45245,     0.45345,     0.45445,     0.45546,\n",
              "           0.45646,     0.45746,     0.45846,     0.45946,     0.46046,     0.46146,     0.46246,     0.46346,     0.46446,     0.46547,     0.46647,     0.46747,     0.46847,     0.46947,     0.47047,     0.47147,     0.47247,     0.47347,     0.47447,     0.47548,     0.47648,     0.47748,     0.47848,     0.47948,\n",
              "           0.48048,     0.48148,     0.48248,     0.48348,     0.48448,     0.48549,     0.48649,     0.48749,     0.48849,     0.48949,     0.49049,     0.49149,     0.49249,     0.49349,     0.49449,      0.4955,      0.4965,      0.4975,      0.4985,      0.4995,      0.5005,      0.5015,      0.5025,      0.5035,\n",
              "            0.5045,     0.50551,     0.50651,     0.50751,     0.50851,     0.50951,     0.51051,     0.51151,     0.51251,     0.51351,     0.51451,     0.51552,     0.51652,     0.51752,     0.51852,     0.51952,     0.52052,     0.52152,     0.52252,     0.52352,     0.52452,     0.52553,     0.52653,     0.52753,\n",
              "           0.52853,     0.52953,     0.53053,     0.53153,     0.53253,     0.53353,     0.53453,     0.53554,     0.53654,     0.53754,     0.53854,     0.53954,     0.54054,     0.54154,     0.54254,     0.54354,     0.54454,     0.54555,     0.54655,     0.54755,     0.54855,     0.54955,     0.55055,     0.55155,\n",
              "           0.55255,     0.55355,     0.55455,     0.55556,     0.55656,     0.55756,     0.55856,     0.55956,     0.56056,     0.56156,     0.56256,     0.56356,     0.56456,     0.56557,     0.56657,     0.56757,     0.56857,     0.56957,     0.57057,     0.57157,     0.57257,     0.57357,     0.57457,     0.57558,\n",
              "           0.57658,     0.57758,     0.57858,     0.57958,     0.58058,     0.58158,     0.58258,     0.58358,     0.58458,     0.58559,     0.58659,     0.58759,     0.58859,     0.58959,     0.59059,     0.59159,     0.59259,     0.59359,     0.59459,      0.5956,      0.5966,      0.5976,      0.5986,      0.5996,\n",
              "            0.6006,      0.6016,      0.6026,      0.6036,      0.6046,     0.60561,     0.60661,     0.60761,     0.60861,     0.60961,     0.61061,     0.61161,     0.61261,     0.61361,     0.61461,     0.61562,     0.61662,     0.61762,     0.61862,     0.61962,     0.62062,     0.62162,     0.62262,     0.62362,\n",
              "           0.62462,     0.62563,     0.62663,     0.62763,     0.62863,     0.62963,     0.63063,     0.63163,     0.63263,     0.63363,     0.63463,     0.63564,     0.63664,     0.63764,     0.63864,     0.63964,     0.64064,     0.64164,     0.64264,     0.64364,     0.64464,     0.64565,     0.64665,     0.64765,\n",
              "           0.64865,     0.64965,     0.65065,     0.65165,     0.65265,     0.65365,     0.65465,     0.65566,     0.65666,     0.65766,     0.65866,     0.65966,     0.66066,     0.66166,     0.66266,     0.66366,     0.66466,     0.66567,     0.66667,     0.66767,     0.66867,     0.66967,     0.67067,     0.67167,\n",
              "           0.67267,     0.67367,     0.67467,     0.67568,     0.67668,     0.67768,     0.67868,     0.67968,     0.68068,     0.68168,     0.68268,     0.68368,     0.68468,     0.68569,     0.68669,     0.68769,     0.68869,     0.68969,     0.69069,     0.69169,     0.69269,     0.69369,     0.69469,      0.6957,\n",
              "            0.6967,      0.6977,      0.6987,      0.6997,      0.7007,      0.7017,      0.7027,      0.7037,      0.7047,     0.70571,     0.70671,     0.70771,     0.70871,     0.70971,     0.71071,     0.71171,     0.71271,     0.71371,     0.71471,     0.71572,     0.71672,     0.71772,     0.71872,     0.71972,\n",
              "           0.72072,     0.72172,     0.72272,     0.72372,     0.72472,     0.72573,     0.72673,     0.72773,     0.72873,     0.72973,     0.73073,     0.73173,     0.73273,     0.73373,     0.73473,     0.73574,     0.73674,     0.73774,     0.73874,     0.73974,     0.74074,     0.74174,     0.74274,     0.74374,\n",
              "           0.74474,     0.74575,     0.74675,     0.74775,     0.74875,     0.74975,     0.75075,     0.75175,     0.75275,     0.75375,     0.75475,     0.75576,     0.75676,     0.75776,     0.75876,     0.75976,     0.76076,     0.76176,     0.76276,     0.76376,     0.76476,     0.76577,     0.76677,     0.76777,\n",
              "           0.76877,     0.76977,     0.77077,     0.77177,     0.77277,     0.77377,     0.77477,     0.77578,     0.77678,     0.77778,     0.77878,     0.77978,     0.78078,     0.78178,     0.78278,     0.78378,     0.78478,     0.78579,     0.78679,     0.78779,     0.78879,     0.78979,     0.79079,     0.79179,\n",
              "           0.79279,     0.79379,     0.79479,      0.7958,      0.7968,      0.7978,      0.7988,      0.7998,      0.8008,      0.8018,      0.8028,      0.8038,      0.8048,     0.80581,     0.80681,     0.80781,     0.80881,     0.80981,     0.81081,     0.81181,     0.81281,     0.81381,     0.81481,     0.81582,\n",
              "           0.81682,     0.81782,     0.81882,     0.81982,     0.82082,     0.82182,     0.82282,     0.82382,     0.82482,     0.82583,     0.82683,     0.82783,     0.82883,     0.82983,     0.83083,     0.83183,     0.83283,     0.83383,     0.83483,     0.83584,     0.83684,     0.83784,     0.83884,     0.83984,\n",
              "           0.84084,     0.84184,     0.84284,     0.84384,     0.84484,     0.84585,     0.84685,     0.84785,     0.84885,     0.84985,     0.85085,     0.85185,     0.85285,     0.85385,     0.85485,     0.85586,     0.85686,     0.85786,     0.85886,     0.85986,     0.86086,     0.86186,     0.86286,     0.86386,\n",
              "           0.86486,     0.86587,     0.86687,     0.86787,     0.86887,     0.86987,     0.87087,     0.87187,     0.87287,     0.87387,     0.87487,     0.87588,     0.87688,     0.87788,     0.87888,     0.87988,     0.88088,     0.88188,     0.88288,     0.88388,     0.88488,     0.88589,     0.88689,     0.88789,\n",
              "           0.88889,     0.88989,     0.89089,     0.89189,     0.89289,     0.89389,     0.89489,      0.8959,      0.8969,      0.8979,      0.8989,      0.8999,      0.9009,      0.9019,      0.9029,      0.9039,      0.9049,     0.90591,     0.90691,     0.90791,     0.90891,     0.90991,     0.91091,     0.91191,\n",
              "           0.91291,     0.91391,     0.91491,     0.91592,     0.91692,     0.91792,     0.91892,     0.91992,     0.92092,     0.92192,     0.92292,     0.92392,     0.92492,     0.92593,     0.92693,     0.92793,     0.92893,     0.92993,     0.93093,     0.93193,     0.93293,     0.93393,     0.93493,     0.93594,\n",
              "           0.93694,     0.93794,     0.93894,     0.93994,     0.94094,     0.94194,     0.94294,     0.94394,     0.94494,     0.94595,     0.94695,     0.94795,     0.94895,     0.94995,     0.95095,     0.95195,     0.95295,     0.95395,     0.95495,     0.95596,     0.95696,     0.95796,     0.95896,     0.95996,\n",
              "           0.96096,     0.96196,     0.96296,     0.96396,     0.96496,     0.96597,     0.96697,     0.96797,     0.96897,     0.96997,     0.97097,     0.97197,     0.97297,     0.97397,     0.97497,     0.97598,     0.97698,     0.97798,     0.97898,     0.97998,     0.98098,     0.98198,     0.98298,     0.98398,\n",
              "           0.98498,     0.98599,     0.98699,     0.98799,     0.98899,     0.98999,     0.99099,     0.99199,     0.99299,     0.99399,     0.99499,       0.996,       0.997,       0.998,       0.999,           1]), array([[          1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,\n",
              "                  1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,\n",
              "                  1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,\n",
              "                  1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,\n",
              "                  1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,\n",
              "                  1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,\n",
              "                  1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,\n",
              "                  1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,\n",
              "                  1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,\n",
              "                  1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,\n",
              "                  1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,\n",
              "                  1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,\n",
              "                  1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,\n",
              "                  1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,\n",
              "                  1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,\n",
              "                  1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,\n",
              "                  1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,\n",
              "                  1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,\n",
              "                  1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,\n",
              "                  1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,\n",
              "                  1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,\n",
              "                  1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,\n",
              "                  1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,\n",
              "                  1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,\n",
              "                  1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,\n",
              "                  1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,     0.99984,     0.99965,     0.99946,\n",
              "            0.99928,     0.99909,      0.9989,     0.99872,     0.99853,     0.99834,     0.99816,     0.99797,     0.99778,      0.9976,     0.99741,     0.99722,     0.99704,     0.99685,     0.99666,     0.99648,     0.99629,      0.9961,     0.99592,     0.99573,     0.99554,     0.99536,     0.99517,\n",
              "            0.99498,      0.9948,     0.99461,     0.99444,     0.99444,     0.99444,     0.99444,     0.99444,     0.99444,     0.99444,     0.99444,     0.99444,     0.99444,     0.99444,     0.99444,     0.99444,     0.99444,     0.99444,     0.99444,     0.99444,     0.99444,     0.99444,     0.99444,\n",
              "            0.99444,     0.99444,     0.99444,     0.99444,     0.99444,     0.99444,     0.99444,     0.99443,     0.99437,     0.99432,     0.99426,      0.9942,     0.99415,     0.99409,     0.99403,     0.99398,     0.99392,     0.99386,     0.99381,     0.99375,      0.9937,     0.99364,     0.99358,\n",
              "            0.99353,     0.99347,     0.99341,     0.99336,      0.9933,     0.99324,     0.99319,     0.99313,     0.99308,     0.99302,     0.99296,     0.99291,     0.99285,     0.99279,     0.99274,     0.99268,     0.99262,     0.99257,     0.99251,     0.99246,      0.9924,     0.99234,     0.99229,\n",
              "            0.99223,     0.99217,     0.99212,     0.99206,       0.992,     0.99195,     0.99189,     0.99183,     0.99178,     0.99172,     0.99167,     0.99161,     0.99155,      0.9915,     0.99144,     0.99138,     0.99133,     0.99127,     0.99121,     0.99116,      0.9911,     0.99105,     0.99099,\n",
              "            0.99093,     0.99088,     0.99082,     0.99076,     0.99071,     0.99065,     0.99059,     0.99054,     0.99048,     0.99043,     0.99037,     0.99031,     0.99026,      0.9902,     0.99014,     0.99009,     0.99003,     0.98997,     0.98992,     0.98986,     0.98981,     0.98975,     0.98969,\n",
              "            0.98964,     0.98958,     0.98952,     0.98947,     0.98941,     0.98935,      0.9893,     0.98924,     0.98918,     0.98913,     0.98907,     0.98902,     0.98896,      0.9889,     0.98839,     0.98772,     0.98705,     0.98638,     0.98571,     0.98504,     0.98437,      0.9837,     0.98333,\n",
              "            0.98333,     0.98333,     0.98333,     0.98333,     0.98333,     0.98333,     0.98333,     0.98333,     0.98333,     0.98333,     0.98333,     0.98333,     0.98333,     0.98333,     0.98333,     0.98333,     0.98333,     0.98333,     0.98333,     0.98333,     0.98333,     0.98333,     0.98333,\n",
              "            0.98333,     0.98333,     0.98333,     0.98333,     0.98333,     0.98333,     0.98333,     0.98333,     0.98333,     0.98333,     0.98333,     0.98333,      0.9831,     0.98282,     0.98254,     0.98226,     0.98199,     0.98171,     0.98143,     0.98115,     0.98088,      0.9806,     0.98032,\n",
              "            0.98004,     0.97976,     0.97949,     0.97921,     0.97893,     0.97865,     0.97838,      0.9781,     0.97782,      0.9775,     0.97718,     0.97685,     0.97653,      0.9762,     0.97587,     0.97555,     0.97522,      0.9749,     0.97457,     0.97425,     0.97392,      0.9736,     0.97327,\n",
              "            0.97295,     0.97262,     0.97229,     0.97112,     0.96969,     0.96827,     0.96685,     0.96468,      0.9624,      0.9604,     0.95878,     0.95715,      0.9555,     0.95265,     0.94921,     0.94279,     0.93994,     0.93745,     0.93518,     0.93115,     0.91605,      0.9132,     0.90518,\n",
              "            0.90376,     0.90233,     0.90091,     0.89587,     0.88448,     0.87632,     0.87469,     0.87306,     0.87222,     0.87222,     0.87222,     0.87222,      0.8664,     0.86355,     0.86057,     0.85677,     0.85362,     0.85077,     0.83752,     0.82627,     0.82057,     0.79911,     0.79626,\n",
              "            0.79031,     0.78391,     0.77821,     0.77252,      0.7392,     0.72224,     0.70362,     0.69948,     0.68253,     0.66003,     0.64864,      0.6317,     0.62127,     0.60892,      0.5821,     0.56948,     0.55127,     0.52613,     0.50197,     0.47947,     0.46253,     0.44779,     0.42864,\n",
              "            0.39196,     0.38364,     0.36668,     0.31932,     0.29418,     0.27697,     0.24946,     0.23197,     0.21029,     0.18793,     0.18114,     0.16975,     0.15418,     0.13737,     0.13168,     0.12043,      0.1157,     0.11285,     0.10335,    0.092095,    0.083912,    0.066967,    0.048617,\n",
              "           0.045769,    0.042415,    0.038686,    0.035839,    0.033138,    0.031511,    0.029884,    0.028257,    0.021602,    0.018755,    0.015148,    0.010967,    0.010472,   0.0099766,   0.0094815,   0.0089863,   0.0084911,   0.0079959,   0.0075007,   0.0070056,   0.0065104,   0.0060152,           0,\n",
              "                  0,           0,           0,           0,           0,           0,           0,           0,           0,           0,           0,           0,           0,           0,           0,           0,           0,           0,           0,           0,           0,           0,           0,\n",
              "                  0,           0,           0,           0,           0,           0,           0,           0,           0,           0,           0,           0,           0,           0,           0,           0,           0,           0,           0,           0,           0,           0,           0,\n",
              "                  0,           0,           0,           0,           0,           0,           0,           0,           0,           0,           0]]), 'Confidence', 'Recall']]\n",
              "fitness: np.float64(0.836639239445599)\n",
              "keys: ['metrics/precision(B)', 'metrics/recall(B)', 'metrics/mAP50(B)', 'metrics/mAP50-95(B)']\n",
              "maps: array([    0.81912])\n",
              "names: {0: 'license_plate'}\n",
              "plot: True\n",
              "results_dict: {'metrics/precision(B)': np.float64(0.9824291651895672), 'metrics/recall(B)': np.float64(1.0), 'metrics/mAP50(B)': np.float64(0.994271525234341), 'metrics/mAP50-95(B)': np.float64(0.8191245410246276), 'fitness': np.float64(0.836639239445599)}\n",
              "save_dir: PosixPath('runs/detect/train')\n",
              "speed: {'preprocess': 0.3428000999974756, 'inference': 2.4289735277761793, 'loss': 0.0003818888899331796, 'postprocess': 6.166840672219425}\n",
              "task: 'detect'"
            ]
          },
          "metadata": {},
          "execution_count": 16
        }
      ],
      "source": [
        "from ultralytics import YOLO\n",
        "\n",
        "# Load a YOLOv8 model\n",
        "model = YOLO(\"yolov8n.pt\")  # Use 'yolov8s.pt' or 'yolov8m.pt' for better accuracy\n",
        "\n",
        "# Start training\n",
        "model.train(data=\"/content/dataset/config.yaml\", epochs=150, imgsz=640)\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "model_path = \"/content/runs/detect/train2/weights/best.pt\"\n",
        "!cp {model_path} \"/content/drive/MyDrive/yolov8_saved/best.pt\""
      ],
      "metadata": {
        "id": "RthbmOmEWMQF"
      },
      "id": "RthbmOmEWMQF",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "execution_count": 17,
      "id": "-7SJeCvYUhi_",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "-7SJeCvYUhi_",
        "outputId": "3a3e40fd-254f-497d-e978-71e9afc8b27e"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Cleared test folders.\n",
            "Moved 210 images to validation set.\n"
          ]
        }
      ],
      "source": [
        "import os\n",
        "\n",
        "# Paths for validation folders\n",
        "test_img_folder = \"/content/dataset/test/images\"\n",
        "\n",
        "# Function to clear folder contents\n",
        "def clear_folder(folder_path):\n",
        "    for f in os.listdir(folder_path):\n",
        "        file_path = os.path.join(folder_path, f)\n",
        "        if os.path.isfile(file_path):\n",
        "            os.remove(file_path)\n",
        "\n",
        "# Clear validation folders before moving new files\n",
        "clear_folder(test_img_folder)\n",
        "\n",
        "print(\"Cleared test folders.\")\n",
        "\n",
        "# Now move 20% of images from training to validation\n",
        "test_images=os.listdir(\"/content/test/test/test\")\n",
        "val_count = len(test_images)\n",
        "\n",
        "for img in test_images[:val_count]:\n",
        "    shutil.move(f\"/content/test/test/test/{img}\", test_img_folder)\n",
        "\n",
        "print(f\"Moved {val_count} images to validation set.\")\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 18,
      "id": "68c945ee-37e8-4a9d-9fe8-93e51a71f190",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "68c945ee-37e8-4a9d-9fe8-93e51a71f190",
        "outputId": "06a68378-379f-49c4-e243-20d37593ba3d"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "image 1/210 /content/dataset/test/images/1000.jpg: 448x640 1 license_plate, 39.1ms\n",
            "image 2/210 /content/dataset/test/images/1001.jpg: 640x384 1 license_plate, 47.3ms\n",
            "image 3/210 /content/dataset/test/images/1002.jpg: 640x480 1 license_plate, 38.0ms\n",
            "image 4/210 /content/dataset/test/images/1003.jpg: 384x640 1 license_plate, 34.5ms\n",
            "image 5/210 /content/dataset/test/images/1004.jpg: 640x384 1 license_plate, 7.4ms\n",
            "image 6/210 /content/dataset/test/images/1005.jpg: 640x384 1 license_plate, 6.8ms\n",
            "image 7/210 /content/dataset/test/images/1006.jpg: 640x480 1 license_plate, 7.0ms\n",
            "image 8/210 /content/dataset/test/images/1007.jpg: 640x384 1 license_plate, 7.0ms\n",
            "image 9/210 /content/dataset/test/images/1008.jpg: 384x640 1 license_plate, 7.9ms\n",
            "image 10/210 /content/dataset/test/images/1009.jpg: 384x640 1 license_plate, 6.7ms\n",
            "image 11/210 /content/dataset/test/images/1010.jpg: 640x384 1 license_plate, 9.3ms\n",
            "image 12/210 /content/dataset/test/images/1011.jpg: 640x384 1 license_plate, 8.1ms\n",
            "image 13/210 /content/dataset/test/images/1012.jpg: 480x640 1 license_plate, 36.9ms\n",
            "image 14/210 /content/dataset/test/images/1013.jpg: 640x480 1 license_plate, 7.1ms\n",
            "image 15/210 /content/dataset/test/images/1014.jpg: 480x640 1 license_plate, 7.0ms\n",
            "image 16/210 /content/dataset/test/images/1015.jpg: 480x640 1 license_plate, 6.1ms\n",
            "image 17/210 /content/dataset/test/images/1016.jpg: 480x640 1 license_plate, 6.4ms\n",
            "image 18/210 /content/dataset/test/images/1017.jpg: 384x640 1 license_plate, 7.2ms\n",
            "image 19/210 /content/dataset/test/images/1018.jpg: 480x640 1 license_plate, 7.0ms\n",
            "image 20/210 /content/dataset/test/images/1019.jpg: 384x640 1 license_plate, 7.1ms\n",
            "image 21/210 /content/dataset/test/images/1020.jpg: 640x480 1 license_plate, 6.7ms\n",
            "image 22/210 /content/dataset/test/images/1021.jpg: 640x384 1 license_plate, 7.4ms\n",
            "image 23/210 /content/dataset/test/images/1022.jpg: 384x640 1 license_plate, 7.0ms\n",
            "image 24/210 /content/dataset/test/images/1023.jpg: 384x640 1 license_plate, 6.6ms\n",
            "image 25/210 /content/dataset/test/images/1024.jpg: 384x640 1 license_plate, 9.7ms\n",
            "image 26/210 /content/dataset/test/images/1025.jpg: 640x480 1 license_plate, 8.7ms\n",
            "image 27/210 /content/dataset/test/images/1026.jpg: 640x480 1 license_plate, 7.2ms\n",
            "image 28/210 /content/dataset/test/images/1027.jpg: 384x640 1 license_plate, 8.5ms\n",
            "image 29/210 /content/dataset/test/images/1028.jpg: 640x480 1 license_plate, 7.3ms\n",
            "image 30/210 /content/dataset/test/images/1029.jpg: 384x640 1 license_plate, 6.8ms\n",
            "image 31/210 /content/dataset/test/images/1030.jpg: 384x640 1 license_plate, 10.8ms\n",
            "image 32/210 /content/dataset/test/images/1031.jpg: 480x640 1 license_plate, 10.0ms\n",
            "image 33/210 /content/dataset/test/images/1032.jpg: 640x480 1 license_plate, 8.3ms\n",
            "image 34/210 /content/dataset/test/images/1033.jpg: 480x640 1 license_plate, 7.0ms\n",
            "image 35/210 /content/dataset/test/images/1034.jpg: 640x480 1 license_plate, 7.9ms\n",
            "image 36/210 /content/dataset/test/images/1035.jpg: 640x480 1 license_plate, 6.2ms\n",
            "image 37/210 /content/dataset/test/images/1036.jpg: 640x480 1 license_plate, 6.5ms\n",
            "image 38/210 /content/dataset/test/images/1037.jpg: 384x640 1 license_plate, 6.9ms\n",
            "image 39/210 /content/dataset/test/images/1038.jpg: 640x384 1 license_plate, 7.9ms\n",
            "image 40/210 /content/dataset/test/images/1039.jpg: 384x640 1 license_plate, 9.1ms\n",
            "image 41/210 /content/dataset/test/images/1040.jpg: 640x480 1 license_plate, 6.8ms\n",
            "image 42/210 /content/dataset/test/images/1041.jpg: 384x640 1 license_plate, 6.9ms\n",
            "image 43/210 /content/dataset/test/images/1042.jpg: 384x640 1 license_plate, 7.6ms\n",
            "image 44/210 /content/dataset/test/images/1043.jpg: 640x544 1 license_plate, 35.9ms\n",
            "image 45/210 /content/dataset/test/images/1044.jpg: 640x480 1 license_plate, 7.1ms\n",
            "image 46/210 /content/dataset/test/images/1045.jpg: 480x640 1 license_plate, 7.2ms\n",
            "image 47/210 /content/dataset/test/images/1046.jpg: 640x480 1 license_plate, 6.8ms\n",
            "image 48/210 /content/dataset/test/images/1047.jpg: 480x640 1 license_plate, 6.7ms\n",
            "image 49/210 /content/dataset/test/images/1048.jpg: 480x640 1 license_plate, 7.5ms\n",
            "image 50/210 /content/dataset/test/images/1049.jpg: 640x480 1 license_plate, 7.0ms\n",
            "image 51/210 /content/dataset/test/images/1050.jpg: 512x640 1 license_plate, 37.4ms\n",
            "image 52/210 /content/dataset/test/images/1051.jpg: 416x640 1 license_plate, 36.0ms\n",
            "image 53/210 /content/dataset/test/images/1052.jpg: 384x640 2 license_plates, 7.4ms\n",
            "image 54/210 /content/dataset/test/images/1053.jpg: 640x480 1 license_plate, 7.7ms\n",
            "image 55/210 /content/dataset/test/images/1054.jpg: 384x640 1 license_plate, 7.4ms\n",
            "image 56/210 /content/dataset/test/images/1055.jpg: 640x384 1 license_plate, 7.4ms\n",
            "image 57/210 /content/dataset/test/images/1056.jpg: 640x480 1 license_plate, 6.9ms\n",
            "image 58/210 /content/dataset/test/images/1057.jpg: 640x544 1 license_plate, 8.0ms\n",
            "image 59/210 /content/dataset/test/images/1058.jpg: 384x640 1 license_plate, 6.9ms\n",
            "image 60/210 /content/dataset/test/images/1059.jpg: 384x640 1 license_plate, 6.3ms\n",
            "image 61/210 /content/dataset/test/images/1060.jpg: 640x416 1 license_plate, 36.6ms\n",
            "image 62/210 /content/dataset/test/images/1061.jpg: 640x384 1 license_plate, 7.3ms\n",
            "image 63/210 /content/dataset/test/images/1062.jpg: 384x640 1 license_plate, 6.9ms\n",
            "image 64/210 /content/dataset/test/images/1063.jpg: 640x480 1 license_plate, 8.2ms\n",
            "image 65/210 /content/dataset/test/images/1064.jpg: 640x384 1 license_plate, 7.2ms\n",
            "image 66/210 /content/dataset/test/images/1065.jpg: 640x544 1 license_plate, 7.9ms\n",
            "image 67/210 /content/dataset/test/images/1066.jpg: 640x544 1 license_plate, 7.1ms\n",
            "image 68/210 /content/dataset/test/images/1067.jpg: 640x480 1 license_plate, 6.8ms\n",
            "image 69/210 /content/dataset/test/images/1068.jpg: 480x640 1 license_plate, 6.7ms\n",
            "image 70/210 /content/dataset/test/images/1069.jpg: 384x640 1 license_plate, 7.4ms\n",
            "image 71/210 /content/dataset/test/images/1070.jpg: 640x384 1 license_plate, 6.9ms\n",
            "image 72/210 /content/dataset/test/images/1071.jpg: 640x480 1 license_plate, 8.9ms\n",
            "image 73/210 /content/dataset/test/images/1072.jpg: 480x640 1 license_plate, 7.6ms\n",
            "image 74/210 /content/dataset/test/images/1073.jpg: 448x640 1 license_plate, 7.8ms\n",
            "image 75/210 /content/dataset/test/images/1074.jpg: 480x640 1 license_plate, 7.0ms\n",
            "image 76/210 /content/dataset/test/images/1075.jpg: 640x480 1 license_plate, 6.8ms\n",
            "image 77/210 /content/dataset/test/images/1076.jpg: 640x480 1 license_plate, 6.2ms\n",
            "image 78/210 /content/dataset/test/images/1077.jpg: 480x640 1 license_plate, 6.8ms\n",
            "image 79/210 /content/dataset/test/images/1078.jpg: 640x480 1 license_plate, 6.9ms\n",
            "image 80/210 /content/dataset/test/images/1079.jpg: 640x384 1 license_plate, 9.0ms\n",
            "image 81/210 /content/dataset/test/images/1080.jpg: 640x480 1 license_plate, 6.9ms\n",
            "image 82/210 /content/dataset/test/images/1081.jpg: 640x480 1 license_plate, 6.9ms\n",
            "image 83/210 /content/dataset/test/images/1082.jpg: 640x480 1 license_plate, 6.3ms\n",
            "image 84/210 /content/dataset/test/images/1083.jpg: 640x480 1 license_plate, 6.5ms\n",
            "image 85/210 /content/dataset/test/images/1084.jpg: 480x640 1 license_plate, 6.9ms\n",
            "image 86/210 /content/dataset/test/images/1085.jpg: 640x480 1 license_plate, 11.9ms\n",
            "image 87/210 /content/dataset/test/images/1086.jpg: 384x640 1 license_plate, 9.1ms\n",
            "image 88/210 /content/dataset/test/images/1087.jpg: 640x512 1 license_plate, 34.1ms\n",
            "image 89/210 /content/dataset/test/images/1088.jpg: 384x640 1 license_plate, 7.1ms\n",
            "image 90/210 /content/dataset/test/images/1089.jpg: 384x640 1 license_plate, 6.7ms\n",
            "image 91/210 /content/dataset/test/images/1090.jpg: 640x480 1 license_plate, 7.3ms\n",
            "image 92/210 /content/dataset/test/images/1091.jpg: 384x640 1 license_plate, 7.2ms\n",
            "image 93/210 /content/dataset/test/images/1092.jpg: 384x640 1 license_plate, 7.1ms\n",
            "image 94/210 /content/dataset/test/images/1093.jpg: 640x384 1 license_plate, 7.7ms\n",
            "image 95/210 /content/dataset/test/images/1094.jpg: 480x640 1 license_plate, 6.9ms\n",
            "image 96/210 /content/dataset/test/images/1095.jpg: 512x640 1 license_plate, 6.8ms\n",
            "image 97/210 /content/dataset/test/images/1096.jpg: 480x640 1 license_plate, 7.6ms\n",
            "image 98/210 /content/dataset/test/images/1098.jpg: 384x640 (no detections), 6.8ms\n",
            "image 99/210 /content/dataset/test/images/1099.jpg: 480x640 1 license_plate, 6.8ms\n",
            "image 100/210 /content/dataset/test/images/1100.jpg: 384x640 1 license_plate, 6.8ms\n",
            "image 101/210 /content/dataset/test/images/1101.jpg: 480x640 1 license_plate, 7.6ms\n",
            "image 102/210 /content/dataset/test/images/1102.jpg: 640x480 1 license_plate, 6.9ms\n",
            "image 103/210 /content/dataset/test/images/1103.jpg: 480x640 1 license_plate, 7.3ms\n",
            "image 104/210 /content/dataset/test/images/1104.jpg: 640x384 1 license_plate, 6.9ms\n",
            "image 105/210 /content/dataset/test/images/1105.jpg: 640x480 1 license_plate, 7.6ms\n",
            "image 106/210 /content/dataset/test/images/1106.jpg: 640x480 1 license_plate, 6.4ms\n",
            "image 107/210 /content/dataset/test/images/1107.jpg: 480x640 1 license_plate, 8.2ms\n",
            "image 108/210 /content/dataset/test/images/1108.jpg: 480x640 1 license_plate, 6.4ms\n",
            "image 109/210 /content/dataset/test/images/1109.jpg: 640x384 1 license_plate, 7.1ms\n",
            "image 110/210 /content/dataset/test/images/1110.jpg: 640x480 1 license_plate, 8.8ms\n",
            "image 111/210 /content/dataset/test/images/1111.jpg: 640x384 1 license_plate, 7.1ms\n",
            "image 112/210 /content/dataset/test/images/1112.jpg: 640x480 1 license_plate, 6.9ms\n",
            "image 113/210 /content/dataset/test/images/1113.jpg: 384x640 1 license_plate, 6.8ms\n",
            "image 114/210 /content/dataset/test/images/901.jpg: 640x480 1 license_plate, 6.9ms\n",
            "image 115/210 /content/dataset/test/images/902.jpg: 384x640 1 license_plate, 6.9ms\n",
            "image 116/210 /content/dataset/test/images/903.jpg: 640x480 1 license_plate, 6.7ms\n",
            "image 117/210 /content/dataset/test/images/904.jpg: 384x640 1 license_plate, 6.8ms\n",
            "image 118/210 /content/dataset/test/images/905.jpg: 640x480 1 license_plate, 7.3ms\n",
            "image 119/210 /content/dataset/test/images/906.jpg: 384x640 1 license_plate, 6.9ms\n",
            "image 120/210 /content/dataset/test/images/907.jpg: 640x480 1 license_plate, 6.8ms\n",
            "image 121/210 /content/dataset/test/images/908.jpg: 384x640 1 license_plate, 8.1ms\n",
            "image 122/210 /content/dataset/test/images/909.jpg: 640x480 1 license_plate, 7.6ms\n",
            "image 123/210 /content/dataset/test/images/910.jpg: 384x640 1 license_plate, 7.5ms\n",
            "image 124/210 /content/dataset/test/images/911.jpg: 640x480 1 license_plate, 7.0ms\n",
            "image 125/210 /content/dataset/test/images/912.jpg: 384x640 1 license_plate, 6.7ms\n",
            "image 126/210 /content/dataset/test/images/913.jpg: 480x640 1 license_plate, 8.0ms\n",
            "image 127/210 /content/dataset/test/images/914.jpg: 384x640 1 license_plate, 6.9ms\n",
            "image 128/210 /content/dataset/test/images/915.jpg: 384x640 1 license_plate, 6.2ms\n",
            "image 129/210 /content/dataset/test/images/917.jpg: 480x640 1 license_plate, 7.5ms\n",
            "image 130/210 /content/dataset/test/images/918.jpg: 480x640 1 license_plate, 7.3ms\n",
            "image 131/210 /content/dataset/test/images/919.jpg: 384x640 1 license_plate, 7.8ms\n",
            "image 132/210 /content/dataset/test/images/920.jpg: 384x640 1 license_plate, 7.2ms\n",
            "image 133/210 /content/dataset/test/images/921.jpg: 480x640 2 license_plates, 7.9ms\n",
            "image 134/210 /content/dataset/test/images/922.jpg: 640x640 1 license_plate, 7.8ms\n",
            "image 135/210 /content/dataset/test/images/923.jpg: 640x480 1 license_plate, 6.8ms\n",
            "image 136/210 /content/dataset/test/images/924.jpg: 480x640 1 license_plate, 6.9ms\n",
            "image 137/210 /content/dataset/test/images/925.jpg: 640x384 1 license_plate, 7.1ms\n",
            "image 138/210 /content/dataset/test/images/926.jpg: 640x512 1 license_plate, 7.5ms\n",
            "image 139/210 /content/dataset/test/images/927.jpg: 640x480 1 license_plate, 6.7ms\n",
            "image 140/210 /content/dataset/test/images/928.jpg: 480x640 1 license_plate, 6.7ms\n",
            "image 141/210 /content/dataset/test/images/929.jpg: 480x640 1 license_plate, 8.4ms\n",
            "image 142/210 /content/dataset/test/images/930.jpg: 448x640 1 license_plate, 7.0ms\n",
            "image 143/210 /content/dataset/test/images/931.jpg: 480x640 (no detections), 6.8ms\n",
            "image 144/210 /content/dataset/test/images/932.jpg: 640x480 1 license_plate, 6.7ms\n",
            "image 145/210 /content/dataset/test/images/933.jpg: 640x480 1 license_plate, 6.0ms\n",
            "image 146/210 /content/dataset/test/images/934.jpg: 384x640 1 license_plate, 6.8ms\n",
            "image 147/210 /content/dataset/test/images/935.jpg: 640x480 1 license_plate, 12.3ms\n",
            "image 148/210 /content/dataset/test/images/936.jpg: 384x640 1 license_plate, 7.2ms\n",
            "image 149/210 /content/dataset/test/images/937.jpg: 480x640 1 license_plate, 7.0ms\n",
            "image 150/210 /content/dataset/test/images/938.jpg: 640x576 1 license_plate, 35.0ms\n",
            "image 151/210 /content/dataset/test/images/939.jpg: 480x640 1 license_plate, 6.9ms\n",
            "image 152/210 /content/dataset/test/images/940.jpg: 448x640 1 license_plate, 6.7ms\n",
            "image 153/210 /content/dataset/test/images/941.jpg: 480x640 1 license_plate, 6.7ms\n",
            "image 154/210 /content/dataset/test/images/942.jpg: 384x640 1 license_plate, 7.9ms\n",
            "image 155/210 /content/dataset/test/images/943.jpg: 640x576 1 license_plate, 9.1ms\n",
            "image 156/210 /content/dataset/test/images/944.jpg: 640x480 1 license_plate, 8.8ms\n",
            "image 157/210 /content/dataset/test/images/945.jpg: 384x640 1 license_plate, 6.9ms\n",
            "image 158/210 /content/dataset/test/images/946.jpg: 480x640 1 license_plate, 6.7ms\n",
            "image 159/210 /content/dataset/test/images/947.jpg: 640x384 1 license_plate, 8.0ms\n",
            "image 160/210 /content/dataset/test/images/948.jpg: 384x640 1 license_plate, 6.9ms\n",
            "image 161/210 /content/dataset/test/images/949.jpg: 640x384 1 license_plate, 7.2ms\n",
            "image 162/210 /content/dataset/test/images/950.jpg: 480x640 1 license_plate, 6.7ms\n",
            "image 163/210 /content/dataset/test/images/951.jpg: 384x640 1 license_plate, 7.3ms\n",
            "image 164/210 /content/dataset/test/images/952.jpg: 384x640 1 license_plate, 6.5ms\n",
            "image 165/210 /content/dataset/test/images/953.jpg: 480x640 1 license_plate, 7.0ms\n",
            "image 166/210 /content/dataset/test/images/954.jpg: 384x640 1 license_plate, 7.0ms\n",
            "image 167/210 /content/dataset/test/images/955.jpg: 640x384 1 license_plate, 8.6ms\n",
            "image 168/210 /content/dataset/test/images/956.jpg: 384x640 1 license_plate, 6.7ms\n",
            "image 169/210 /content/dataset/test/images/957.jpg: 384x640 1 license_plate, 6.2ms\n",
            "image 170/210 /content/dataset/test/images/958.jpg: 384x640 1 license_plate, 6.5ms\n",
            "image 171/210 /content/dataset/test/images/959.jpg: 640x384 1 license_plate, 7.4ms\n",
            "image 172/210 /content/dataset/test/images/960.jpg: 416x640 1 license_plate, 7.1ms\n",
            "image 173/210 /content/dataset/test/images/961.jpg: 640x480 1 license_plate, 7.0ms\n",
            "image 174/210 /content/dataset/test/images/962.jpg: 384x640 1 license_plate, 6.8ms\n",
            "image 175/210 /content/dataset/test/images/963.jpg: 384x640 (no detections), 6.6ms\n",
            "image 176/210 /content/dataset/test/images/964.jpg: 480x640 1 license_plate, 6.9ms\n",
            "image 177/210 /content/dataset/test/images/965.jpg: 640x480 1 license_plate, 6.8ms\n",
            "image 178/210 /content/dataset/test/images/966.jpg: 480x640 1 license_plate, 6.7ms\n",
            "image 179/210 /content/dataset/test/images/967.jpg: 640x480 1 license_plate, 8.4ms\n",
            "image 180/210 /content/dataset/test/images/968.jpg: 640x480 1 license_plate, 6.3ms\n",
            "image 181/210 /content/dataset/test/images/969.jpg: 640x480 1 license_plate, 6.4ms\n",
            "image 182/210 /content/dataset/test/images/970.jpg: 384x640 1 license_plate, 7.0ms\n",
            "image 183/210 /content/dataset/test/images/971.jpg: 480x640 1 license_plate, 7.5ms\n",
            "image 184/210 /content/dataset/test/images/972.jpg: 480x640 1 license_plate, 6.2ms\n",
            "image 185/210 /content/dataset/test/images/973.jpg: 640x480 1 license_plate, 6.8ms\n",
            "image 186/210 /content/dataset/test/images/974.jpg: 448x640 1 license_plate, 6.9ms\n",
            "image 187/210 /content/dataset/test/images/975.jpg: 640x384 1 license_plate, 11.1ms\n",
            "image 188/210 /content/dataset/test/images/976.jpg: 480x640 1 license_plate, 6.9ms\n",
            "image 189/210 /content/dataset/test/images/977.jpg: 480x640 1 license_plate, 6.3ms\n",
            "image 190/210 /content/dataset/test/images/978.jpg: 384x640 1 license_plate, 6.8ms\n",
            "image 191/210 /content/dataset/test/images/979.jpg: 480x640 1 license_plate, 6.8ms\n",
            "image 192/210 /content/dataset/test/images/981.jpg: 448x640 1 license_plate, 7.6ms\n",
            "image 193/210 /content/dataset/test/images/982.jpg: 640x384 1 license_plate, 7.2ms\n",
            "image 194/210 /content/dataset/test/images/983.jpg: 480x640 1 license_plate, 6.6ms\n",
            "image 195/210 /content/dataset/test/images/984.jpg: 480x640 1 license_plate, 6.0ms\n",
            "image 196/210 /content/dataset/test/images/985.jpg: 640x480 1 license_plate, 7.3ms\n",
            "image 197/210 /content/dataset/test/images/986.jpg: 480x640 1 license_plate, 6.8ms\n",
            "image 198/210 /content/dataset/test/images/987.jpg: 480x640 1 license_plate, 6.3ms\n",
            "image 199/210 /content/dataset/test/images/988.jpg: 640x480 1 license_plate, 6.6ms\n",
            "image 200/210 /content/dataset/test/images/989.jpg: 384x640 1 license_plate, 7.6ms\n",
            "image 201/210 /content/dataset/test/images/990.jpg: 640x480 1 license_plate, 6.7ms\n",
            "image 202/210 /content/dataset/test/images/991.jpg: 480x640 1 license_plate, 8.0ms\n",
            "image 203/210 /content/dataset/test/images/992.jpg: 640x480 1 license_plate, 6.7ms\n",
            "image 204/210 /content/dataset/test/images/993.jpg: 640x384 1 license_plate, 7.6ms\n",
            "image 205/210 /content/dataset/test/images/994.jpg: 640x480 1 license_plate, 6.8ms\n",
            "image 206/210 /content/dataset/test/images/995.jpg: 480x640 1 license_plate, 7.0ms\n",
            "image 207/210 /content/dataset/test/images/996.jpg: 480x640 1 license_plate, 6.3ms\n",
            "image 208/210 /content/dataset/test/images/997.jpg: 640x480 1 license_plate, 13.6ms\n",
            "image 209/210 /content/dataset/test/images/998.jpg: 640x480 1 license_plate, 6.2ms\n",
            "image 210/210 /content/dataset/test/images/999.jpg: 384x640 1 license_plate, 7.1ms\n",
            "Speed: 2.2ms preprocess, 8.9ms inference, 1.4ms postprocess per image at shape (1, 3, 384, 640)\n",
            "Results saved to \u001b[1mruns/detect/train2\u001b[0m\n",
            "Detection completed on test set.\n"
          ]
        }
      ],
      "source": [
        "results = model.predict(source=\"/content/dataset/test/images\", save=True, conf=0.8)\n",
        "print(\"Detection completed on test set.\")\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 19,
      "id": "69b362fa-adcd-45ee-a56c-6857da7ef490",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "69b362fa-adcd-45ee-a56c-6857da7ef490",
        "outputId": "25b96ff3-a2cb-444c-f641-143442d797b8"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "✅ Plates cropped from test images.\n"
          ]
        }
      ],
      "source": [
        "def crop_plates(results, save_dir=\"dataset/test/cropped_plates\"):\n",
        "    os.makedirs(save_dir, exist_ok=True)\n",
        "    for i, result in enumerate(results):\n",
        "        img = cv2.imread(result.path)\n",
        "        for j, box in enumerate(result.boxes.xyxy):\n",
        "            x1, y1, x2, y2 = map(int, box)\n",
        "            cropped = img[y1:y2, x1:x2]\n",
        "            cv2.imwrite(f\"{save_dir}/plate_{i}_{j}.jpg\", cropped)\n",
        "\n",
        "crop_plates(results)\n",
        "print(\"✅ Plates cropped from test images.\")\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install easyocr"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "yA3c5tRhZ37f",
        "outputId": "e123b4bf-29ab-4d0c-9e9b-3fdce5181ded"
      },
      "id": "yA3c5tRhZ37f",
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Collecting easyocr\n",
            "  Downloading easyocr-1.7.2-py3-none-any.whl.metadata (10 kB)\n",
            "Requirement already satisfied: torch in /usr/local/lib/python3.11/dist-packages (from easyocr) (2.6.0+cu124)\n",
            "Requirement already satisfied: torchvision>=0.5 in /usr/local/lib/python3.11/dist-packages (from easyocr) (0.21.0+cu124)\n",
            "Requirement already satisfied: opencv-python-headless in /usr/local/lib/python3.11/dist-packages (from easyocr) (4.11.0.86)\n",
            "Requirement already satisfied: scipy in /usr/local/lib/python3.11/dist-packages (from easyocr) (1.15.3)\n",
            "Requirement already satisfied: numpy in /usr/local/lib/python3.11/dist-packages (from easyocr) (2.0.2)\n",
            "Requirement already satisfied: Pillow in /usr/local/lib/python3.11/dist-packages (from easyocr) (11.2.1)\n",
            "Requirement already satisfied: scikit-image in /usr/local/lib/python3.11/dist-packages (from easyocr) (0.25.2)\n",
            "Collecting python-bidi (from easyocr)\n",
            "  Downloading python_bidi-0.6.6-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (4.9 kB)\n",
            "Requirement already satisfied: PyYAML in /usr/local/lib/python3.11/dist-packages (from easyocr) (6.0.2)\n",
            "Requirement already satisfied: Shapely in /usr/local/lib/python3.11/dist-packages (from easyocr) (2.1.1)\n",
            "Collecting pyclipper (from easyocr)\n",
            "  Downloading pyclipper-1.3.0.post6-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (9.0 kB)\n",
            "Collecting ninja (from easyocr)\n",
            "  Downloading ninja-1.11.1.4-py3-none-manylinux_2_12_x86_64.manylinux2010_x86_64.whl.metadata (5.0 kB)\n",
            "Requirement already satisfied: filelock in /usr/local/lib/python3.11/dist-packages (from torch->easyocr) (3.18.0)\n",
            "Requirement already satisfied: typing-extensions>=4.10.0 in /usr/local/lib/python3.11/dist-packages (from torch->easyocr) (4.13.2)\n",
            "Requirement already satisfied: networkx in /usr/local/lib/python3.11/dist-packages (from torch->easyocr) (3.4.2)\n",
            "Requirement already satisfied: jinja2 in /usr/local/lib/python3.11/dist-packages (from torch->easyocr) (3.1.6)\n",
            "Requirement already satisfied: fsspec in /usr/local/lib/python3.11/dist-packages (from torch->easyocr) (2025.3.2)\n",
            "Requirement already satisfied: nvidia-cuda-nvrtc-cu12==12.4.127 in /usr/local/lib/python3.11/dist-packages (from torch->easyocr) (12.4.127)\n",
            "Requirement already satisfied: nvidia-cuda-runtime-cu12==12.4.127 in /usr/local/lib/python3.11/dist-packages (from torch->easyocr) (12.4.127)\n",
            "Requirement already satisfied: nvidia-cuda-cupti-cu12==12.4.127 in /usr/local/lib/python3.11/dist-packages (from torch->easyocr) (12.4.127)\n",
            "Requirement already satisfied: nvidia-cudnn-cu12==9.1.0.70 in /usr/local/lib/python3.11/dist-packages (from torch->easyocr) (9.1.0.70)\n",
            "Requirement already satisfied: nvidia-cublas-cu12==12.4.5.8 in /usr/local/lib/python3.11/dist-packages (from torch->easyocr) (12.4.5.8)\n",
            "Requirement already satisfied: nvidia-cufft-cu12==11.2.1.3 in /usr/local/lib/python3.11/dist-packages (from torch->easyocr) (11.2.1.3)\n",
            "Requirement already satisfied: nvidia-curand-cu12==10.3.5.147 in /usr/local/lib/python3.11/dist-packages (from torch->easyocr) (10.3.5.147)\n",
            "Requirement already satisfied: nvidia-cusolver-cu12==11.6.1.9 in /usr/local/lib/python3.11/dist-packages (from torch->easyocr) (11.6.1.9)\n",
            "Requirement already satisfied: nvidia-cusparse-cu12==12.3.1.170 in /usr/local/lib/python3.11/dist-packages (from torch->easyocr) (12.3.1.170)\n",
            "Requirement already satisfied: nvidia-cusparselt-cu12==0.6.2 in /usr/local/lib/python3.11/dist-packages (from torch->easyocr) (0.6.2)\n",
            "Requirement already satisfied: nvidia-nccl-cu12==2.21.5 in /usr/local/lib/python3.11/dist-packages (from torch->easyocr) (2.21.5)\n",
            "Requirement already satisfied: nvidia-nvtx-cu12==12.4.127 in /usr/local/lib/python3.11/dist-packages (from torch->easyocr) (12.4.127)\n",
            "Requirement already satisfied: nvidia-nvjitlink-cu12==12.4.127 in /usr/local/lib/python3.11/dist-packages (from torch->easyocr) (12.4.127)\n",
            "Requirement already satisfied: triton==3.2.0 in /usr/local/lib/python3.11/dist-packages (from torch->easyocr) (3.2.0)\n",
            "Requirement already satisfied: sympy==1.13.1 in /usr/local/lib/python3.11/dist-packages (from torch->easyocr) (1.13.1)\n",
            "Requirement already satisfied: mpmath<1.4,>=1.1.0 in /usr/local/lib/python3.11/dist-packages (from sympy==1.13.1->torch->easyocr) (1.3.0)\n",
            "Requirement already satisfied: imageio!=2.35.0,>=2.33 in /usr/local/lib/python3.11/dist-packages (from scikit-image->easyocr) (2.37.0)\n",
            "Requirement already satisfied: tifffile>=2022.8.12 in /usr/local/lib/python3.11/dist-packages (from scikit-image->easyocr) (2025.5.21)\n",
            "Requirement already satisfied: packaging>=21 in /usr/local/lib/python3.11/dist-packages (from scikit-image->easyocr) (24.2)\n",
            "Requirement already satisfied: lazy-loader>=0.4 in /usr/local/lib/python3.11/dist-packages (from scikit-image->easyocr) (0.4)\n",
            "Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.11/dist-packages (from jinja2->torch->easyocr) (3.0.2)\n",
            "Downloading easyocr-1.7.2-py3-none-any.whl (2.9 MB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m2.9/2.9 MB\u001b[0m \u001b[31m40.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading ninja-1.11.1.4-py3-none-manylinux_2_12_x86_64.manylinux2010_x86_64.whl (422 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m422.8/422.8 kB\u001b[0m \u001b[31m40.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading pyclipper-1.3.0.post6-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (969 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m969.6/969.6 kB\u001b[0m \u001b[31m69.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading python_bidi-0.6.6-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (292 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m292.9/292.9 kB\u001b[0m \u001b[31m35.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hInstalling collected packages: python-bidi, pyclipper, ninja, easyocr\n",
            "Successfully installed easyocr-1.7.2 ninja-1.11.1.4 pyclipper-1.3.0.post6 python-bidi-0.6.6\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import re\n",
        "import os\n",
        "import easyocr\n",
        "\n",
        "def clean_text(raw_text):\n",
        "\n",
        "    parts = re.split(r'([\\u0600-\\u06FF]+|\\d+)', raw_text)\n",
        "\n",
        "    new_parts = []\n",
        "    for part in parts:\n",
        "        if re.fullmatch(r'[\\u0600-\\u06FF]+', part):\n",
        "            new_parts.append('T')\n",
        "        else:\n",
        "            new_parts.append(part)\n",
        "\n",
        "    return ''.join(new_parts)\n",
        "\n",
        "plate_folder = \"dataset/test/cropped_plates\"\n",
        "reader = easyocr.Reader(['ur', 'en'])\n",
        "ocr_output = {}\n",
        "\n",
        "for img_name in os.listdir(plate_folder):\n",
        "    img_path = os.path.join(plate_folder, img_name)\n",
        "    try:\n",
        "        result = reader.readtext(img_path)\n",
        "\n",
        "        full_text = ''.join([text[1] for text in result])\n",
        "        cleaned_text = clean_text(full_text)\n",
        "        ocr_output[img_name] = cleaned_text\n",
        "    except Exception as e:\n",
        "        print(f\"Error processing {img_name}: {e}\")\n",
        "\n",
        "print(\"Cleaned OCR Output:\")\n",
        "for name, text in ocr_output.items():\n",
        "    print(f\"{name}: {text}\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "EIUXooKucNwr",
        "outputId": "6dc14107-7d4f-416d-e0e3-5de9cd9f7d60"
      },
      "id": "EIUXooKucNwr",
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "WARNING:easyocr.easyocr:Downloading detection model, please wait. This may take several minutes depending upon your network connection.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Progress: |██████████████████████████████████████████████████| 100.0% Complete"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "WARNING:easyocr.easyocr:Downloading recognition model, please wait. This may take several minutes depending upon your network connection.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Progress: |██████████████████████████████████████████████████| 100.0% CompleteCleaned OCR Output:\n",
            "plate_145_0.jpg: T 1424034\n",
            "plate_170_0.jpg: 4041 T160\n",
            "plate_207_0.jpg: 7878 T 165\n",
            "plate_161_0.jpg: 1714 T 140\n",
            "plate_147_0.jpg: 4636 T 90\n",
            "plate_5_0.jpg: [~/ 55٥\n",
            "plate_187_0.jpg: 3517 T 110\n",
            "plate_166_0.jpg: 5633 T 112-\n",
            "plate_165_0.jpg: T 1029407\n",
            "plate_39_0.jpg: 14[659\n",
            "plate_182_0.jpg: 121T237\n",
            "plate_162_0.jpg: 1409240\n",
            "plate_105_0.jpg: 105T\n",
            "plate_50_0.jpg: T176?138\n",
            "plate_8_0.jpg: 1٥4T9416\n",
            "plate_193_0.jpg: 7083 T 188\n",
            "plate_29_0.jpg: 1093 T 15\n",
            "plate_12_0.jpg: 77\n",
            "plate_45_0.jpg: 9734 T 62\n",
            "plate_17_0.jpg: |6149 T 182\n",
            "plate_25_0.jpg: 38[9   T 152\n",
            "plate_180_0.jpg: |165T7119\n",
            "plate_85_0.jpg: 6302 T 172\n",
            "plate_185_0.jpg: .37T.3019.\n",
            "plate_133_0.jpg: 3230 T 161 |\n",
            "plate_48_0.jpg: 194735\n",
            "plate_188_0.jpg: 7229 T 179\n",
            "plate_184_0.jpg: 1126988\n",
            "plate_132_1.jpg: T\n",
            "plate_146_0.jpg: 228 T 180\n",
            "plate_81_0.jpg: 6491T7T\n",
            "plate_1_0.jpg: 9116 T 173\n",
            "plate_24_0.jpg: T1\n",
            "plate_32_0.jpg: 3593T8\n",
            "plate_61_0.jpg: \n",
            "plate_131_0.jpg: 6603 T14\n",
            "plate_110_0.jpg: T5٥T T\n",
            "plate_119_0.jpg: :75~3 6560\n",
            "plate_91_0.jpg: 9240T140\n",
            "plate_155_0.jpg: 7645 T 170\n",
            "plate_154_0.jpg: [71L5215\n",
            "plate_67_0.jpg: 8053 T177[\n",
            "plate_197_0.jpg: 4716  T 135[\n",
            "plate_205_0.jpg: T(\n",
            "plate_202_0.jpg: / 5973 T T9|\n",
            "plate_203_0.jpg: 0225   T 10٥\n",
            "plate_83_0.jpg: 903 2 T 148\n",
            "plate_171_0.jpg: T 155|1$029\n",
            "plate_13_0.jpg: T!6ET\n",
            "plate_60_0.jpg: 0L097( T\n",
            "plate_69_0.jpg: 12661/4T\n",
            "plate_112_0.jpg: 5333 T 100\n",
            "plate_30_0.jpg: 156864\n",
            "plate_189_0.jpg: [03T1٥1\n",
            "plate_58_0.jpg: 9240T140\n",
            "plate_186_0.jpg: 7703 T 88\n",
            "plate_127_0.jpg: 06 404 T131\n",
            "plate_63_0.jpg: 0950:T\n",
            "plate_46_0.jpg: 369 T T1٥\n",
            "plate_153_0.jpg: 3747 T 161\n",
            "plate_21_0.jpg: 9699   T 105|\n",
            "plate_55_0.jpg: 76T2714_\n",
            "plate_43_0.jpg: &590 T135\n",
            "plate_52_1.jpg: [5371\n",
            "plate_7_0.jpg: 6٥٦٥ T3٥T\n",
            "plate_100_0.jpg: :304 T 60 |\n",
            "plate_206_0.jpg: 8409 T 138\n",
            "plate_199_0.jpg: 239  T 114\n",
            "plate_16_0.jpg: 4790 T 143\n",
            "plate_53_0.jpg: |90T9848\n",
            "plate_169_0.jpg: « 96T5370\n",
            "plate_76_0.jpg: [151::31866\n",
            "plate_82_0.jpg: 2786 T113\n",
            "plate_37_0.jpg: 9640 T 62\n",
            "plate_109_0.jpg: T5\n",
            "plate_86_0.jpg: 5043   T 72\n",
            "plate_129_0.jpg: [7T1107\n",
            "plate_148_0.jpg: 1391\n",
            "plate_33_0.jpg: 5590T 167\n",
            "plate_4_0.jpg: 76T2714\n",
            "plate_181_0.jpg: 1510095\n",
            "plate_150_0.jpg: T 87_8179\n",
            "plate_19_0.jpg: -1584820 T ,\n",
            "plate_168_0.jpg: 266٥7\n",
            "plate_167_0.jpg: |48/59~3T[\n",
            "plate_204_0.jpg: 05٥3 5T25|\n",
            "plate_18_0.jpg: 886386 \n",
            "plate_87_0.jpg: 2T5 T5T1\n",
            "plate_11_0.jpg: \n",
            "plate_57_0.jpg: &590 T135\n",
            "plate_20_0.jpg: 93T1578\n",
            "plate_101_0.jpg: 5864 T 164\n",
            "plate_10_0.jpg: 029/ T 127T\n",
            "plate_107_0.jpg: 5٥L T 7[\n",
            "plate_198_0.jpg: 9996 T 130\n",
            "plate_208_0.jpg: /819062\n",
            "plate_92_0.jpg: 1293973\n",
            "plate_51_0.jpg: 4293  T 91\n",
            "plate_195_0.jpg: 382 T 87[\n",
            "plate_52_0.jpg: 8894 T 159.|\n",
            "plate_28_0.jpg: 5390\n",
            "plate_59_0.jpg: 2142  T 167|\n",
            "plate_89_0.jpg: 7842;:T70[\n",
            "plate_115_0.jpg: 111.32799}\n",
            "plate_173_0.jpg: 9933   T 133|\n",
            "plate_102_0.jpg: 7083 T 188\n",
            "plate_94_0.jpg: 8208 T 126[\n",
            "plate_128_0.jpg: 90T7708\n",
            "plate_190_0.jpg: 9128 T 145\n",
            "plate_31_0.jpg: 5ET9 T T1T\n",
            "plate_124_0.jpg: 1608806T\n",
            "plate_44_0.jpg: T|2? 7T\n",
            "plate_40_0.jpg: 3734  T 96\n",
            "plate_172_0.jpg: 1881222\n",
            "plate_47_0.jpg: 06777 T 100|\n",
            "plate_209_0.jpg: 1311396\n",
            "plate_93_0.jpg: 8600 T 65[\n",
            "plate_65_0.jpg: |656646\n",
            "plate_132_0.jpg: [595567\n",
            "plate_144_0.jpg: |90T9848\n",
            "plate_72_0.jpg: 6088 T 125\n",
            "plate_9_0.jpg: 390 1 T T2\n",
            "plate_126_0.jpg: T1 T6950\n",
            "plate_137_0.jpg: 1397\"T90\n",
            "plate_99_0.jpg: 3222T153\n",
            "plate_62_0.jpg: 1196926\n",
            "plate_79_0.jpg: 965370 T\n",
            "plate_42_0.jpg: 13 4 T T T3T\n",
            "plate_152_0.jpg: &248 T 84\n",
            "plate_159_0.jpg: 4999T5T774\n",
            "plate_192_0.jpg: 820 T 132\n",
            "plate_64_0.jpg: 9295T27T\n",
            "plate_163_0.jpg: 3973 T 29|\n",
            "plate_26_0.jpg: T& 35٥  T\n",
            "plate_134_0.jpg: |73T1612\n",
            "plate_98_0.jpg: 1714 T T14\n",
            "plate_71_0.jpg: 799770   T\n",
            "plate_38_0.jpg: 4041 T 160\n",
            "plate_175_0.jpg: 1649053\n",
            "plate_0_0.jpg: [94T573\n",
            "plate_2_0.jpg: 152T\n",
            "plate_66_0.jpg: 150 ?17T\n",
            "plate_125_0.jpg: 007530 T\n",
            "plate_157_0.jpg: 1701 T 116\n",
            "plate_73_0.jpg: T 9573\n",
            "plate_70_0.jpg: 2854 T 177\n",
            "plate_22_0.jpg: 1510095\n",
            "plate_201_0.jpg: | 1٥٥T543\n",
            "plate_118_0.jpg: 2720T75[\n",
            "plate_120_0.jpg: 4712 T 177\n",
            "plate_14_0.jpg: 1332 T49[\n",
            "plate_143_0.jpg: [277 T 91[\n",
            "plate_78_0.jpg: 6559 T 121[\n",
            "plate_140_0.jpg: T 87,8179\n",
            "plate_80_0.jpg: 3567-T~ ?15:\n",
            "plate_117_0.jpg: 1204;;8917\n",
            "plate_151_0.jpg: 4293   T 91\n",
            "plate_95_0.jpg: 054055\n",
            "plate_96_0.jpg: 1077 T 170\n",
            "plate_183_0.jpg: T\n",
            "plate_54_0.jpg: 2171 T 122[\n",
            "plate_103_0.jpg: 8512  T T9\n",
            "plate_49_0.jpg: |5333 T 108|\n",
            "plate_74_0.jpg: 2580 T 61\n",
            "plate_191_0.jpg: /8723 T 3 5[\n",
            "plate_130_0.jpg: 6756 T 192\n",
            "plate_123_0.jpg: 9670   T 110[\n",
            "plate_111_0.jpg: 0159 T 137\n",
            "plate_200_0.jpg: 53327 T-T35T\n",
            "plate_35_0.jpg: [116-;3668\n",
            "plate_88_0.jpg: [92 85\n",
            "plate_179_0.jpg: |7LT1653\n",
            "plate_160_0.jpg: 735\n",
            "plate_196_0.jpg: 8179 T 87\n",
            "plate_68_0.jpg: 9065 T T 14\n",
            "plate_90_0.jpg: 870 T 131/\n",
            "plate_114_0.jpg: T\n",
            "plate_149_0.jpg: 1355906\n",
            "plate_75_0.jpg: 1951823   T\n",
            "plate_34_0.jpg: 2123;T119\n",
            "plate_36_0.jpg: 7369 T 87\n",
            "plate_194_0.jpg: [44:2\n",
            "plate_122_0.jpg: T 894187\n",
            "plate_108_0.jpg: 1365 T 94|\n",
            "plate_176_0.jpg: 117 ;3909\n",
            "plate_113_0.jpg: 1599685\n",
            "plate_41_0.jpg: ]6569 T 62\n",
            "plate_164_0.jpg: 1T1T T 180\n",
            "plate_121_0.jpg: IT 7T T\n",
            "plate_6_0.jpg: T 180228\n",
            "plate_116_0.jpg: 1236324\n",
            "plate_141_0.jpg: .37T.3019.\n",
            "plate_106_0.jpg: 6829 T 110.\n",
            "plate_138_0.jpg: 19044:T169\n",
            "plate_177_0.jpg: 8032T36[\n",
            "plate_104_0.jpg: T &T T 5[\n",
            "plate_139_0.jpg: T 1465543T\n",
            "plate_3_0.jpg: 3839 T:T 92|\n",
            "plate_178_0.jpg: T 1605065\n",
            "plate_135_0.jpg: 799778 T\n",
            "plate_158_0.jpg: 1747   T127\n",
            "plate_23_0.jpg: 109\"658\n",
            "plate_84_0.jpg: T\n",
            "plate_27_0.jpg: 8959 T 153:\n",
            "plate_77_0.jpg: 100543   T\n",
            "plate_56_0.jpg: 5257 T 167|\n",
            "plate_136_0.jpg: 7703 T 88\n",
            "plate_15_0.jpg: 710 T 95\n",
            "plate_156_0.jpg: 5043 T72\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import csv\n",
        "\n",
        "output_csv_file = \"Sample_submission.csv\"\n",
        "\n",
        "with open(output_csv_file, mode='w', newline='', encoding='utf-8') as csvfile:\n",
        "    writer = csv.writer(csvfile)\n",
        "    writer.writerow(['ImageFileName', 'OCR_Result'])\n",
        "\n",
        "    for img_name, ocr_text in ocr_output.items():\n",
        "        writer.writerow([img_name, ocr_text])\n",
        "\n",
        "print(f\"CSV file created: {output_csv_file}\")\n"
      ],
      "metadata": {
        "id": "ay61dD32h6NT",
        "outputId": "4ab8dcd5-e0c2-432b-c632-b805a44277ec",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "id": "ay61dD32h6NT",
      "execution_count": 22,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "CSV file created: Sample_submission.csv\n"
          ]
        }
      ]
    }
  ],
  "metadata": {
    "accelerator": "GPU",
    "colab": {
      "gpuType": "T4",
      "provenance": []
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.12.7"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}
